// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie
{
    public static class GetSchedule
    {
        /// <summary>
        /// Manages a Schedule within Opsgenie.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Opsgenie = Pulumi.Opsgenie;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Opsgenie.GetSchedule.InvokeAsync(new Opsgenie.GetScheduleArgs
        ///         {
        ///             Name = "sre-team schedule",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetScheduleResult> InvokeAsync(GetScheduleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScheduleResult>("opsgenie:index/getSchedule:getSchedule", args ?? new GetScheduleArgs(), options.WithDefaults());

        /// <summary>
        /// Manages a Schedule within Opsgenie.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Opsgenie = Pulumi.Opsgenie;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Opsgenie.GetSchedule.InvokeAsync(new Opsgenie.GetScheduleArgs
        ///         {
        ///             Name = "sre-team schedule",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetScheduleResult> Invoke(GetScheduleInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetScheduleResult>("opsgenie:index/getSchedule:getSchedule", args ?? new GetScheduleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScheduleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// Enable/disable state of schedule
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Name of the schedule.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Owner team id of the schedule.
        /// </summary>
        [Input("ownerTeamId")]
        public string? OwnerTeamId { get; set; }

        /// <summary>
        /// The description of schedule.
        /// </summary>
        [Input("timezone")]
        public string? Timezone { get; set; }

        public GetScheduleArgs()
        {
        }
    }

    public sealed class GetScheduleInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable/disable state of schedule
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Name of the schedule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Owner team id of the schedule.
        /// </summary>
        [Input("ownerTeamId")]
        public Input<string>? OwnerTeamId { get; set; }

        /// <summary>
        /// The description of schedule.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public GetScheduleInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetScheduleResult
    {
        /// <summary>
        /// Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Enable/disable state of schedule
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Owner team id of the schedule.
        /// </summary>
        public readonly string? OwnerTeamId;
        /// <summary>
        /// The description of schedule.
        /// </summary>
        public readonly string? Timezone;

        [OutputConstructor]
        private GetScheduleResult(
            string? description,

            bool? enabled,

            string id,

            string name,

            string? ownerTeamId,

            string? timezone)
        {
            Description = description;
            Enabled = enabled;
            Id = id;
            Name = name;
            OwnerTeamId = ownerTeamId;
            Timezone = timezone;
        }
    }
}

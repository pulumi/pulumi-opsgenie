// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie
{
    /// <summary>
    /// Manages custom user roles within Opsgenie.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Opsgenie = Pulumi.Opsgenie;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Opsgenie.CustomRole("test", new Opsgenie.CustomRoleArgs
    ///         {
    ///             DisallowedRights = 
    ///             {
    ///                 "profile-edit",
    ///                 "contacts-edit",
    ///             },
    ///             ExtendedRole = "user",
    ///             GrantedRights = 
    ///             {
    ///                 "alert-delete",
    ///             },
    ///             RoleName = "genierole",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class CustomRole : Pulumi.CustomResource
    {
        /// <summary>
        /// The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        [Output("disallowedRights")]
        public Output<ImmutableArray<string>> DisallowedRights { get; private set; } = null!;

        /// <summary>
        /// The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        /// </summary>
        [Output("extendedRole")]
        public Output<string?> ExtendedRole { get; private set; } = null!;

        /// <summary>
        /// The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        [Output("grantedRights")]
        public Output<ImmutableArray<string>> GrantedRights { get; private set; } = null!;

        /// <summary>
        /// Name of the custom role.
        /// </summary>
        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;


        /// <summary>
        /// Create a CustomRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomRole(string name, CustomRoleArgs args, CustomResourceOptions? options = null)
            : base("opsgenie:index/customRole:CustomRole", name, args ?? new CustomRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomRole(string name, Input<string> id, CustomRoleState? state = null, CustomResourceOptions? options = null)
            : base("opsgenie:index/customRole:CustomRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomRole Get(string name, Input<string> id, CustomRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomRole(name, id, state, options);
        }
    }

    public sealed class CustomRoleArgs : Pulumi.ResourceArgs
    {
        [Input("disallowedRights")]
        private InputList<string>? _disallowedRights;

        /// <summary>
        /// The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        public InputList<string> DisallowedRights
        {
            get => _disallowedRights ?? (_disallowedRights = new InputList<string>());
            set => _disallowedRights = value;
        }

        /// <summary>
        /// The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        /// </summary>
        [Input("extendedRole")]
        public Input<string>? ExtendedRole { get; set; }

        [Input("grantedRights")]
        private InputList<string>? _grantedRights;

        /// <summary>
        /// The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        public InputList<string> GrantedRights
        {
            get => _grantedRights ?? (_grantedRights = new InputList<string>());
            set => _grantedRights = value;
        }

        /// <summary>
        /// Name of the custom role.
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public CustomRoleArgs()
        {
        }
    }

    public sealed class CustomRoleState : Pulumi.ResourceArgs
    {
        [Input("disallowedRights")]
        private InputList<string>? _disallowedRights;

        /// <summary>
        /// The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        public InputList<string> DisallowedRights
        {
            get => _disallowedRights ?? (_disallowedRights = new InputList<string>());
            set => _disallowedRights = value;
        }

        /// <summary>
        /// The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        /// </summary>
        [Input("extendedRole")]
        public Input<string>? ExtendedRole { get; set; }

        [Input("grantedRights")]
        private InputList<string>? _grantedRights;

        /// <summary>
        /// The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        /// </summary>
        public InputList<string> GrantedRights
        {
            get => _grantedRights ?? (_grantedRights = new InputList<string>());
            set => _grantedRights = value;
        }

        /// <summary>
        /// Name of the custom role.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public CustomRoleState()
        {
        }
    }
}

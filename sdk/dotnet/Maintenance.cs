// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie
{
    /// <summary>
    /// Manages a Maintenance within Opsgenie.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Opsgenie = Pulumi.Opsgenie;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Opsgenie.Maintenance("test", new Opsgenie.MaintenanceArgs
    ///         {
    ///             Description = "geniemaintenance-%s",
    ///             Rules = 
    ///             {
    ///                 new Opsgenie.Inputs.MaintenanceRuleArgs
    ///                 {
    ///                     Entities = 
    ///                     {
    ///                         new Opsgenie.Inputs.MaintenanceRuleEntityArgs
    ///                         {
    ///                             Id = opsgenie_email_integration.Test.Id,
    ///                             Type = "integration",
    ///                         },
    ///                     },
    ///                     State = "enabled",
    ///                 },
    ///             },
    ///             Times = 
    ///             {
    ///                 new Opsgenie.Inputs.MaintenanceTimeArgs
    ///                 {
    ///                     EndDate = "2019-06-%dT17:50:00Z",
    ///                     StartDate = "2019-06-20T17:45:00Z",
    ///                     Type = "schedule",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Maintenance policies can be imported using the `policy_id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import opsgenie:index/maintenance:Maintenance test policy_id`
    /// ```
    /// </summary>
    [OpsgenieResourceType("opsgenie:index/maintenance:Maintenance")]
    public partial class Maintenance : Pulumi.CustomResource
    {
        /// <summary>
        /// Description for the maintenance.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.MaintenanceRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields
        /// </summary>
        [Output("times")]
        public Output<ImmutableArray<Outputs.MaintenanceTime>> Times { get; private set; } = null!;


        /// <summary>
        /// Create a Maintenance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Maintenance(string name, MaintenanceArgs args, CustomResourceOptions? options = null)
            : base("opsgenie:index/maintenance:Maintenance", name, args ?? new MaintenanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Maintenance(string name, Input<string> id, MaintenanceState? state = null, CustomResourceOptions? options = null)
            : base("opsgenie:index/maintenance:Maintenance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Maintenance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Maintenance Get(string name, Input<string> id, MaintenanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Maintenance(name, id, state, options);
        }
    }

    public sealed class MaintenanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description for the maintenance.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("rules", required: true)]
        private InputList<Inputs.MaintenanceRuleArgs>? _rules;

        /// <summary>
        /// Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.
        /// </summary>
        public InputList<Inputs.MaintenanceRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.MaintenanceRuleArgs>());
            set => _rules = value;
        }

        [Input("times")]
        private InputList<Inputs.MaintenanceTimeArgs>? _times;

        /// <summary>
        /// Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields
        /// </summary>
        public InputList<Inputs.MaintenanceTimeArgs> Times
        {
            get => _times ?? (_times = new InputList<Inputs.MaintenanceTimeArgs>());
            set => _times = value;
        }

        public MaintenanceArgs()
        {
        }
    }

    public sealed class MaintenanceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description for the maintenance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("rules")]
        private InputList<Inputs.MaintenanceRuleGetArgs>? _rules;

        /// <summary>
        /// Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.
        /// </summary>
        public InputList<Inputs.MaintenanceRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.MaintenanceRuleGetArgs>());
            set => _rules = value;
        }

        [Input("times")]
        private InputList<Inputs.MaintenanceTimeGetArgs>? _times;

        /// <summary>
        /// Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields
        /// </summary>
        public InputList<Inputs.MaintenanceTimeGetArgs> Times
        {
            get => _times ?? (_times = new InputList<Inputs.MaintenanceTimeGetArgs>());
            set => _times = value;
        }

        public MaintenanceState()
        {
        }
    }
}

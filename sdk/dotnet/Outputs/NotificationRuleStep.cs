// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie.Outputs
{

    [OutputType]
    public sealed class NotificationRuleStep
    {
        /// <summary>
        /// Defines the contact that notification will be sent to. This is a block, structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.NotificationRuleStepContact> Contacts;
        /// <summary>
        /// Defined if this step is enabled. Default: `True`
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Time period, in minutes, notification will be sent after.
        /// </summary>
        public readonly int? SendAfter;

        [OutputConstructor]
        private NotificationRuleStep(
            ImmutableArray<Outputs.NotificationRuleStepContact> contacts,

            bool? enabled,

            int? sendAfter)
        {
            Contacts = contacts;
            Enabled = enabled;
            SendAfter = sendAfter;
        }
    }
}

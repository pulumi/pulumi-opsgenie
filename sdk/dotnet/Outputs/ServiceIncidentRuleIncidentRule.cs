// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie.Outputs
{

    [OutputType]
    public sealed class ServiceIncidentRuleIncidentRule
    {
        /// <summary>
        /// A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
        /// </summary>
        public readonly string? ConditionMatchType;
        /// <summary>
        /// Conditions applied to incident. This is a block, structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceIncidentRuleIncidentRuleCondition> Conditions;
        /// <summary>
        /// Properties for incident rule. This is a block, structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceIncidentRuleIncidentRuleIncidentProperty> IncidentProperties;

        [OutputConstructor]
        private ServiceIncidentRuleIncidentRule(
            string? conditionMatchType,

            ImmutableArray<Outputs.ServiceIncidentRuleIncidentRuleCondition> conditions,

            ImmutableArray<Outputs.ServiceIncidentRuleIncidentRuleIncidentProperty> incidentProperties)
        {
            ConditionMatchType = conditionMatchType;
            Conditions = conditions;
            IncidentProperties = incidentProperties;
        }
    }
}

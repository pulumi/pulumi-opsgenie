// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie.Outputs
{

    [OutputType]
    public sealed class EscalationRule
    {
        /// <summary>
        /// The condition for notifying the recipient of escalation rule that is based on the alert state. Possible values are: if-not-acked and if-not-closed. If not given, if-not-acked is used.
        /// </summary>
        public readonly string Condition;
        /// <summary>
        /// Time delay of the escalation rule. This parameter takes an object that consists timeAmount field that takes time amount in minutes.
        /// </summary>
        public readonly int Delay;
        /// <summary>
        /// Recipient calculation logic for schedules. Possible values are:
        /// ```csharp
        /// using Pulumi;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///     }
        /// 
        /// }
        /// ```
        /// </summary>
        public readonly string NotifyType;
        /// <summary>
        /// Object of schedule, team, or users which will be notified in escalation. The possible values for participants are: user, schedule, team.
        /// </summary>
        public readonly ImmutableArray<Outputs.EscalationRuleRecipient> Recipients;

        [OutputConstructor]
        private EscalationRule(
            string condition,

            int delay,

            string notifyType,

            ImmutableArray<Outputs.EscalationRuleRecipient> recipients)
        {
            Condition = condition;
            Delay = delay;
            NotifyType = notifyType;
            Recipients = recipients;
        }
    }
}

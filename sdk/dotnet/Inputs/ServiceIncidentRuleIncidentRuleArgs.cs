// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Opsgenie.Inputs
{

    public sealed class ServiceIncidentRuleIncidentRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
        /// </summary>
        [Input("conditionMatchType")]
        public Input<string>? ConditionMatchType { get; set; }

        [Input("conditions")]
        private InputList<Inputs.ServiceIncidentRuleIncidentRuleConditionArgs>? _conditions;

        /// <summary>
        /// Conditions applied to incident. This is a block, structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceIncidentRuleIncidentRuleConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.ServiceIncidentRuleIncidentRuleConditionArgs>());
            set => _conditions = value;
        }

        [Input("incidentProperties", required: true)]
        private InputList<Inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs>? _incidentProperties;

        /// <summary>
        /// Properties for incident rule. This is a block, structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs> IncidentProperties
        {
            get => _incidentProperties ?? (_incidentProperties = new InputList<Inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs>());
            set => _incidentProperties = value;
        }

        public ServiceIncidentRuleIncidentRuleArgs()
        {
        }
        public static new ServiceIncidentRuleIncidentRuleArgs Empty => new ServiceIncidentRuleIncidentRuleArgs();
    }
}

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = ['CustomRole']


class CustomRole(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 disallowed_rights: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 extended_role: Optional[pulumi.Input[str]] = None,
                 granted_rights: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 role_name: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Manages custom user roles within Opsgenie.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_opsgenie as opsgenie

        test = opsgenie.CustomRole("test",
            disallowed_rights=[
                "profile-edit",
                "contacts-edit",
            ],
            extended_role="user",
            granted_rights=["alert-delete"],
            role_name="genierole")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disallowed_rights: The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        :param pulumi.Input[str] extended_role: The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        :param pulumi.Input[Sequence[pulumi.Input[str]]] granted_rights: The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        :param pulumi.Input[str] role_name: Name of the custom role.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['disallowed_rights'] = disallowed_rights
            __props__['extended_role'] = extended_role
            __props__['granted_rights'] = granted_rights
            if role_name is None and not opts.urn:
                raise TypeError("Missing required property 'role_name'")
            __props__['role_name'] = role_name
        super(CustomRole, __self__).__init__(
            'opsgenie:index/customRole:CustomRole',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            disallowed_rights: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            extended_role: Optional[pulumi.Input[str]] = None,
            granted_rights: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            role_name: Optional[pulumi.Input[str]] = None) -> 'CustomRole':
        """
        Get an existing CustomRole resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disallowed_rights: The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        :param pulumi.Input[str] extended_role: The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        :param pulumi.Input[Sequence[pulumi.Input[str]]] granted_rights: The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        :param pulumi.Input[str] role_name: Name of the custom role.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["disallowed_rights"] = disallowed_rights
        __props__["extended_role"] = extended_role
        __props__["granted_rights"] = granted_rights
        __props__["role_name"] = role_name
        return CustomRole(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="disallowedRights")
    def disallowed_rights(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        """
        return pulumi.get(self, "disallowed_rights")

    @property
    @pulumi.getter(name="extendedRole")
    def extended_role(self) -> pulumi.Output[Optional[str]]:
        """
        The role from which this role has been derived. Allowed Values: "user", "observer", "stakeholder".
        """
        return pulumi.get(self, "extended_role")

    @property
    @pulumi.getter(name="grantedRights")
    def granted_rights(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
        """
        return pulumi.get(self, "granted_rights")

    @property
    @pulumi.getter(name="roleName")
    def role_name(self) -> pulumi.Output[str]:
        """
        Name of the custom role.
        """
        return pulumi.get(self, "role_name")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop


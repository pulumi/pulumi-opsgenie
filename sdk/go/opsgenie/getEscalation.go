// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsgenie

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Escalation within Opsgenie.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := opsgenie.LookupEscalation(ctx, &opsgenie.LookupEscalationArgs{
// 			Name: "existing-escalation",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupEscalation(ctx *pulumi.Context, args *LookupEscalationArgs, opts ...pulumi.InvokeOption) (*LookupEscalationResult, error) {
	var rv LookupEscalationResult
	err := ctx.Invoke("opsgenie:index/getEscalation:getEscalation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEscalation.
type LookupEscalationArgs struct {
	// Escalation Description
	Description *string `pulumi:"description"`
	// Name of the escalation.
	Name string `pulumi:"name"`
	// If owner team exist the id of the team is exported
	OwnerTeamId *string `pulumi:"ownerTeamId"`
	// Escalation repeat preferences
	Repeats []GetEscalationRepeat `pulumi:"repeats"`
	// Escalation rules
	Rules []GetEscalationRule `pulumi:"rules"`
}

// A collection of values returned by getEscalation.
type LookupEscalationResult struct {
	// Escalation Description
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// If owner team exist the id of the team is exported
	OwnerTeamId *string `pulumi:"ownerTeamId"`
	// Escalation repeat preferences
	Repeats []GetEscalationRepeat `pulumi:"repeats"`
	// Escalation rules
	Rules []GetEscalationRule `pulumi:"rules"`
}

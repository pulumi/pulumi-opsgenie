// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsgenie

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Incident Template within Opsgenie.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		testTeam, err := opsgenie.NewTeam(ctx, "testTeam", &opsgenie.TeamArgs{
// 			Description: pulumi.String("This team deals with all the things"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		testService, err := opsgenie.NewService(ctx, "testService", &opsgenie.ServiceArgs{
// 			TeamId: testTeam.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = opsgenie.NewIncidentTemplate(ctx, "testIncidentTemplate", &opsgenie.IncidentTemplateArgs{
// 			Message:  pulumi.String("Incident Message"),
// 			Priority: pulumi.String("P2"),
// 			StakeholderProperties: opsgenie.IncidentTemplateStakeholderPropertyArray{
// 				&opsgenie.IncidentTemplateStakeholderPropertyArgs{
// 					Enable:      pulumi.Bool(true),
// 					Message:     pulumi.String("Stakeholder Message"),
// 					Description: pulumi.String("Stakeholder Description"),
// 				},
// 			},
// 			Tags: pulumi.StringArray{
// 				pulumi.String("tag1"),
// 				pulumi.String("tag2"),
// 			},
// 			Description: pulumi.String("Incident Description"),
// 			Details: pulumi.StringMap{
// 				"key1": pulumi.String("value1"),
// 				"key2": pulumi.String("value2"),
// 			},
// 			ImpactedServices: pulumi.StringArray{
// 				testService.ID(),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Service can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import opsgenie:index/incidentTemplate:IncidentTemplate test 812be1a1-32c8-4666-a7fb-03ecc385106c`
// ```
type IncidentTemplate struct {
	pulumi.CustomResourceState

	// Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.
	Details          pulumi.StringMapOutput   `pulumi:"details"`
	ImpactedServices pulumi.StringArrayOutput `pulumi:"impactedServices"`
	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message pulumi.StringOutput `pulumi:"message"`
	// Name of the incident template.
	Name pulumi.StringOutput `pulumi:"name"`
	// Priority level of the incident. Possible values are P1, P2, P3, P4 and P5.
	Priority              pulumi.StringOutput                            `pulumi:"priority"`
	StakeholderProperties IncidentTemplateStakeholderPropertyArrayOutput `pulumi:"stakeholderProperties"`
	// Tags of the incident template.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewIncidentTemplate registers a new resource with the given unique name, arguments, and options.
func NewIncidentTemplate(ctx *pulumi.Context,
	name string, args *IncidentTemplateArgs, opts ...pulumi.ResourceOption) (*IncidentTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Message == nil {
		return nil, errors.New("invalid value for required argument 'Message'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.StakeholderProperties == nil {
		return nil, errors.New("invalid value for required argument 'StakeholderProperties'")
	}
	var resource IncidentTemplate
	err := ctx.RegisterResource("opsgenie:index/incidentTemplate:IncidentTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIncidentTemplate gets an existing IncidentTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIncidentTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IncidentTemplateState, opts ...pulumi.ResourceOption) (*IncidentTemplate, error) {
	var resource IncidentTemplate
	err := ctx.ReadResource("opsgenie:index/incidentTemplate:IncidentTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IncidentTemplate resources.
type incidentTemplateState struct {
	// Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.
	Description *string `pulumi:"description"`
	// Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.
	Details          map[string]string `pulumi:"details"`
	ImpactedServices []string          `pulumi:"impactedServices"`
	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message *string `pulumi:"message"`
	// Name of the incident template.
	Name *string `pulumi:"name"`
	// Priority level of the incident. Possible values are P1, P2, P3, P4 and P5.
	Priority              *string                               `pulumi:"priority"`
	StakeholderProperties []IncidentTemplateStakeholderProperty `pulumi:"stakeholderProperties"`
	// Tags of the incident template.
	Tags []string `pulumi:"tags"`
}

type IncidentTemplateState struct {
	// Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.
	Description pulumi.StringPtrInput
	// Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.
	Details          pulumi.StringMapInput
	ImpactedServices pulumi.StringArrayInput
	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message pulumi.StringPtrInput
	// Name of the incident template.
	Name pulumi.StringPtrInput
	// Priority level of the incident. Possible values are P1, P2, P3, P4 and P5.
	Priority              pulumi.StringPtrInput
	StakeholderProperties IncidentTemplateStakeholderPropertyArrayInput
	// Tags of the incident template.
	Tags pulumi.StringArrayInput
}

func (IncidentTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentTemplateState)(nil)).Elem()
}

type incidentTemplateArgs struct {
	// Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.
	Description *string `pulumi:"description"`
	// Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.
	Details          map[string]string `pulumi:"details"`
	ImpactedServices []string          `pulumi:"impactedServices"`
	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message string `pulumi:"message"`
	// Name of the incident template.
	Name *string `pulumi:"name"`
	// Priority level of the incident. Possible values are P1, P2, P3, P4 and P5.
	Priority              string                                `pulumi:"priority"`
	StakeholderProperties []IncidentTemplateStakeholderProperty `pulumi:"stakeholderProperties"`
	// Tags of the incident template.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a IncidentTemplate resource.
type IncidentTemplateArgs struct {
	// Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.
	Description pulumi.StringPtrInput
	// Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.
	Details          pulumi.StringMapInput
	ImpactedServices pulumi.StringArrayInput
	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message pulumi.StringInput
	// Name of the incident template.
	Name pulumi.StringPtrInput
	// Priority level of the incident. Possible values are P1, P2, P3, P4 and P5.
	Priority              pulumi.StringInput
	StakeholderProperties IncidentTemplateStakeholderPropertyArrayInput
	// Tags of the incident template.
	Tags pulumi.StringArrayInput
}

func (IncidentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*incidentTemplateArgs)(nil)).Elem()
}

type IncidentTemplateInput interface {
	pulumi.Input

	ToIncidentTemplateOutput() IncidentTemplateOutput
	ToIncidentTemplateOutputWithContext(ctx context.Context) IncidentTemplateOutput
}

func (IncidentTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTemplate)(nil)).Elem()
}

func (i IncidentTemplate) ToIncidentTemplateOutput() IncidentTemplateOutput {
	return i.ToIncidentTemplateOutputWithContext(context.Background())
}

func (i IncidentTemplate) ToIncidentTemplateOutputWithContext(ctx context.Context) IncidentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentTemplateOutput)
}

type IncidentTemplateOutput struct {
	*pulumi.OutputState
}

func (IncidentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentTemplateOutput)(nil)).Elem()
}

func (o IncidentTemplateOutput) ToIncidentTemplateOutput() IncidentTemplateOutput {
	return o
}

func (o IncidentTemplateOutput) ToIncidentTemplateOutputWithContext(ctx context.Context) IncidentTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(IncidentTemplateOutput{})
}

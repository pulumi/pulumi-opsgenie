// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsgenie

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Team within Opsgenie.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		first, err := opsgenie.NewUser(ctx, "first", &opsgenie.UserArgs{
// 			FullName: pulumi.String("name "),
// 			Role:     pulumi.String("User"),
// 			Username: pulumi.String("user@domain.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		second, err := opsgenie.NewUser(ctx, "second", &opsgenie.UserArgs{
// 			FullName: pulumi.String("name "),
// 			Role:     pulumi.String("User"),
// 			Username: pulumi.String("test@domain.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = opsgenie.NewTeam(ctx, "test", &opsgenie.TeamArgs{
// 			Description: pulumi.String("This team deals with all the things"),
// 			Members: opsgenie.TeamMemberArray{
// 				&opsgenie.TeamMemberArgs{
// 					Id:   first.ID(),
// 					Role: pulumi.String("admin"),
// 				},
// 				&opsgenie.TeamMemberArgs{
// 					Id:   second.ID(),
// 					Role: pulumi.String("user"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = opsgenie.NewTeam(ctx, "self_service", &opsgenie.TeamArgs{
// 			DeleteDefaultResources: pulumi.Bool(true),
// 			Description:            pulumi.String("Membership in this team is managed via OpsGenie web UI only"),
// 			IgnoreMembers:          pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Teams can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import opsgenie:index/team:Team team1 812be1a1-32c8-4666-a7fb-03ecc385106c`
// ```
type Team struct {
	pulumi.CustomResourceState

	// Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**
	DeleteDefaultResources pulumi.BoolPtrOutput `pulumi:"deleteDefaultResources"`
	// A description for this team.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Defaults to false.
	IgnoreMembers pulumi.BoolPtrOutput `pulumi:"ignoreMembers"`
	// A Member block as documented below.
	Members TeamMemberArrayOutput `pulumi:"members"`
	// The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewTeam registers a new resource with the given unique name, arguments, and options.
func NewTeam(ctx *pulumi.Context,
	name string, args *TeamArgs, opts ...pulumi.ResourceOption) (*Team, error) {
	if args == nil {
		args = &TeamArgs{}
	}

	var resource Team
	err := ctx.RegisterResource("opsgenie:index/team:Team", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeam gets an existing Team resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamState, opts ...pulumi.ResourceOption) (*Team, error) {
	var resource Team
	err := ctx.ReadResource("opsgenie:index/team:Team", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Team resources.
type teamState struct {
	// Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**
	DeleteDefaultResources *bool `pulumi:"deleteDefaultResources"`
	// A description for this team.
	Description *string `pulumi:"description"`
	// Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Defaults to false.
	IgnoreMembers *bool `pulumi:"ignoreMembers"`
	// A Member block as documented below.
	Members []TeamMember `pulumi:"members"`
	// The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.
	Name *string `pulumi:"name"`
}

type TeamState struct {
	// Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**
	DeleteDefaultResources pulumi.BoolPtrInput
	// A description for this team.
	Description pulumi.StringPtrInput
	// Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Defaults to false.
	IgnoreMembers pulumi.BoolPtrInput
	// A Member block as documented below.
	Members TeamMemberArrayInput
	// The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.
	Name pulumi.StringPtrInput
}

func (TeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamState)(nil)).Elem()
}

type teamArgs struct {
	// Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**
	DeleteDefaultResources *bool `pulumi:"deleteDefaultResources"`
	// A description for this team.
	Description *string `pulumi:"description"`
	// Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Defaults to false.
	IgnoreMembers *bool `pulumi:"ignoreMembers"`
	// A Member block as documented below.
	Members []TeamMember `pulumi:"members"`
	// The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Team resource.
type TeamArgs struct {
	// Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**
	DeleteDefaultResources pulumi.BoolPtrInput
	// A description for this team.
	Description pulumi.StringPtrInput
	// Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Defaults to false.
	IgnoreMembers pulumi.BoolPtrInput
	// A Member block as documented below.
	Members TeamMemberArrayInput
	// The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.
	Name pulumi.StringPtrInput
}

func (TeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamArgs)(nil)).Elem()
}

type TeamInput interface {
	pulumi.Input

	ToTeamOutput() TeamOutput
	ToTeamOutputWithContext(ctx context.Context) TeamOutput
}

func (Team) ElementType() reflect.Type {
	return reflect.TypeOf((*Team)(nil)).Elem()
}

func (i Team) ToTeamOutput() TeamOutput {
	return i.ToTeamOutputWithContext(context.Background())
}

func (i Team) ToTeamOutputWithContext(ctx context.Context) TeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeamOutput)
}

type TeamOutput struct {
	*pulumi.OutputState
}

func (TeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeamOutput)(nil)).Elem()
}

func (o TeamOutput) ToTeamOutput() TeamOutput {
	return o
}

func (o TeamOutput) ToTeamOutputWithContext(ctx context.Context) TeamOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TeamOutput{})
}

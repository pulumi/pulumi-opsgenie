// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotificationPolicyAutoCloseActionDuration {
    /**
     * @return A amount of time in `timeUnits`. This is a integer attribute.
     * 
     */
    private Integer timeAmount;
    /**
     * @return Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
     * 
     */
    private @Nullable String timeUnit;

    private NotificationPolicyAutoCloseActionDuration() {}
    /**
     * @return A amount of time in `timeUnits`. This is a integer attribute.
     * 
     */
    public Integer timeAmount() {
        return this.timeAmount;
    }
    /**
     * @return Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
     * 
     */
    public Optional<String> timeUnit() {
        return Optional.ofNullable(this.timeUnit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationPolicyAutoCloseActionDuration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer timeAmount;
        private @Nullable String timeUnit;
        public Builder() {}
        public Builder(NotificationPolicyAutoCloseActionDuration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.timeAmount = defaults.timeAmount;
    	      this.timeUnit = defaults.timeUnit;
        }

        @CustomType.Setter
        public Builder timeAmount(Integer timeAmount) {
            if (timeAmount == null) {
              throw new MissingRequiredPropertyException("NotificationPolicyAutoCloseActionDuration", "timeAmount");
            }
            this.timeAmount = timeAmount;
            return this;
        }
        @CustomType.Setter
        public Builder timeUnit(@Nullable String timeUnit) {

            this.timeUnit = timeUnit;
            return this;
        }
        public NotificationPolicyAutoCloseActionDuration build() {
            final var _resultValue = new NotificationPolicyAutoCloseActionDuration();
            _resultValue.timeAmount = timeAmount;
            _resultValue.timeUnit = timeUnit;
            return _resultValue;
        }
    }
}

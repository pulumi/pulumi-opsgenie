// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.opsgenie.inputs.ApiIntegrationResponderArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiIntegrationArgs Empty = new ApiIntegrationArgs();

    /**
     * This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.
     * 
     */
    @Import(name="allowWriteAccess")
    private @Nullable Output<Boolean> allowWriteAccess;

    /**
     * @return This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.
     * 
     */
    public Optional<Output<Boolean>> allowWriteAccess() {
        return Optional.ofNullable(this.allowWriteAccess);
    }

    /**
     * This parameter is for specifying whether the integration will be enabled or not. Default: `true`
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return This parameter is for specifying whether the integration will be enabled or not. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="headers")
    private @Nullable Output<Map<String,String>> headers;

    public Optional<Output<Map<String,String>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.
     * 
     */
    @Import(name="ignoreRespondersFromPayload")
    private @Nullable Output<Boolean> ignoreRespondersFromPayload;

    /**
     * @return If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> ignoreRespondersFromPayload() {
        return Optional.ofNullable(this.ignoreRespondersFromPayload);
    }

    /**
     * Name of the integration. Name must be unique for each integration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the integration. Name must be unique for each integration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Owner team id of the integration.
     * 
     */
    @Import(name="ownerTeamId")
    private @Nullable Output<String> ownerTeamId;

    /**
     * @return Owner team id of the integration.
     * 
     */
    public Optional<Output<String>> ownerTeamId() {
        return Optional.ofNullable(this.ownerTeamId);
    }

    /**
     * User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.
     * 
     */
    @Import(name="responders")
    private @Nullable Output<List<ApiIntegrationResponderArgs>> responders;

    /**
     * @return User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.
     * 
     */
    public Optional<Output<List<ApiIntegrationResponderArgs>>> responders() {
        return Optional.ofNullable(this.responders);
    }

    /**
     * If enabled, notifications that come from alerts will be suppressed. Default: `false`.
     * 
     */
    @Import(name="suppressNotifications")
    private @Nullable Output<Boolean> suppressNotifications;

    /**
     * @return If enabled, notifications that come from alerts will be suppressed. Default: `false`.
     * 
     */
    public Optional<Output<Boolean>> suppressNotifications() {
        return Optional.ofNullable(this.suppressNotifications);
    }

    /**
     * Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.
     * 
     */
    @Import(name="webhookUrl")
    private @Nullable Output<String> webhookUrl;

    /**
     * @return It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.
     * 
     */
    public Optional<Output<String>> webhookUrl() {
        return Optional.ofNullable(this.webhookUrl);
    }

    private ApiIntegrationArgs() {}

    private ApiIntegrationArgs(ApiIntegrationArgs $) {
        this.allowWriteAccess = $.allowWriteAccess;
        this.enabled = $.enabled;
        this.headers = $.headers;
        this.ignoreRespondersFromPayload = $.ignoreRespondersFromPayload;
        this.name = $.name;
        this.ownerTeamId = $.ownerTeamId;
        this.responders = $.responders;
        this.suppressNotifications = $.suppressNotifications;
        this.type = $.type;
        this.webhookUrl = $.webhookUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiIntegrationArgs $;

        public Builder() {
            $ = new ApiIntegrationArgs();
        }

        public Builder(ApiIntegrationArgs defaults) {
            $ = new ApiIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowWriteAccess This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder allowWriteAccess(@Nullable Output<Boolean> allowWriteAccess) {
            $.allowWriteAccess = allowWriteAccess;
            return this;
        }

        /**
         * @param allowWriteAccess This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.
         * 
         * @return builder
         * 
         */
        public Builder allowWriteAccess(Boolean allowWriteAccess) {
            return allowWriteAccess(Output.of(allowWriteAccess));
        }

        /**
         * @param enabled This parameter is for specifying whether the integration will be enabled or not. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled This parameter is for specifying whether the integration will be enabled or not. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder headers(@Nullable Output<Map<String,String>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(Map<String,String> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param ignoreRespondersFromPayload If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreRespondersFromPayload(@Nullable Output<Boolean> ignoreRespondersFromPayload) {
            $.ignoreRespondersFromPayload = ignoreRespondersFromPayload;
            return this;
        }

        /**
         * @param ignoreRespondersFromPayload If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreRespondersFromPayload(Boolean ignoreRespondersFromPayload) {
            return ignoreRespondersFromPayload(Output.of(ignoreRespondersFromPayload));
        }

        /**
         * @param name Name of the integration. Name must be unique for each integration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the integration. Name must be unique for each integration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ownerTeamId Owner team id of the integration.
         * 
         * @return builder
         * 
         */
        public Builder ownerTeamId(@Nullable Output<String> ownerTeamId) {
            $.ownerTeamId = ownerTeamId;
            return this;
        }

        /**
         * @param ownerTeamId Owner team id of the integration.
         * 
         * @return builder
         * 
         */
        public Builder ownerTeamId(String ownerTeamId) {
            return ownerTeamId(Output.of(ownerTeamId));
        }

        /**
         * @param responders User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.
         * 
         * @return builder
         * 
         */
        public Builder responders(@Nullable Output<List<ApiIntegrationResponderArgs>> responders) {
            $.responders = responders;
            return this;
        }

        /**
         * @param responders User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.
         * 
         * @return builder
         * 
         */
        public Builder responders(List<ApiIntegrationResponderArgs> responders) {
            return responders(Output.of(responders));
        }

        /**
         * @param responders User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.
         * 
         * @return builder
         * 
         */
        public Builder responders(ApiIntegrationResponderArgs... responders) {
            return responders(List.of(responders));
        }

        /**
         * @param suppressNotifications If enabled, notifications that come from alerts will be suppressed. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder suppressNotifications(@Nullable Output<Boolean> suppressNotifications) {
            $.suppressNotifications = suppressNotifications;
            return this;
        }

        /**
         * @param suppressNotifications If enabled, notifications that come from alerts will be suppressed. Default: `false`.
         * 
         * @return builder
         * 
         */
        public Builder suppressNotifications(Boolean suppressNotifications) {
            return suppressNotifications(Output.of(suppressNotifications));
        }

        /**
         * @param type Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param webhookUrl It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.
         * 
         * @return builder
         * 
         */
        public Builder webhookUrl(@Nullable Output<String> webhookUrl) {
            $.webhookUrl = webhookUrl;
            return this;
        }

        /**
         * @param webhookUrl It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.
         * 
         * @return builder
         * 
         */
        public Builder webhookUrl(String webhookUrl) {
            return webhookUrl(Output.of(webhookUrl));
        }

        public ApiIntegrationArgs build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.opsgenie.inputs.ServiceIncidentRuleIncidentRuleConditionArgs;
import com.pulumi.opsgenie.inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIncidentRuleIncidentRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIncidentRuleIncidentRuleArgs Empty = new ServiceIncidentRuleIncidentRuleArgs();

    /**
     * A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
     * 
     */
    @Import(name="conditionMatchType")
    private @Nullable Output<String> conditionMatchType;

    /**
     * @return A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
     * 
     */
    public Optional<Output<String>> conditionMatchType() {
        return Optional.ofNullable(this.conditionMatchType);
    }

    /**
     * Conditions applied to incident. This is a block, structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<ServiceIncidentRuleIncidentRuleConditionArgs>> conditions;

    /**
     * @return Conditions applied to incident. This is a block, structure is documented below.
     * 
     */
    public Optional<Output<List<ServiceIncidentRuleIncidentRuleConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Properties for incident rule. This is a block, structure is documented below.
     * 
     */
    @Import(name="incidentProperties", required=true)
    private Output<List<ServiceIncidentRuleIncidentRuleIncidentPropertyArgs>> incidentProperties;

    /**
     * @return Properties for incident rule. This is a block, structure is documented below.
     * 
     */
    public Output<List<ServiceIncidentRuleIncidentRuleIncidentPropertyArgs>> incidentProperties() {
        return this.incidentProperties;
    }

    private ServiceIncidentRuleIncidentRuleArgs() {}

    private ServiceIncidentRuleIncidentRuleArgs(ServiceIncidentRuleIncidentRuleArgs $) {
        this.conditionMatchType = $.conditionMatchType;
        this.conditions = $.conditions;
        this.incidentProperties = $.incidentProperties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIncidentRuleIncidentRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIncidentRuleIncidentRuleArgs $;

        public Builder() {
            $ = new ServiceIncidentRuleIncidentRuleArgs();
        }

        public Builder(ServiceIncidentRuleIncidentRuleArgs defaults) {
            $ = new ServiceIncidentRuleIncidentRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionMatchType A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
         * 
         * @return builder
         * 
         */
        public Builder conditionMatchType(@Nullable Output<String> conditionMatchType) {
            $.conditionMatchType = conditionMatchType;
            return this;
        }

        /**
         * @param conditionMatchType A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`
         * 
         * @return builder
         * 
         */
        public Builder conditionMatchType(String conditionMatchType) {
            return conditionMatchType(Output.of(conditionMatchType));
        }

        /**
         * @param conditions Conditions applied to incident. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<ServiceIncidentRuleIncidentRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Conditions applied to incident. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<ServiceIncidentRuleIncidentRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions Conditions applied to incident. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(ServiceIncidentRuleIncidentRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param incidentProperties Properties for incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentProperties(Output<List<ServiceIncidentRuleIncidentRuleIncidentPropertyArgs>> incidentProperties) {
            $.incidentProperties = incidentProperties;
            return this;
        }

        /**
         * @param incidentProperties Properties for incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentProperties(List<ServiceIncidentRuleIncidentRuleIncidentPropertyArgs> incidentProperties) {
            return incidentProperties(Output.of(incidentProperties));
        }

        /**
         * @param incidentProperties Properties for incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentProperties(ServiceIncidentRuleIncidentRuleIncidentPropertyArgs... incidentProperties) {
            return incidentProperties(List.of(incidentProperties));
        }

        public ServiceIncidentRuleIncidentRuleArgs build() {
            if ($.incidentProperties == null) {
                throw new MissingRequiredPropertyException("ServiceIncidentRuleIncidentRuleArgs", "incidentProperties");
            }
            return $;
        }
    }

}

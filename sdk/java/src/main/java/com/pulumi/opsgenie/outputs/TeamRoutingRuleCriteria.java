// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.opsgenie.outputs.TeamRoutingRuleCriteriaCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class TeamRoutingRuleCriteria {
    /**
     * @return List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.
     * 
     */
    private @Nullable List<TeamRoutingRuleCriteriaCondition> conditions;
    /**
     * @return Type of the operation will be applied on conditions. Should be one of `match-all`, `match-any-condition` or `match-all-conditions`.
     * 
     */
    private String type;

    private TeamRoutingRuleCriteria() {}
    /**
     * @return List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.
     * 
     */
    public List<TeamRoutingRuleCriteriaCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    /**
     * @return Type of the operation will be applied on conditions. Should be one of `match-all`, `match-any-condition` or `match-all-conditions`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TeamRoutingRuleCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<TeamRoutingRuleCriteriaCondition> conditions;
        private String type;
        public Builder() {}
        public Builder(TeamRoutingRuleCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder conditions(@Nullable List<TeamRoutingRuleCriteriaCondition> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(TeamRoutingRuleCriteriaCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public TeamRoutingRuleCriteria build() {
            final var _resultValue = new TeamRoutingRuleCriteria();
            _resultValue.conditions = conditions;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}

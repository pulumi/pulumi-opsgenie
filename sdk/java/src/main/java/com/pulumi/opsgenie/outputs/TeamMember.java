// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TeamMember {
    /**
     * @return The UUID for the member to add to this Team.
     * 
     */
    private String id;
    /**
     * @return The role for the user within the Team - can be either `admin` or `user`. Default: `user`.
     * 
     */
    private @Nullable String role;
    private @Nullable String username;

    private TeamMember() {}
    /**
     * @return The UUID for the member to add to this Team.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The role for the user within the Team - can be either `admin` or `user`. Default: `user`.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TeamMember defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String role;
        private @Nullable String username;
        public Builder() {}
        public Builder(TeamMember defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.role = defaults.role;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("TeamMember", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {

            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        public TeamMember build() {
            final var _resultValue = new TeamMember();
            _resultValue.id = id;
            _resultValue.role = role;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}

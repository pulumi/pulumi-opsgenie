// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.opsgenie.outputs.GetEscalationRepeat;
import com.pulumi.opsgenie.outputs.GetEscalationRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEscalationResult {
    /**
     * @return Escalation Description
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return If owner team exist the id of the team is exported
     * 
     */
    private @Nullable String ownerTeamId;
    /**
     * @return Escalation repeat preferences
     * 
     */
    private @Nullable List<GetEscalationRepeat> repeats;
    /**
     * @return Escalation rules
     * 
     */
    private @Nullable List<GetEscalationRule> rules;

    private GetEscalationResult() {}
    /**
     * @return Escalation Description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return If owner team exist the id of the team is exported
     * 
     */
    public Optional<String> ownerTeamId() {
        return Optional.ofNullable(this.ownerTeamId);
    }
    /**
     * @return Escalation repeat preferences
     * 
     */
    public List<GetEscalationRepeat> repeats() {
        return this.repeats == null ? List.of() : this.repeats;
    }
    /**
     * @return Escalation rules
     * 
     */
    public List<GetEscalationRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEscalationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private String id;
        private String name;
        private @Nullable String ownerTeamId;
        private @Nullable List<GetEscalationRepeat> repeats;
        private @Nullable List<GetEscalationRule> rules;
        public Builder() {}
        public Builder(GetEscalationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ownerTeamId = defaults.ownerTeamId;
    	      this.repeats = defaults.repeats;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEscalationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEscalationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ownerTeamId(@Nullable String ownerTeamId) {

            this.ownerTeamId = ownerTeamId;
            return this;
        }
        @CustomType.Setter
        public Builder repeats(@Nullable List<GetEscalationRepeat> repeats) {

            this.repeats = repeats;
            return this;
        }
        public Builder repeats(GetEscalationRepeat... repeats) {
            return repeats(List.of(repeats));
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<GetEscalationRule> rules) {

            this.rules = rules;
            return this;
        }
        public Builder rules(GetEscalationRule... rules) {
            return rules(List.of(rules));
        }
        public GetEscalationResult build() {
            final var _resultValue = new GetEscalationResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ownerTeamId = ownerTeamId;
            _resultValue.repeats = repeats;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}

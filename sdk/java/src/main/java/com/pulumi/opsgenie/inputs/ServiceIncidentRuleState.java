// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.opsgenie.inputs.ServiceIncidentRuleIncidentRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceIncidentRuleState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceIncidentRuleState Empty = new ServiceIncidentRuleState();

    /**
     * This is the rule configuration for this incident rule. This is a block, structure is documented below.
     * 
     */
    @Import(name="incidentRules")
    private @Nullable Output<List<ServiceIncidentRuleIncidentRuleArgs>> incidentRules;

    /**
     * @return This is the rule configuration for this incident rule. This is a block, structure is documented below.
     * 
     */
    public Optional<Output<List<ServiceIncidentRuleIncidentRuleArgs>>> incidentRules() {
        return Optional.ofNullable(this.incidentRules);
    }

    /**
     * ID of the service associated
     * 
     */
    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    /**
     * @return ID of the service associated
     * 
     */
    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    private ServiceIncidentRuleState() {}

    private ServiceIncidentRuleState(ServiceIncidentRuleState $) {
        this.incidentRules = $.incidentRules;
        this.serviceId = $.serviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceIncidentRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceIncidentRuleState $;

        public Builder() {
            $ = new ServiceIncidentRuleState();
        }

        public Builder(ServiceIncidentRuleState defaults) {
            $ = new ServiceIncidentRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param incidentRules This is the rule configuration for this incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentRules(@Nullable Output<List<ServiceIncidentRuleIncidentRuleArgs>> incidentRules) {
            $.incidentRules = incidentRules;
            return this;
        }

        /**
         * @param incidentRules This is the rule configuration for this incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentRules(List<ServiceIncidentRuleIncidentRuleArgs> incidentRules) {
            return incidentRules(Output.of(incidentRules));
        }

        /**
         * @param incidentRules This is the rule configuration for this incident rule. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder incidentRules(ServiceIncidentRuleIncidentRuleArgs... incidentRules) {
            return incidentRules(List.of(incidentRules));
        }

        /**
         * @param serviceId ID of the service associated
         * 
         * @return builder
         * 
         */
        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param serviceId ID of the service associated
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public ServiceIncidentRuleState build() {
            return $;
        }
    }

}

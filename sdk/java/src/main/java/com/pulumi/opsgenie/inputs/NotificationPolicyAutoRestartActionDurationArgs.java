// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationPolicyAutoRestartActionDurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationPolicyAutoRestartActionDurationArgs Empty = new NotificationPolicyAutoRestartActionDurationArgs();

    /**
     * A amount of time in `timeUnits`. This is a integer attribute.
     * 
     */
    @Import(name="timeAmount", required=true)
    private Output<Integer> timeAmount;

    /**
     * @return A amount of time in `timeUnits`. This is a integer attribute.
     * 
     */
    public Output<Integer> timeAmount() {
        return this.timeAmount;
    }

    /**
     * Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
     * 
     */
    @Import(name="timeUnit")
    private @Nullable Output<String> timeUnit;

    /**
     * @return Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
     * 
     */
    public Optional<Output<String>> timeUnit() {
        return Optional.ofNullable(this.timeUnit);
    }

    private NotificationPolicyAutoRestartActionDurationArgs() {}

    private NotificationPolicyAutoRestartActionDurationArgs(NotificationPolicyAutoRestartActionDurationArgs $) {
        this.timeAmount = $.timeAmount;
        this.timeUnit = $.timeUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationPolicyAutoRestartActionDurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationPolicyAutoRestartActionDurationArgs $;

        public Builder() {
            $ = new NotificationPolicyAutoRestartActionDurationArgs();
        }

        public Builder(NotificationPolicyAutoRestartActionDurationArgs defaults) {
            $ = new NotificationPolicyAutoRestartActionDurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param timeAmount A amount of time in `timeUnits`. This is a integer attribute.
         * 
         * @return builder
         * 
         */
        public Builder timeAmount(Output<Integer> timeAmount) {
            $.timeAmount = timeAmount;
            return this;
        }

        /**
         * @param timeAmount A amount of time in `timeUnits`. This is a integer attribute.
         * 
         * @return builder
         * 
         */
        public Builder timeAmount(Integer timeAmount) {
            return timeAmount(Output.of(timeAmount));
        }

        /**
         * @param timeUnit Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(@Nullable Output<String> timeUnit) {
            $.timeUnit = timeUnit;
            return this;
        }

        /**
         * @param timeUnit Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(String timeUnit) {
            return timeUnit(Output.of(timeUnit));
        }

        public NotificationPolicyAutoRestartActionDurationArgs build() {
            if ($.timeAmount == null) {
                throw new MissingRequiredPropertyException("NotificationPolicyAutoRestartActionDurationArgs", "timeAmount");
            }
            return $;
        }
    }

}

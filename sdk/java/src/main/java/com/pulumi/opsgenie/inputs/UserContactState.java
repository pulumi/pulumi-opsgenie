// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserContactState extends com.pulumi.resources.ResourceArgs {

    public static final UserContactState Empty = new UserContactState();

    /**
     * Enable contact of the user in OpsGenie. Default value is true.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable contact of the user in OpsGenie. Default value is true.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * to field is the address of given method.
     * 
     */
    @Import(name="to")
    private @Nullable Output<String> to;

    /**
     * @return to field is the address of given method.
     * 
     */
    public Optional<Output<String>> to() {
        return Optional.ofNullable(this.to);
    }

    /**
     * The username for contact.(reference)
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The username for contact.(reference)
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private UserContactState() {}

    private UserContactState(UserContactState $) {
        this.enabled = $.enabled;
        this.method = $.method;
        this.to = $.to;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserContactState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserContactState $;

        public Builder() {
            $ = new UserContactState();
        }

        public Builder(UserContactState defaults) {
            $ = new UserContactState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable contact of the user in OpsGenie. Default value is true.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable contact of the user in OpsGenie. Default value is true.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param method This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param to to field is the address of given method.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Output<String> to) {
            $.to = to;
            return this;
        }

        /**
         * @param to to field is the address of given method.
         * 
         * @return builder
         * 
         */
        public Builder to(String to) {
            return to(Output.of(to));
        }

        /**
         * @param username The username for contact.(reference)
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username for contact.(reference)
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public UserContactState build() {
            return $;
        }
    }

}

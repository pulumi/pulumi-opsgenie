// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEscalationRepeat extends com.pulumi.resources.InvokeArgs {

    public static final GetEscalationRepeat Empty = new GetEscalationRepeat();

    @Import(name="closeAlertAfterAll")
    private @Nullable Boolean closeAlertAfterAll;

    public Optional<Boolean> closeAlertAfterAll() {
        return Optional.ofNullable(this.closeAlertAfterAll);
    }

    @Import(name="count")
    private @Nullable Integer count;

    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }

    @Import(name="resetRecipientStates")
    private @Nullable Boolean resetRecipientStates;

    public Optional<Boolean> resetRecipientStates() {
        return Optional.ofNullable(this.resetRecipientStates);
    }

    @Import(name="waitInterval")
    private @Nullable Integer waitInterval;

    public Optional<Integer> waitInterval() {
        return Optional.ofNullable(this.waitInterval);
    }

    private GetEscalationRepeat() {}

    private GetEscalationRepeat(GetEscalationRepeat $) {
        this.closeAlertAfterAll = $.closeAlertAfterAll;
        this.count = $.count;
        this.resetRecipientStates = $.resetRecipientStates;
        this.waitInterval = $.waitInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEscalationRepeat defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEscalationRepeat $;

        public Builder() {
            $ = new GetEscalationRepeat();
        }

        public Builder(GetEscalationRepeat defaults) {
            $ = new GetEscalationRepeat(Objects.requireNonNull(defaults));
        }

        public Builder closeAlertAfterAll(@Nullable Boolean closeAlertAfterAll) {
            $.closeAlertAfterAll = closeAlertAfterAll;
            return this;
        }

        public Builder count(@Nullable Integer count) {
            $.count = count;
            return this;
        }

        public Builder resetRecipientStates(@Nullable Boolean resetRecipientStates) {
            $.resetRecipientStates = resetRecipientStates;
            return this;
        }

        public Builder waitInterval(@Nullable Integer waitInterval) {
            $.waitInterval = waitInterval;
            return this;
        }

        public GetEscalationRepeat build() {
            return $;
        }
    }

}

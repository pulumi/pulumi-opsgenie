// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.opsgenie.outputs.NotificationRuleTimeRestrictionRestriction;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NotificationRuleTimeRestriction {
    private @Nullable List<NotificationRuleTimeRestrictionRestriction> restrictions;
    /**
     * @return Kind of matching filter. Possible values: `match-all`, `match-any-condition`, `match-all-conditions`
     * 
     */
    private String type;

    private NotificationRuleTimeRestriction() {}
    public List<NotificationRuleTimeRestrictionRestriction> restrictions() {
        return this.restrictions == null ? List.of() : this.restrictions;
    }
    /**
     * @return Kind of matching filter. Possible values: `match-all`, `match-any-condition`, `match-all-conditions`
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationRuleTimeRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<NotificationRuleTimeRestrictionRestriction> restrictions;
        private String type;
        public Builder() {}
        public Builder(NotificationRuleTimeRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.restrictions = defaults.restrictions;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder restrictions(@Nullable List<NotificationRuleTimeRestrictionRestriction> restrictions) {
            this.restrictions = restrictions;
            return this;
        }
        public Builder restrictions(NotificationRuleTimeRestrictionRestriction... restrictions) {
            return restrictions(List.of(restrictions));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public NotificationRuleTimeRestriction build() {
            final var o = new NotificationRuleTimeRestriction();
            o.restrictions = restrictions;
            o.type = type;
            return o;
        }
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.opsgenie.inputs.AlertPolicyFilterConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertPolicyFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyFilterArgs Empty = new AlertPolicyFilterArgs();

    /**
     * Conditions applied to filter. This is a block, structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<AlertPolicyFilterConditionArgs>> conditions;

    /**
     * @return Conditions applied to filter. This is a block, structure is documented below.
     * 
     */
    public Optional<Output<List<AlertPolicyFilterConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Type of responder. Acceptable values are: `user` or `team`
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of responder. Acceptable values are: `user` or `team`
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AlertPolicyFilterArgs() {}

    private AlertPolicyFilterArgs(AlertPolicyFilterArgs $) {
        this.conditions = $.conditions;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyFilterArgs $;

        public Builder() {
            $ = new AlertPolicyFilterArgs();
        }

        public Builder(AlertPolicyFilterArgs defaults) {
            $ = new AlertPolicyFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions Conditions applied to filter. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<AlertPolicyFilterConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions Conditions applied to filter. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<AlertPolicyFilterConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions Conditions applied to filter. This is a block, structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(AlertPolicyFilterConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param type Type of responder. Acceptable values are: `user` or `team`
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of responder. Acceptable values are: `user` or `team`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AlertPolicyFilterArgs build() {
            return $;
        }
    }

}

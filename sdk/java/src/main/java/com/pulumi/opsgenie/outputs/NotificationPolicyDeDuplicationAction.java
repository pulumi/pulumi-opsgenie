// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.opsgenie.outputs.NotificationPolicyDeDuplicationActionDuration;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NotificationPolicyDeDuplicationAction {
    /**
     * @return - Count
     * 
     */
    private final Integer count;
    /**
     * @return Deduplication type. Possible values are: &#34;value-based&#34;, &#34;frequency-based&#34;
     * 
     */
    private final String deDuplicationActionType;
    /**
     * @return Duration of this action. If `delay_option` = `for-duration` this has to be set. This is a block, structure is documented below.
     * 
     */
    private final @Nullable List<NotificationPolicyDeDuplicationActionDuration> durations;

    @CustomType.Constructor
    private NotificationPolicyDeDuplicationAction(
        @CustomType.Parameter("count") Integer count,
        @CustomType.Parameter("deDuplicationActionType") String deDuplicationActionType,
        @CustomType.Parameter("durations") @Nullable List<NotificationPolicyDeDuplicationActionDuration> durations) {
        this.count = count;
        this.deDuplicationActionType = deDuplicationActionType;
        this.durations = durations;
    }

    /**
     * @return - Count
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return Deduplication type. Possible values are: &#34;value-based&#34;, &#34;frequency-based&#34;
     * 
     */
    public String deDuplicationActionType() {
        return this.deDuplicationActionType;
    }
    /**
     * @return Duration of this action. If `delay_option` = `for-duration` this has to be set. This is a block, structure is documented below.
     * 
     */
    public List<NotificationPolicyDeDuplicationActionDuration> durations() {
        return this.durations == null ? List.of() : this.durations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationPolicyDeDuplicationAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer count;
        private String deDuplicationActionType;
        private @Nullable List<NotificationPolicyDeDuplicationActionDuration> durations;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationPolicyDeDuplicationAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.deDuplicationActionType = defaults.deDuplicationActionType;
    	      this.durations = defaults.durations;
        }

        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        public Builder deDuplicationActionType(String deDuplicationActionType) {
            this.deDuplicationActionType = Objects.requireNonNull(deDuplicationActionType);
            return this;
        }
        public Builder durations(@Nullable List<NotificationPolicyDeDuplicationActionDuration> durations) {
            this.durations = durations;
            return this;
        }
        public Builder durations(NotificationPolicyDeDuplicationActionDuration... durations) {
            return durations(List.of(durations));
        }        public NotificationPolicyDeDuplicationAction build() {
            return new NotificationPolicyDeDuplicationAction(count, deDuplicationActionType, durations);
        }
    }
}

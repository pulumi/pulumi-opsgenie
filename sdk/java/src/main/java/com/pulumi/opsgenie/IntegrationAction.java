// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.opsgenie.IntegrationActionArgs;
import com.pulumi.opsgenie.Utilities;
import com.pulumi.opsgenie.inputs.IntegrationActionState;
import com.pulumi.opsgenie.outputs.IntegrationActionAcknowledge;
import com.pulumi.opsgenie.outputs.IntegrationActionAddNote;
import com.pulumi.opsgenie.outputs.IntegrationActionClose;
import com.pulumi.opsgenie.outputs.IntegrationActionCreate;
import com.pulumi.opsgenie.outputs.IntegrationActionIgnore;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages advanced actions for Integrations within Opsgenie. This applies for the following resources:
 * * `opsgenie.ApiIntegration`
 * * `opsgenie.EmailIntegration`
 * 
 * The actions that are supported are:
 * * `create`
 * * `close`
 * * `acknowledge`
 * * `add_note`
 * * `ignore`
 * 
 */
@ResourceType(type="opsgenie:index/integrationAction:IntegrationAction")
public class IntegrationAction extends com.pulumi.resources.CustomResource {
    @Export(name="acknowledges", type=List.class, parameters={IntegrationActionAcknowledge.class})
    private Output</* @Nullable */ List<IntegrationActionAcknowledge>> acknowledges;

    public Output<Optional<List<IntegrationActionAcknowledge>>> acknowledges() {
        return Codegen.optional(this.acknowledges);
    }
    @Export(name="addNotes", type=List.class, parameters={IntegrationActionAddNote.class})
    private Output</* @Nullable */ List<IntegrationActionAddNote>> addNotes;

    public Output<Optional<List<IntegrationActionAddNote>>> addNotes() {
        return Codegen.optional(this.addNotes);
    }
    @Export(name="closes", type=List.class, parameters={IntegrationActionClose.class})
    private Output</* @Nullable */ List<IntegrationActionClose>> closes;

    public Output<Optional<List<IntegrationActionClose>>> closes() {
        return Codegen.optional(this.closes);
    }
    @Export(name="creates", type=List.class, parameters={IntegrationActionCreate.class})
    private Output</* @Nullable */ List<IntegrationActionCreate>> creates;

    public Output<Optional<List<IntegrationActionCreate>>> creates() {
        return Codegen.optional(this.creates);
    }
    @Export(name="ignores", type=List.class, parameters={IntegrationActionIgnore.class})
    private Output</* @Nullable */ List<IntegrationActionIgnore>> ignores;

    public Output<Optional<List<IntegrationActionIgnore>>> ignores() {
        return Codegen.optional(this.ignores);
    }
    /**
     * ID of the parent integration resource to bind to.
     * 
     */
    @Export(name="integrationId", type=String.class, parameters={})
    private Output<String> integrationId;

    /**
     * @return ID of the parent integration resource to bind to.
     * 
     */
    public Output<String> integrationId() {
        return this.integrationId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAction(String name) {
        this(name, IntegrationActionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAction(String name, IntegrationActionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAction(String name, IntegrationActionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/integrationAction:IntegrationAction", name, args == null ? IntegrationActionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationAction(String name, Output<String> id, @Nullable IntegrationActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/integrationAction:IntegrationAction", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAction get(String name, Output<String> id, @Nullable IntegrationActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAction(name, id, state, options);
    }
}

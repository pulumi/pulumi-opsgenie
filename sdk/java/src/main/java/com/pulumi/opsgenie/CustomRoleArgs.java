// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomRoleArgs Empty = new CustomRoleArgs();

    /**
     * The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
     * 
     */
    @Import(name="disallowedRights")
    private @Nullable Output<List<String>> disallowedRights;

    /**
     * @return The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
     * 
     */
    public Optional<Output<List<String>>> disallowedRights() {
        return Optional.ofNullable(this.disallowedRights);
    }

    /**
     * The role from which this role has been derived. Allowed Values: &#34;user&#34;, &#34;observer&#34;, &#34;stakeholder&#34;.
     * 
     */
    @Import(name="extendedRole")
    private @Nullable Output<String> extendedRole;

    /**
     * @return The role from which this role has been derived. Allowed Values: &#34;user&#34;, &#34;observer&#34;, &#34;stakeholder&#34;.
     * 
     */
    public Optional<Output<String>> extendedRole() {
        return Optional.ofNullable(this.extendedRole);
    }

    /**
     * The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
     * 
     */
    @Import(name="grantedRights")
    private @Nullable Output<List<String>> grantedRights;

    /**
     * @return The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
     * 
     */
    public Optional<Output<List<String>>> grantedRights() {
        return Optional.ofNullable(this.grantedRights);
    }

    /**
     * Name of the custom role.
     * 
     */
    @Import(name="roleName", required=true)
    private Output<String> roleName;

    /**
     * @return Name of the custom role.
     * 
     */
    public Output<String> roleName() {
        return this.roleName;
    }

    private CustomRoleArgs() {}

    private CustomRoleArgs(CustomRoleArgs $) {
        this.disallowedRights = $.disallowedRights;
        this.extendedRole = $.extendedRole;
        this.grantedRights = $.grantedRights;
        this.roleName = $.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomRoleArgs $;

        public Builder() {
            $ = new CustomRoleArgs();
        }

        public Builder(CustomRoleArgs defaults) {
            $ = new CustomRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disallowedRights The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder disallowedRights(@Nullable Output<List<String>> disallowedRights) {
            $.disallowedRights = disallowedRights;
            return this;
        }

        /**
         * @param disallowedRights The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder disallowedRights(List<String> disallowedRights) {
            return disallowedRights(Output.of(disallowedRights));
        }

        /**
         * @param disallowedRights The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder disallowedRights(String... disallowedRights) {
            return disallowedRights(List.of(disallowedRights));
        }

        /**
         * @param extendedRole The role from which this role has been derived. Allowed Values: &#34;user&#34;, &#34;observer&#34;, &#34;stakeholder&#34;.
         * 
         * @return builder
         * 
         */
        public Builder extendedRole(@Nullable Output<String> extendedRole) {
            $.extendedRole = extendedRole;
            return this;
        }

        /**
         * @param extendedRole The role from which this role has been derived. Allowed Values: &#34;user&#34;, &#34;observer&#34;, &#34;stakeholder&#34;.
         * 
         * @return builder
         * 
         */
        public Builder extendedRole(String extendedRole) {
            return extendedRole(Output.of(extendedRole));
        }

        /**
         * @param grantedRights The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder grantedRights(@Nullable Output<List<String>> grantedRights) {
            $.grantedRights = grantedRights;
            return this;
        }

        /**
         * @param grantedRights The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder grantedRights(List<String> grantedRights) {
            return grantedRights(Output.of(grantedRights));
        }

        /**
         * @param grantedRights The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)
         * 
         * @return builder
         * 
         */
        public Builder grantedRights(String... grantedRights) {
            return grantedRights(List.of(grantedRights));
        }

        /**
         * @param roleName Name of the custom role.
         * 
         * @return builder
         * 
         */
        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName Name of the custom role.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        public CustomRoleArgs build() {
            if ($.roleName == null) {
                throw new MissingRequiredPropertyException("CustomRoleArgs", "roleName");
            }
            return $;
        }
    }

}

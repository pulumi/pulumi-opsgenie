// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceIncidentRuleIncidentRuleCondition {
    /**
     * @return User defined value that will be compared with alert field according to the operation. Default: empty string
     * 
     */
    private final @Nullable String expectedValue;
    /**
     * @return Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`
     * 
     */
    private final String field;
    private final @Nullable String key;
    /**
     * @return Indicates behaviour of the given operation. Default: false
     * 
     */
    private final @Nullable Boolean not;
    /**
     * @return It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`.
     * 
     */
    private final String operation;

    @CustomType.Constructor
    private ServiceIncidentRuleIncidentRuleCondition(
        @CustomType.Parameter("expectedValue") @Nullable String expectedValue,
        @CustomType.Parameter("field") String field,
        @CustomType.Parameter("key") @Nullable String key,
        @CustomType.Parameter("not") @Nullable Boolean not,
        @CustomType.Parameter("operation") String operation) {
        this.expectedValue = expectedValue;
        this.field = field;
        this.key = key;
        this.not = not;
        this.operation = operation;
    }

    /**
     * @return User defined value that will be compared with alert field according to the operation. Default: empty string
     * 
     */
    public Optional<String> expectedValue() {
        return Optional.ofNullable(this.expectedValue);
    }
    /**
     * @return Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`
     * 
     */
    public String field() {
        return this.field;
    }
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Indicates behaviour of the given operation. Default: false
     * 
     */
    public Optional<Boolean> not() {
        return Optional.ofNullable(this.not);
    }
    /**
     * @return It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`.
     * 
     */
    public String operation() {
        return this.operation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceIncidentRuleIncidentRuleCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String expectedValue;
        private String field;
        private @Nullable String key;
        private @Nullable Boolean not;
        private String operation;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceIncidentRuleIncidentRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expectedValue = defaults.expectedValue;
    	      this.field = defaults.field;
    	      this.key = defaults.key;
    	      this.not = defaults.not;
    	      this.operation = defaults.operation;
        }

        public Builder expectedValue(@Nullable String expectedValue) {
            this.expectedValue = expectedValue;
            return this;
        }
        public Builder field(String field) {
            this.field = Objects.requireNonNull(field);
            return this;
        }
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        public Builder not(@Nullable Boolean not) {
            this.not = not;
            return this;
        }
        public Builder operation(String operation) {
            this.operation = Objects.requireNonNull(operation);
            return this;
        }        public ServiceIncidentRuleIncidentRuleCondition build() {
            return new ServiceIncidentRuleIncidentRuleCondition(expectedValue, field, key, not, operation);
        }
    }
}

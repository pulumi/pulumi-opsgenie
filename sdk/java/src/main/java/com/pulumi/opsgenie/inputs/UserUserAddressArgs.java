// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class UserUserAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserUserAddressArgs Empty = new UserUserAddressArgs();

    @Import(name="city", required=true)
    private Output<String> city;

    public Output<String> city() {
        return this.city;
    }

    @Import(name="country", required=true)
    private Output<String> country;

    public Output<String> country() {
        return this.country;
    }

    @Import(name="line", required=true)
    private Output<String> line;

    public Output<String> line() {
        return this.line;
    }

    @Import(name="state", required=true)
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }

    @Import(name="zipcode", required=true)
    private Output<String> zipcode;

    public Output<String> zipcode() {
        return this.zipcode;
    }

    private UserUserAddressArgs() {}

    private UserUserAddressArgs(UserUserAddressArgs $) {
        this.city = $.city;
        this.country = $.country;
        this.line = $.line;
        this.state = $.state;
        this.zipcode = $.zipcode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserUserAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserUserAddressArgs $;

        public Builder() {
            $ = new UserUserAddressArgs();
        }

        public Builder(UserUserAddressArgs defaults) {
            $ = new UserUserAddressArgs(Objects.requireNonNull(defaults));
        }

        public Builder city(Output<String> city) {
            $.city = city;
            return this;
        }

        public Builder city(String city) {
            return city(Output.of(city));
        }

        public Builder country(Output<String> country) {
            $.country = country;
            return this;
        }

        public Builder country(String country) {
            return country(Output.of(country));
        }

        public Builder line(Output<String> line) {
            $.line = line;
            return this;
        }

        public Builder line(String line) {
            return line(Output.of(line));
        }

        public Builder state(Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder zipcode(Output<String> zipcode) {
            $.zipcode = zipcode;
            return this;
        }

        public Builder zipcode(String zipcode) {
            return zipcode(Output.of(zipcode));
        }

        public UserUserAddressArgs build() {
            $.city = Objects.requireNonNull($.city, "expected parameter 'city' to be non-null");
            $.country = Objects.requireNonNull($.country, "expected parameter 'country' to be non-null");
            $.line = Objects.requireNonNull($.line, "expected parameter 'line' to be non-null");
            $.state = Objects.requireNonNull($.state, "expected parameter 'state' to be non-null");
            $.zipcode = Objects.requireNonNull($.zipcode, "expected parameter 'zipcode' to be non-null");
            return $;
        }
    }

}

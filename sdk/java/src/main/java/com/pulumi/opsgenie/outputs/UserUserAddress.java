// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UserUserAddress {
    private String city;
    private String country;
    private String line;
    private String state;
    private String zipcode;

    private UserUserAddress() {}
    public String city() {
        return this.city;
    }
    public String country() {
        return this.country;
    }
    public String line() {
        return this.line;
    }
    public String state() {
        return this.state;
    }
    public String zipcode() {
        return this.zipcode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserUserAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private String country;
        private String line;
        private String state;
        private String zipcode;
        public Builder() {}
        public Builder(UserUserAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.country = defaults.country;
    	      this.line = defaults.line;
    	      this.state = defaults.state;
    	      this.zipcode = defaults.zipcode;
        }

        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("UserUserAddress", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            if (country == null) {
              throw new MissingRequiredPropertyException("UserUserAddress", "country");
            }
            this.country = country;
            return this;
        }
        @CustomType.Setter
        public Builder line(String line) {
            if (line == null) {
              throw new MissingRequiredPropertyException("UserUserAddress", "line");
            }
            this.line = line;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("UserUserAddress", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder zipcode(String zipcode) {
            if (zipcode == null) {
              throw new MissingRequiredPropertyException("UserUserAddress", "zipcode");
            }
            this.zipcode = zipcode;
            return this;
        }
        public UserUserAddress build() {
            final var _resultValue = new UserUserAddress();
            _resultValue.city = city;
            _resultValue.country = country;
            _resultValue.line = line;
            _resultValue.state = state;
            _resultValue.zipcode = zipcode;
            return _resultValue;
        }
    }
}

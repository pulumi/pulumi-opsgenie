// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UserUserAddress {
    private final String city;
    private final String country;
    private final String line;
    private final String state;
    private final String zipcode;

    @CustomType.Constructor
    private UserUserAddress(
        @CustomType.Parameter("city") String city,
        @CustomType.Parameter("country") String country,
        @CustomType.Parameter("line") String line,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("zipcode") String zipcode) {
        this.city = city;
        this.country = country;
        this.line = line;
        this.state = state;
        this.zipcode = zipcode;
    }

    public String city() {
        return this.city;
    }
    public String country() {
        return this.country;
    }
    public String line() {
        return this.line;
    }
    public String state() {
        return this.state;
    }
    public String zipcode() {
        return this.zipcode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserUserAddress defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String city;
        private String country;
        private String line;
        private String state;
        private String zipcode;

        public Builder() {
    	      // Empty
        }

        public Builder(UserUserAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.country = defaults.country;
    	      this.line = defaults.line;
    	      this.state = defaults.state;
    	      this.zipcode = defaults.zipcode;
        }

        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        public Builder line(String line) {
            this.line = Objects.requireNonNull(line);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder zipcode(String zipcode) {
            this.zipcode = Objects.requireNonNull(zipcode);
            return this;
        }        public UserUserAddress build() {
            return new UserUserAddress(city, country, line, state, zipcode);
        }
    }
}

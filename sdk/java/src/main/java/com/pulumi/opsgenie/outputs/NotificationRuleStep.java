// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.opsgenie.outputs.NotificationRuleStepContact;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotificationRuleStep {
    /**
     * @return Defines the contact that notification will be sent to. This is a block, structure is documented below.
     * 
     */
    private final List<NotificationRuleStepContact> contacts;
    /**
     * @return Defined if this step is enabled. Default: `true`
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return Time period, in minutes, notification will be sent after.
     * 
     */
    private final @Nullable Integer sendAfter;

    @CustomType.Constructor
    private NotificationRuleStep(
        @CustomType.Parameter("contacts") List<NotificationRuleStepContact> contacts,
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("sendAfter") @Nullable Integer sendAfter) {
        this.contacts = contacts;
        this.enabled = enabled;
        this.sendAfter = sendAfter;
    }

    /**
     * @return Defines the contact that notification will be sent to. This is a block, structure is documented below.
     * 
     */
    public List<NotificationRuleStepContact> contacts() {
        return this.contacts;
    }
    /**
     * @return Defined if this step is enabled. Default: `true`
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Time period, in minutes, notification will be sent after.
     * 
     */
    public Optional<Integer> sendAfter() {
        return Optional.ofNullable(this.sendAfter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationRuleStep defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<NotificationRuleStepContact> contacts;
        private @Nullable Boolean enabled;
        private @Nullable Integer sendAfter;

        public Builder() {
    	      // Empty
        }

        public Builder(NotificationRuleStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contacts = defaults.contacts;
    	      this.enabled = defaults.enabled;
    	      this.sendAfter = defaults.sendAfter;
        }

        public Builder contacts(List<NotificationRuleStepContact> contacts) {
            this.contacts = Objects.requireNonNull(contacts);
            return this;
        }
        public Builder contacts(NotificationRuleStepContact... contacts) {
            return contacts(List.of(contacts));
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder sendAfter(@Nullable Integer sendAfter) {
            this.sendAfter = sendAfter;
            return this;
        }        public NotificationRuleStep build() {
            return new NotificationRuleStep(contacts, enabled, sendAfter);
        }
    }
}

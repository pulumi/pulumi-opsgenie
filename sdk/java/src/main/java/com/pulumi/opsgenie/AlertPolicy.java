// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.opsgenie.AlertPolicyArgs;
import com.pulumi.opsgenie.Utilities;
import com.pulumi.opsgenie.inputs.AlertPolicyState;
import com.pulumi.opsgenie.outputs.AlertPolicyFilter;
import com.pulumi.opsgenie.outputs.AlertPolicyResponder;
import com.pulumi.opsgenie.outputs.AlertPolicyTimeRestriction;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Alert Policy within Opsgenie.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.opsgenie.Team;
 * import com.pulumi.opsgenie.TeamArgs;
 * import com.pulumi.opsgenie.AlertPolicy;
 * import com.pulumi.opsgenie.AlertPolicyArgs;
 * import com.pulumi.opsgenie.inputs.AlertPolicyFilterArgs;
 * import com.pulumi.opsgenie.inputs.AlertPolicyTimeRestrictionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Team("test", TeamArgs.builder()
 *             .name("example team")
 *             .description("This team deals with all the things")
 *             .build());
 * 
 *         var testAlertPolicy = new AlertPolicy("testAlertPolicy", AlertPolicyArgs.builder()
 *             .filters(AlertPolicyFilterArgs.builder()
 *                 .build())
 *             .name("example policy")
 *             .teamId(test.id())
 *             .policyDescription("This is sample policy")
 *             .message("{{message}}")
 *             .timeRestrictions(AlertPolicyTimeRestrictionArgs.builder()
 *                 .type("weekday-and-time-of-day")
 *                 .restrictionList(                
 *                     AlertPolicyTimeRestrictionRestrictionListArgs.builder()
 *                         .endDay("monday")
 *                         .endHour(7)
 *                         .endMin(0)
 *                         .startDay("sunday")
 *                         .startHour(21)
 *                         .startMin(0)
 *                         .build(),
 *                     AlertPolicyTimeRestrictionRestrictionListArgs.builder()
 *                         .endDay("tuesday")
 *                         .endHour(7)
 *                         .endMin(0)
 *                         .startDay("monday")
 *                         .startHour(22)
 *                         .startMin(0)
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Alert policies can be imported using the `team_id/policy_id`, e.g.
 * 
 * ```sh
 * $ pulumi import opsgenie:index/alertPolicy:AlertPolicy test team_id/policy_id`
 * ```
 * 
 * You can import global polices using only policy identifier
 * 
 * ```sh
 * $ pulumi import opsgenie:index/alertPolicy:AlertPolicy test policy_id`
 * ```
 * 
 */
@ResourceType(type="opsgenie:index/alertPolicy:AlertPolicy")
public class AlertPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Actions to add to the alerts original actions value as a list of strings. If `ignoreOriginalActions` field is set to `true`, this will replace the original actions.
     * 
     */
    @Export(name="actions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> actions;

    /**
     * @return Actions to add to the alerts original actions value as a list of strings. If `ignoreOriginalActions` field is set to `true`, this will replace the original actions.
     * 
     */
    public Output<Optional<List<String>>> actions() {
        return Codegen.optional(this.actions);
    }
    /**
     * Description of the alert. You can use `{{description}}` to refer to the original alert description. Default: `{{description}}`
     * 
     */
    @Export(name="alertDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alertDescription;

    /**
     * @return Description of the alert. You can use `{{description}}` to refer to the original alert description. Default: `{{description}}`
     * 
     */
    public Output<Optional<String>> alertDescription() {
        return Codegen.optional(this.alertDescription);
    }
    /**
     * Alias of the alert. You can use `{{alias}}` to refer to the original alias. Default: `{{alias}}`
     * 
     */
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> alias;

    /**
     * @return Alias of the alert. You can use `{{alias}}` to refer to the original alias. Default: `{{alias}}`
     * 
     */
    public Output<Optional<String>> alias() {
        return Codegen.optional(this.alias);
    }
    /**
     * It will trigger other modify policies if set to `true`. Default: `false`
     * 
     */
    @Export(name="continuePolicy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> continuePolicy;

    /**
     * @return It will trigger other modify policies if set to `true`. Default: `false`
     * 
     */
    public Output<Optional<Boolean>> continuePolicy() {
        return Codegen.optional(this.continuePolicy);
    }
    /**
     * If policy should be enabled. Default: `true`
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return If policy should be enabled. Default: `true`
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Entity field of the alert. You can use `{{entity}}` to refer to the original entity. Default: `{{entity}}`
     * 
     */
    @Export(name="entity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> entity;

    /**
     * @return Entity field of the alert. You can use `{{entity}}` to refer to the original entity. Default: `{{entity}}`
     * 
     */
    public Output<Optional<String>> entity() {
        return Codegen.optional(this.entity);
    }
    /**
     * A alert filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.
     * 
     */
    @Export(name="filters", refs={List.class,AlertPolicyFilter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AlertPolicyFilter>> filters;

    /**
     * @return A alert filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.
     * 
     */
    public Output<Optional<List<AlertPolicyFilter>>> filters() {
        return Codegen.optional(this.filters);
    }
    /**
     * If set to `true`, policy will ignore the original actions of the alert. Default: `false`
     * 
     */
    @Export(name="ignoreOriginalActions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ignoreOriginalActions;

    /**
     * @return If set to `true`, policy will ignore the original actions of the alert. Default: `false`
     * 
     */
    public Output<Optional<Boolean>> ignoreOriginalActions() {
        return Codegen.optional(this.ignoreOriginalActions);
    }
    /**
     * If set to `true`, policy will ignore the original details of the alert. Default: `false`
     * 
     */
    @Export(name="ignoreOriginalDetails", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ignoreOriginalDetails;

    /**
     * @return If set to `true`, policy will ignore the original details of the alert. Default: `false`
     * 
     */
    public Output<Optional<Boolean>> ignoreOriginalDetails() {
        return Codegen.optional(this.ignoreOriginalDetails);
    }
    /**
     * If set to `true`, policy will ignore the original responders of the alert. Default: `false`
     * 
     */
    @Export(name="ignoreOriginalResponders", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ignoreOriginalResponders;

    /**
     * @return If set to `true`, policy will ignore the original responders of the alert. Default: `false`
     * 
     */
    public Output<Optional<Boolean>> ignoreOriginalResponders() {
        return Codegen.optional(this.ignoreOriginalResponders);
    }
    /**
     * If set to `true`, policy will ignore the original tags of the alert. Default: `false`
     * 
     */
    @Export(name="ignoreOriginalTags", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ignoreOriginalTags;

    /**
     * @return If set to `true`, policy will ignore the original tags of the alert. Default: `false`
     * 
     */
    public Output<Optional<Boolean>> ignoreOriginalTags() {
        return Codegen.optional(this.ignoreOriginalTags);
    }
    /**
     * Message of the alerts
     * 
     */
    @Export(name="message", refs={String.class}, tree="[0]")
    private Output<String> message;

    /**
     * @return Message of the alerts
     * 
     */
    public Output<String> message() {
        return this.message;
    }
    /**
     * Name of the alert policy
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the alert policy
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Description of the policy. This can be max 512 characters.
     * 
     */
    @Export(name="policyDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policyDescription;

    /**
     * @return Description of the policy. This can be max 512 characters.
     * 
     */
    public Output<Optional<String>> policyDescription() {
        return Codegen.optional(this.policyDescription);
    }
    /**
     * Priority of the alert. Should be one of `P1`, `P2`, `P3`, `P4`, or `P5`
     * 
     */
    @Export(name="priority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> priority;

    /**
     * @return Priority of the alert. Should be one of `P1`, `P2`, `P3`, `P4`, or `P5`
     * 
     */
    public Output<Optional<String>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If `ignoreOriginalResponders` field is set to `true`, this will replace the original responders. The possible values for responders are: `user`, `team`, `escalation`, `schedule`. This is a block, structure is documented below.
     * 
     */
    @Export(name="responders", refs={List.class,AlertPolicyResponder.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AlertPolicyResponder>> responders;

    /**
     * @return Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If `ignoreOriginalResponders` field is set to `true`, this will replace the original responders. The possible values for responders are: `user`, `team`, `escalation`, `schedule`. This is a block, structure is documented below.
     * 
     */
    public Output<Optional<List<AlertPolicyResponder>>> responders() {
        return Codegen.optional(this.responders);
    }
    /**
     * Source field of the alert. You can use `{{source}}` to refer to the original source. Default: `{{source}}`
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> source;

    /**
     * @return Source field of the alert. You can use `{{source}}` to refer to the original source. Default: `{{source}}`
     * 
     */
    public Output<Optional<String>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * Tags to add to the alerts original tags value as a list of strings. If `ignoreOriginalResponders` field is set to `true`, this will replace the original responders.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to add to the alerts original tags value as a list of strings. If `ignoreOriginalResponders` field is set to `true`, this will replace the original responders.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Id of team that this policy belongs to.
     * 
     */
    @Export(name="teamId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> teamId;

    /**
     * @return Id of team that this policy belongs to.
     * 
     */
    public Output<Optional<String>> teamId() {
        return Codegen.optional(this.teamId);
    }
    /**
     * Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.
     * 
     */
    @Export(name="timeRestrictions", refs={List.class,AlertPolicyTimeRestriction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AlertPolicyTimeRestriction>> timeRestrictions;

    /**
     * @return Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.
     * 
     */
    public Output<Optional<List<AlertPolicyTimeRestriction>>> timeRestrictions() {
        return Codegen.optional(this.timeRestrictions);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AlertPolicy(java.lang.String name) {
        this(name, AlertPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AlertPolicy(java.lang.String name, AlertPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AlertPolicy(java.lang.String name, AlertPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/alertPolicy:AlertPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AlertPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable AlertPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/alertPolicy:AlertPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static AlertPolicyArgs makeArgs(AlertPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AlertPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AlertPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable AlertPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AlertPolicy(name, id, state, options);
    }
}

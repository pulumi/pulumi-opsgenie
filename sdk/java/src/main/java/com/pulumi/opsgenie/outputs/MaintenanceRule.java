// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.opsgenie.outputs.MaintenanceRuleEntity;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MaintenanceRule {
    /**
     * @return This field represents the entity that maintenance will be applied. Entity field takes two mandatory fields as id and type.
     * 
     */
    private final List<MaintenanceRuleEntity> entities;
    /**
     * @return State of rule that will be defined in maintenance and can take either enabled or disabled for policy type rules. This field has to be disabled for integration type entity rules.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private MaintenanceRule(
        @CustomType.Parameter("entities") List<MaintenanceRuleEntity> entities,
        @CustomType.Parameter("state") @Nullable String state) {
        this.entities = entities;
        this.state = state;
    }

    /**
     * @return This field represents the entity that maintenance will be applied. Entity field takes two mandatory fields as id and type.
     * 
     */
    public List<MaintenanceRuleEntity> entities() {
        return this.entities;
    }
    /**
     * @return State of rule that will be defined in maintenance and can take either enabled or disabled for policy type rules. This field has to be disabled for integration type entity rules.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<MaintenanceRuleEntity> entities;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(MaintenanceRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entities = defaults.entities;
    	      this.state = defaults.state;
        }

        public Builder entities(List<MaintenanceRuleEntity> entities) {
            this.entities = Objects.requireNonNull(entities);
            return this;
        }
        public Builder entities(MaintenanceRuleEntity... entities) {
            return entities(List.of(entities));
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public MaintenanceRule build() {
            return new MaintenanceRule(entities, state);
        }
    }
}

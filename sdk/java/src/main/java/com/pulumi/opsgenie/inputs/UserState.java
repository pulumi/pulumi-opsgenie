// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.opsgenie.inputs.UserUserAddressArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserState extends com.pulumi.resources.ResourceArgs {

    public static final UserState Empty = new UserState();

    /**
     * The Full Name of the User.
     * 
     */
    @Import(name="fullName")
    private @Nullable Output<String> fullName;

    /**
     * @return The Full Name of the User.
     * 
     */
    public Optional<Output<String>> fullName() {
        return Optional.ofNullable(this.fullName);
    }

    /**
     * Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
     * 
     */
    @Import(name="locale")
    private @Nullable Output<String> locale;

    /**
     * @return Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
     * 
     */
    public Optional<Output<String>> locale() {
        return Optional.ofNullable(this.locale);
    }

    /**
     * The Role assigned to the User. Either a built-in such as &#39;Admin&#39; or &#39;User&#39; - or the name of a custom role.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return The Role assigned to the User. Either a built-in such as &#39;Admin&#39; or &#39;User&#39; - or the name of a custom role.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * Skype username of the user.
     * 
     */
    @Import(name="skypeUsername")
    private @Nullable Output<String> skypeUsername;

    /**
     * @return Skype username of the user.
     * 
     */
    public Optional<Output<String>> skypeUsername() {
        return Optional.ofNullable(this.skypeUsername);
    }

    /**
     * A list of tags to be associated with the user.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of tags to be associated with the user.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * Address of the user.
     * 
     */
    @Import(name="userAddresses")
    private @Nullable Output<List<UserUserAddressArgs>> userAddresses;

    /**
     * @return Address of the user.
     * 
     */
    public Optional<Output<List<UserUserAddressArgs>>> userAddresses() {
        return Optional.ofNullable(this.userAddresses);
    }

    /**
     * Details about the user in form of key and list. of values.
     * 
     */
    @Import(name="userDetails")
    private @Nullable Output<Map<String,String>> userDetails;

    /**
     * @return Details about the user in form of key and list. of values.
     * 
     */
    public Optional<Output<Map<String,String>>> userDetails() {
        return Optional.ofNullable(this.userDetails);
    }

    /**
     * The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private UserState() {}

    private UserState(UserState $) {
        this.fullName = $.fullName;
        this.locale = $.locale;
        this.role = $.role;
        this.skypeUsername = $.skypeUsername;
        this.tags = $.tags;
        this.timezone = $.timezone;
        this.userAddresses = $.userAddresses;
        this.userDetails = $.userDetails;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserState $;

        public Builder() {
            $ = new UserState();
        }

        public Builder(UserState defaults) {
            $ = new UserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fullName The Full Name of the User.
         * 
         * @return builder
         * 
         */
        public Builder fullName(@Nullable Output<String> fullName) {
            $.fullName = fullName;
            return this;
        }

        /**
         * @param fullName The Full Name of the User.
         * 
         * @return builder
         * 
         */
        public Builder fullName(String fullName) {
            return fullName(Output.of(fullName));
        }

        /**
         * @param locale Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
         * 
         * @return builder
         * 
         */
        public Builder locale(@Nullable Output<String> locale) {
            $.locale = locale;
            return this;
        }

        /**
         * @param locale Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
         * 
         * @return builder
         * 
         */
        public Builder locale(String locale) {
            return locale(Output.of(locale));
        }

        /**
         * @param role The Role assigned to the User. Either a built-in such as &#39;Admin&#39; or &#39;User&#39; - or the name of a custom role.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The Role assigned to the User. Either a built-in such as &#39;Admin&#39; or &#39;User&#39; - or the name of a custom role.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param skypeUsername Skype username of the user.
         * 
         * @return builder
         * 
         */
        public Builder skypeUsername(@Nullable Output<String> skypeUsername) {
            $.skypeUsername = skypeUsername;
            return this;
        }

        /**
         * @param skypeUsername Skype username of the user.
         * 
         * @return builder
         * 
         */
        public Builder skypeUsername(String skypeUsername) {
            return skypeUsername(Output.of(skypeUsername));
        }

        /**
         * @param tags A list of tags to be associated with the user.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tags to be associated with the user.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of tags to be associated with the user.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param timezone Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param userAddresses Address of the user.
         * 
         * @return builder
         * 
         */
        public Builder userAddresses(@Nullable Output<List<UserUserAddressArgs>> userAddresses) {
            $.userAddresses = userAddresses;
            return this;
        }

        /**
         * @param userAddresses Address of the user.
         * 
         * @return builder
         * 
         */
        public Builder userAddresses(List<UserUserAddressArgs> userAddresses) {
            return userAddresses(Output.of(userAddresses));
        }

        /**
         * @param userAddresses Address of the user.
         * 
         * @return builder
         * 
         */
        public Builder userAddresses(UserUserAddressArgs... userAddresses) {
            return userAddresses(List.of(userAddresses));
        }

        /**
         * @param userDetails Details about the user in form of key and list. of values.
         * 
         * @return builder
         * 
         */
        public Builder userDetails(@Nullable Output<Map<String,String>> userDetails) {
            $.userDetails = userDetails;
            return this;
        }

        /**
         * @param userDetails Details about the user in form of key and list. of values.
         * 
         * @return builder
         * 
         */
        public Builder userDetails(Map<String,String> userDetails) {
            return userDetails(Output.of(userDetails));
        }

        /**
         * @param username The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public UserState build() {
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.opsgenie.EscalationArgs;
import com.pulumi.opsgenie.Utilities;
import com.pulumi.opsgenie.inputs.EscalationState;
import com.pulumi.opsgenie.outputs.EscalationRepeat;
import com.pulumi.opsgenie.outputs.EscalationRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Escalation within Opsgenie.
 * 
 * ## Example Usage
 * 
 * An escalation with a single rule
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.opsgenie.Escalation;
 * import com.pulumi.opsgenie.EscalationArgs;
 * import com.pulumi.opsgenie.inputs.EscalationRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Escalation(&#34;default&#34;, EscalationArgs.builder()        
 *             .rules(EscalationRuleArgs.builder()
 *                 .condition(&#34;if-not-acked&#34;)
 *                 .notifyType(&#34;default&#34;)
 *                 .delay(1)
 *                 .recipients(EscalationRuleRecipientArgs.builder()
 *                     .type(&#34;user&#34;)
 *                     .id(opsgenie_user.test().id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * An escalation with a multiple rules
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.opsgenie.Escalation;
 * import com.pulumi.opsgenie.EscalationArgs;
 * import com.pulumi.opsgenie.inputs.EscalationRuleArgs;
 * import com.pulumi.opsgenie.inputs.EscalationRepeatArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Escalation(&#34;default&#34;, EscalationArgs.builder()        
 *             .description(&#34;test&#34;)
 *             .ownerTeamId(opsgenie_team.test().id())
 *             .rules(            
 *                 EscalationRuleArgs.builder()
 *                     .condition(&#34;if-not-acked&#34;)
 *                     .notifyType(&#34;default&#34;)
 *                     .delay(1)
 *                     .recipients(EscalationRuleRecipientArgs.builder()
 *                         .type(&#34;user&#34;)
 *                         .id(opsgenie_user.test().id())
 *                         .build())
 *                     .build(),
 *                 EscalationRuleArgs.builder()
 *                     .condition(&#34;if-not-acked&#34;)
 *                     .notifyType(&#34;default&#34;)
 *                     .delay(1)
 *                     .recipients(EscalationRuleRecipientArgs.builder()
 *                         .type(&#34;team&#34;)
 *                         .id(opsgenie_team.test().id())
 *                         .build())
 *                     .build(),
 *                 EscalationRuleArgs.builder()
 *                     .condition(&#34;if-not-acked&#34;)
 *                     .notifyType(&#34;default&#34;)
 *                     .delay(1)
 *                     .recipients(EscalationRuleRecipientArgs.builder()
 *                         .type(&#34;schedule&#34;)
 *                         .id(opsgenie_schedule.test().id())
 *                         .build())
 *                     .build())
 *             .repeats(EscalationRepeatArgs.builder()
 *                 .waitInterval(10)
 *                 .count(1)
 *                 .resetRecipientStates(true)
 *                 .closeAlertAfterAll(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Escalations can be imported using the `escalation_id`, e.g.
 * 
 * ```sh
 * $ pulumi import opsgenie:index/escalation:Escalation test escalation_id`
 * ```
 * 
 */
@ResourceType(type="opsgenie:index/escalation:Escalation")
public class Escalation extends com.pulumi.resources.CustomResource {
    /**
     * Description of the escalation.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the escalation.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of the escalation.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the escalation.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Owner team id of the escalation.
     * 
     */
    @Export(name="ownerTeamId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ownerTeamId;

    /**
     * @return Owner team id of the escalation.
     * 
     */
    public Output<Optional<String>> ownerTeamId() {
        return Codegen.optional(this.ownerTeamId);
    }
    /**
     * Repeat preferences of the escalation including repeat interval, count, reverting acknowledge and seen states back and closing an alert automatically as soon as repeats are completed
     * 
     */
    @Export(name="repeats", refs={List.class,EscalationRepeat.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EscalationRepeat>> repeats;

    /**
     * @return Repeat preferences of the escalation including repeat interval, count, reverting acknowledge and seen states back and closing an alert automatically as soon as repeats are completed
     * 
     */
    public Output<Optional<List<EscalationRepeat>>> repeats() {
        return Codegen.optional(this.repeats);
    }
    /**
     * List of the escalation rules. See below for how rules are defined.
     * 
     */
    @Export(name="rules", refs={List.class,EscalationRule.class}, tree="[0,1]")
    private Output<List<EscalationRule>> rules;

    /**
     * @return List of the escalation rules. See below for how rules are defined.
     * 
     */
    public Output<List<EscalationRule>> rules() {
        return this.rules;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Escalation(String name) {
        this(name, EscalationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Escalation(String name, EscalationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Escalation(String name, EscalationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/escalation:Escalation", name, args == null ? EscalationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Escalation(String name, Output<String> id, @Nullable EscalationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("opsgenie:index/escalation:Escalation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Escalation get(String name, Output<String> id, @Nullable EscalationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Escalation(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.opsgenie.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.opsgenie.inputs.ScheduleRotationTimeRestrictionRestrictionArgs;
import com.pulumi.opsgenie.inputs.ScheduleRotationTimeRestrictionRestrictionListArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleRotationTimeRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleRotationTimeRestrictionArgs Empty = new ScheduleRotationTimeRestrictionArgs();

    /**
     * It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.
     * 
     */
    @Import(name="restriction")
    private @Nullable Output<List<ScheduleRotationTimeRestrictionRestrictionArgs>> restriction;

    /**
     * @return It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.
     * 
     */
    public Optional<Output<List<ScheduleRotationTimeRestrictionRestrictionArgs>>> restriction() {
        return Optional.ofNullable(this.restriction);
    }

    /**
     * It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.
     * 
     */
    @Import(name="restrictionList")
    private @Nullable Output<List<ScheduleRotationTimeRestrictionRestrictionListArgs>> restrictionList;

    /**
     * @return It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.
     * 
     */
    public Optional<Output<List<ScheduleRotationTimeRestrictionRestrictionListArgs>>> restrictionList() {
        return Optional.ofNullable(this.restrictionList);
    }

    /**
     * This parameter should be set to `time-of-day` or `weekday-and-time-of-day`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return This parameter should be set to `time-of-day` or `weekday-and-time-of-day`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ScheduleRotationTimeRestrictionArgs() {}

    private ScheduleRotationTimeRestrictionArgs(ScheduleRotationTimeRestrictionArgs $) {
        this.restriction = $.restriction;
        this.restrictionList = $.restrictionList;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleRotationTimeRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleRotationTimeRestrictionArgs $;

        public Builder() {
            $ = new ScheduleRotationTimeRestrictionArgs();
        }

        public Builder(ScheduleRotationTimeRestrictionArgs defaults) {
            $ = new ScheduleRotationTimeRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param restriction It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restriction(@Nullable Output<List<ScheduleRotationTimeRestrictionRestrictionArgs>> restriction) {
            $.restriction = restriction;
            return this;
        }

        /**
         * @param restriction It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restriction(List<ScheduleRotationTimeRestrictionRestrictionArgs> restriction) {
            return restriction(Output.of(restriction));
        }

        /**
         * @param restriction It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restriction(ScheduleRotationTimeRestrictionRestrictionArgs... restriction) {
            return restriction(List.of(restriction));
        }

        /**
         * @param restrictionList It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restrictionList(@Nullable Output<List<ScheduleRotationTimeRestrictionRestrictionListArgs>> restrictionList) {
            $.restrictionList = restrictionList;
            return this;
        }

        /**
         * @param restrictionList It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restrictionList(List<ScheduleRotationTimeRestrictionRestrictionListArgs> restrictionList) {
            return restrictionList(Output.of(restrictionList));
        }

        /**
         * @param restrictionList It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder restrictionList(ScheduleRotationTimeRestrictionRestrictionListArgs... restrictionList) {
            return restrictionList(List.of(restrictionList));
        }

        /**
         * @param type This parameter should be set to `time-of-day` or `weekday-and-time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type This parameter should be set to `time-of-day` or `weekday-and-time-of-day`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ScheduleRotationTimeRestrictionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ScheduleRotationTimeRestrictionArgs", "type");
            }
            return $;
        }
    }

}

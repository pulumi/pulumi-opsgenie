// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Manages a Team Routing Rule within Opsgenie.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as opsgenie from "@pulumi/opsgenie";
 *
 * const testSchedule = new opsgenie.Schedule("test", {
 *     description: "schedule test",
 *     enabled: false,
 *     timezone: "Europe/Rome",
 * });
 * const testTeam = new opsgenie.Team("test", {
 *     description: "This team deals with all the things",
 * });
 * const testTeamRoutingRule = new opsgenie.TeamRoutingRule("test", {
 *     criterias: [{
 *         conditions: [{
 *             expectedValue: "expected1",
 *             field: "message",
 *             not: false,
 *             operation: "contains",
 *         }],
 *         type: "match-any-condition",
 *     }],
 *     notifies: [{
 *         name: testSchedule.name,
 *         type: "schedule",
 *     }],
 *     order: 0,
 *     teamId: testTeam.id,
 *     timeRestrictions: [{
 *         restrictions: [{
 *             endDay: "tuesday",
 *             endHour: 18,
 *             endMin: 30,
 *             startDay: "monday",
 *             startHour: 8,
 *             startMin: 0,
 *         }],
 *         type: "weekday-and-time-of-day",
 *     }],
 *     timezone: "America/Los_Angeles",
 * });
 * ```
 *
 * ## Import
 *
 * Team Routing Rules can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import opsgenie:index/teamRoutingRule:TeamRoutingRule ruletest teamId/routingRuleId`
 * ```
 *
 *  For this example- Team Id = `c827c472-31f2-497b-9ec6-8ec855d7d94c`
 *
 * - Routing Rule Id = `2d1a78d0-c13e-47d3-af0a-8b6d0cc2b7b1`
 *
 * ```sh
 *  $ pulumi import opsgenie:index/teamRoutingRule:TeamRoutingRule ruletest c827c472-31f2-497b-9ec6-8ec855d7d94c/2d1a78d0-c13e-47d3-af0a-8b6d0cc2b7b1`
 * ```
 */
export class TeamRoutingRule extends pulumi.CustomResource {
    /**
     * Get an existing TeamRoutingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamRoutingRuleState, opts?: pulumi.CustomResourceOptions): TeamRoutingRule {
        return new TeamRoutingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opsgenie:index/teamRoutingRule:TeamRoutingRule';

    /**
     * Returns true if the given object is an instance of TeamRoutingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TeamRoutingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TeamRoutingRule.__pulumiType;
    }

    /**
     * You can refer Criteria for detailed information about criteria and its fields
     */
    public readonly criterias!: pulumi.Output<outputs.TeamRoutingRuleCriteria[] | undefined>;
    /**
     * Name of the team routing rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values for notify type : schedule, escalation, none
     */
    public readonly notifies!: pulumi.Output<outputs.TeamRoutingRuleNotify[]>;
    /**
     * The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
     */
    public readonly order!: pulumi.Output<number | undefined>;
    /**
     * Id of the team owning the routing rule
     */
    public readonly teamId!: pulumi.Output<string>;
    public readonly timeRestrictions!: pulumi.Output<outputs.TeamRoutingRuleTimeRestriction[] | undefined>;
    /**
     * Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
     */
    public readonly timezone!: pulumi.Output<string | undefined>;

    /**
     * Create a TeamRoutingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TeamRoutingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TeamRoutingRuleArgs | TeamRoutingRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TeamRoutingRuleState | undefined;
            inputs["criterias"] = state ? state.criterias : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notifies"] = state ? state.notifies : undefined;
            inputs["order"] = state ? state.order : undefined;
            inputs["teamId"] = state ? state.teamId : undefined;
            inputs["timeRestrictions"] = state ? state.timeRestrictions : undefined;
            inputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as TeamRoutingRuleArgs | undefined;
            if ((!args || args.notifies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notifies'");
            }
            if ((!args || args.teamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamId'");
            }
            inputs["criterias"] = args ? args.criterias : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notifies"] = args ? args.notifies : undefined;
            inputs["order"] = args ? args.order : undefined;
            inputs["teamId"] = args ? args.teamId : undefined;
            inputs["timeRestrictions"] = args ? args.timeRestrictions : undefined;
            inputs["timezone"] = args ? args.timezone : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TeamRoutingRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TeamRoutingRule resources.
 */
export interface TeamRoutingRuleState {
    /**
     * You can refer Criteria for detailed information about criteria and its fields
     */
    readonly criterias?: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleCriteria>[]>;
    /**
     * Name of the team routing rule
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values for notify type : schedule, escalation, none
     */
    readonly notifies?: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleNotify>[]>;
    /**
     * The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
     */
    readonly order?: pulumi.Input<number>;
    /**
     * Id of the team owning the routing rule
     */
    readonly teamId?: pulumi.Input<string>;
    readonly timeRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleTimeRestriction>[]>;
    /**
     * Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
     */
    readonly timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TeamRoutingRule resource.
 */
export interface TeamRoutingRuleArgs {
    /**
     * You can refer Criteria for detailed information about criteria and its fields
     */
    readonly criterias?: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleCriteria>[]>;
    /**
     * Name of the team routing rule
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values for notify type : schedule, escalation, none
     */
    readonly notifies: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleNotify>[]>;
    /**
     * The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
     */
    readonly order?: pulumi.Input<number>;
    /**
     * Id of the team owning the routing rule
     */
    readonly teamId: pulumi.Input<string>;
    readonly timeRestrictions?: pulumi.Input<pulumi.Input<inputs.TeamRoutingRuleTimeRestriction>[]>;
    /**
     * Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
     */
    readonly timezone?: pulumi.Input<string>;
}

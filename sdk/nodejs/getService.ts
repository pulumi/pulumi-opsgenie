// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages existing Service within Opsgenie.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as opsgenie from "@pulumi/opsgenie";
 *
 * const thisService = pulumi.output(opsgenie.getService({
 *     name: "Payment",
 * }));
 * ```
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("opsgenie:index/getService:getService", {
        "description": args.description,
        "name": args.name,
        "teamId": args.teamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    /**
     * Description field of the service that is generally used to provide a detailed information about the service.
     */
    description?: string;
    /**
     * Name of the service. This field must not be longer than 100 characters.
     */
    name: string;
    /**
     * Team id of the service.
     */
    teamId?: string;
}

/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly teamId?: string;
}

export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply(a => getService(a, opts))
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    /**
     * Description field of the service that is generally used to provide a detailed information about the service.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the service. This field must not be longer than 100 characters.
     */
    name: pulumi.Input<string>;
    /**
     * Team id of the service.
     */
    teamId?: pulumi.Input<string>;
}

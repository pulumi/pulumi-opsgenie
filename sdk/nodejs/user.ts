// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages a User within Opsgenie.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as opsgenie from "@pulumi/opsgenie";
 *
 * const test = new opsgenie.User("test", {
 *     fullName: "Test User",
 *     locale: "en_US",
 *     role: "User",
 *     skypeUsername: "skypename",
 *     tags: [
 *         "sre",
 *         "opsgenie",
 *     ],
 *     timezone: "America/New_York",
 *     userAddresses: [{
 *         city: "City",
 *         country: "Country",
 *         line: "Line",
 *         state: "State",
 *         zipcode: "998877",
 *     }],
 *     userDetails: {
 *         key1: "val1,val2",
 *         key2: "val3,val4",
 *     },
 *     username: "user@domain.com",
 * });
 * ```
 *
 * ## Import
 *
 * Users can be imported using the `user_id`, e.g.
 *
 * ```sh
 *  $ pulumi import opsgenie:index/user:User user user_id`
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opsgenie:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * The Full Name of the User.
     */
    public readonly fullName!: pulumi.Output<string>;
    /**
     * Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
     */
    public readonly locale!: pulumi.Output<string | undefined>;
    /**
     * The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * Skype username of the user.
     */
    public readonly skypeUsername!: pulumi.Output<string | undefined>;
    /**
     * A list of tags to be associated with the user.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * Address of the user.
     */
    public readonly userAddresses!: pulumi.Output<outputs.UserUserAddress[] | undefined>;
    /**
     * Details about the user in form of key and list. of values.
     */
    public readonly userDetails!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["skypeUsername"] = state ? state.skypeUsername : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["userAddresses"] = state ? state.userAddresses : undefined;
            resourceInputs["userDetails"] = state ? state.userDetails : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.fullName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fullName'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["skypeUsername"] = args ? args.skypeUsername : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["userAddresses"] = args ? args.userAddresses : undefined;
            resourceInputs["userDetails"] = args ? args.userDetails : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * The Full Name of the User.
     */
    fullName?: pulumi.Input<string>;
    /**
     * Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
     */
    locale?: pulumi.Input<string>;
    /**
     * The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.
     */
    role?: pulumi.Input<string>;
    /**
     * Skype username of the user.
     */
    skypeUsername?: pulumi.Input<string>;
    /**
     * A list of tags to be associated with the user.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
     */
    timezone?: pulumi.Input<string>;
    /**
     * Address of the user.
     */
    userAddresses?: pulumi.Input<pulumi.Input<inputs.UserUserAddress>[]>;
    /**
     * Details about the user in form of key and list. of values.
     */
    userDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The Full Name of the User.
     */
    fullName: pulumi.Input<string>;
    /**
     * Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.
     */
    locale?: pulumi.Input<string>;
    /**
     * The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.
     */
    role: pulumi.Input<string>;
    /**
     * Skype username of the user.
     */
    skypeUsername?: pulumi.Input<string>;
    /**
     * A list of tags to be associated with the user.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.
     */
    timezone?: pulumi.Input<string>;
    /**
     * Address of the user.
     */
    userAddresses?: pulumi.Input<pulumi.Input<inputs.UserUserAddress>[]>;
    /**
     * Details about the user in form of key and list. of values.
     */
    userDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.
     */
    username: pulumi.Input<string>;
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IncidentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing IncidentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncidentTemplateState, opts?: pulumi.CustomResourceOptions): IncidentTemplate {
        return new IncidentTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opsgenie:index/incidentTemplate:IncidentTemplate';

    /**
     * Returns true if the given object is an instance of IncidentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncidentTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncidentTemplate.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly details!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly impactedServices!: pulumi.Output<string[] | undefined>;
    public readonly message!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<string>;
    public readonly stakeholderProperties!: pulumi.Output<outputs.IncidentTemplateStakeholderProperty[]>;
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a IncidentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IncidentTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncidentTemplateArgs | IncidentTemplateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as IncidentTemplateState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["details"] = state ? state.details : undefined;
            inputs["impactedServices"] = state ? state.impactedServices : undefined;
            inputs["message"] = state ? state.message : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["stakeholderProperties"] = state ? state.stakeholderProperties : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IncidentTemplateArgs | undefined;
            if (!args || args.message === undefined) {
                throw new Error("Missing required property 'message'");
            }
            if (!args || args.priority === undefined) {
                throw new Error("Missing required property 'priority'");
            }
            if (!args || args.stakeholderProperties === undefined) {
                throw new Error("Missing required property 'stakeholderProperties'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["details"] = args ? args.details : undefined;
            inputs["impactedServices"] = args ? args.impactedServices : undefined;
            inputs["message"] = args ? args.message : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["stakeholderProperties"] = args ? args.stakeholderProperties : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(IncidentTemplate.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncidentTemplate resources.
 */
export interface IncidentTemplateState {
    readonly description?: pulumi.Input<string>;
    readonly details?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly impactedServices?: pulumi.Input<pulumi.Input<string>[]>;
    readonly message?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<string>;
    readonly stakeholderProperties?: pulumi.Input<pulumi.Input<inputs.IncidentTemplateStakeholderProperty>[]>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a IncidentTemplate resource.
 */
export interface IncidentTemplateArgs {
    readonly description?: pulumi.Input<string>;
    readonly details?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly impactedServices?: pulumi.Input<pulumi.Input<string>[]>;
    readonly message: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly priority: pulumi.Input<string>;
    readonly stakeholderProperties: pulumi.Input<pulumi.Input<inputs.IncidentTemplateStakeholderProperty>[]>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

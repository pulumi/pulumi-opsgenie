{
    "name": "opsgenie",
    "description": "A Pulumi package for creating and managing opsgenie cloud resources.",
    "keywords": [
        "pulumi",
        "opsgenie"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`opsgenie` Terraform Provider](https://github.com/opsgenie/terraform-provider-opsgenie).",
    "repository": "https://github.com/pulumi/pulumi-opsgenie",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing opsgenie cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/opsgenie/terraform-provider-opsgenie)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-opsgenie` repo](https://github.com/pulumi/pulumi-opsgenie/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-opsgenie` repo](https://github.com/opsgenie/terraform-provider-opsgenie/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/opsgenie/terraform-provider-opsgenie)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-opsgenie` repo](https://github.com/pulumi/pulumi-opsgenie/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-opsgenie` repo](https://github.com/opsgenie/terraform-provider-opsgenie/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "OPSGENIE_API_URL"
                    ]
                }
            }
        },
        "defaults": [
            "apiKey"
        ]
    },
    "types": {
        "opsgenie:index/AlertPolicyFilter:AlertPolicyFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyFilterCondition:AlertPolicyFilterCondition"
                    },
                    "description": "Conditions applied to filter. This is a block, structure is documented below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "A filter type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`\n"
                }
            },
            "type": "object"
        },
        "opsgenie:index/AlertPolicyFilterCondition:AlertPolicyFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string",
                    "description": "User defined value that will be compared with alert field according to the operation. Default: empty string\n"
                },
                "field": {
                    "type": "string",
                    "description": "Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `responders`, `teams`, `priority`\n"
                },
                "key": {
                    "type": "string",
                    "description": "If `field` is set as extra-properties, key could be used for key-value pair\n"
                },
                "not": {
                    "type": "boolean",
                    "description": "Indicates behaviour of the given operation. Default: `false`\n"
                },
                "operation": {
                    "type": "string",
                    "description": "It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/AlertPolicyResponder:AlertPolicyResponder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the responder\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the responder\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of responder. Acceptable values are: `user`, `team`, `escalation` or `schedule`\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the responder\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "opsgenie:index/AlertPolicyTimeRestriction:AlertPolicyTimeRestriction": {
            "properties": {
                "restriction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyTimeRestrictionRestriction:AlertPolicyTimeRestrictionRestriction"
                    },
                    "description": "A definition of hourly definition applied daily, this has to be used with combination: type = `time-of-day`. This is a block, structure is documented below.\n"
                },
                "restrictionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyTimeRestrictionRestrictionList:AlertPolicyTimeRestrictionRestrictionList"
                    },
                    "description": "List of days and hours definitions for field type = `weekday-and-time-of-day`. This is a block, structure is documented below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defines if restriction should apply daily on given hours or on certain days and hours. Possible values are: `time-of-day`, `weekday-and-time-of-day`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/AlertPolicyTimeRestrictionRestriction:AlertPolicyTimeRestrictionRestriction": {
            "properties": {
                "endHour": {
                    "type": "integer",
                    "description": "Ending hour of restriction.\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Ending minute of restriction on defined `end_hour`\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Starting hour of restriction.\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Staring minute of restriction on defined `start_hour`\n"
                }
            },
            "type": "object",
            "required": [
                "endHour",
                "endMin",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/AlertPolicyTimeRestrictionRestrictionList:AlertPolicyTimeRestrictionRestrictionList": {
            "properties": {
                "endDay": {
                    "type": "string",
                    "description": "Ending day of restriction (eg. `wednesday`)\n"
                },
                "endHour": {
                    "type": "integer",
                    "description": "Ending hour of restriction on defined `end_day`\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Ending minute of restriction on defined `end_hour`\n"
                },
                "startDay": {
                    "type": "string",
                    "description": "Starting day of restriction (eg. `monday`)\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Starting hour of restriction on defined `start_day`\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Staring minute of restriction on defined `start_hour`\n"
                }
            },
            "type": "object",
            "required": [
                "endDay",
                "endHour",
                "endMin",
                "startDay",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/ApiIntegrationResponder:ApiIntegrationResponder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the responder.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type.\n"
                }
            },
            "type": "object"
        },
        "opsgenie:index/EmailIntegrationResponder:EmailIntegrationResponder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the responder.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type.\n"
                }
            },
            "type": "object"
        },
        "opsgenie:index/EscalationRepeat:EscalationRepeat": {
            "properties": {
                "closeAlertAfterAll": {
                    "type": "boolean"
                },
                "count": {
                    "type": "integer"
                },
                "resetRecipientStates": {
                    "type": "boolean"
                },
                "waitInterval": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "opsgenie:index/EscalationRule:EscalationRule": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "The condition for notifying the recipient of escalation rule that is based on the alert state. Possible values are: `if-not-acked` and `if-not-closed`. Default: `if-not-acked`\n"
                },
                "delay": {
                    "type": "integer",
                    "description": "Time delay of the escalation rule, in minutes.\n"
                },
                "notifyType": {
                    "type": "string",
                    "description": "Recipient calculation logic for schedules. Possible values are:\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EscalationRuleRecipient:EscalationRuleRecipient"
                    },
                    "description": "Object of schedule, team, or users which will be notified in escalation. The possible values for participants are: `user`, `schedule`, `team`. There can only be one recipient per each `rules`.\n"
                }
            },
            "type": "object",
            "required": [
                "condition",
                "delay",
                "notifyType",
                "recipients"
            ]
        },
        "opsgenie:index/EscalationRuleRecipient:EscalationRuleRecipient": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Opsgenie Escalation.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "opsgenie:index/IncidentTemplateStakeholderProperty:IncidentTemplateStakeholderProperty": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Option to enable stakeholder notifications.Default value is true.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message that is to be passed to audience that is generally used to provide a content information about the alert.\n"
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "opsgenie:index/IntegrationActionAcknowledge:IntegrationActionAcknowledge": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An identifier that is used for alert deduplication. Default: `{{alias}}`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAcknowledgeFilter:IntegrationActionAcknowledgeFilter"
                    },
                    "description": "Used to specify rules for matching alerts and the filter type. Please note that depending on the integration type the field names in the filter conditions are:\n* For SNS integration: `actions`, `alias`, `entity`, `Message`, `recipients`, `responders`, `Subject`, `tags`, `teams`, `eventType`, `Timestamp`, `TopicArn`.\n* For API integration: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`, `eventType`.\n* For Email integration: `from_address`, `from_name`, `conversationSubject`, `subject`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration action.\n"
                },
                "note": {
                    "type": "string",
                    "description": "Additional alert action note.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Owner of the execution for integration action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "opsgenie:index/IntegrationActionAcknowledgeFilter:IntegrationActionAcknowledgeFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAcknowledgeFilterCondition:IntegrationActionAcknowledgeFilterCondition"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionAcknowledgeFilterCondition:IntegrationActionAcknowledgeFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/IntegrationActionAddNote:IntegrationActionAddNote": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An identifier that is used for alert deduplication. Default: `{{alias}}`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAddNoteFilter:IntegrationActionAddNoteFilter"
                    },
                    "description": "Used to specify rules for matching alerts and the filter type. Please note that depending on the integration type the field names in the filter conditions are:\n* For SNS integration: `actions`, `alias`, `entity`, `Message`, `recipients`, `responders`, `Subject`, `tags`, `teams`, `eventType`, `Timestamp`, `TopicArn`.\n* For API integration: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`, `eventType`.\n* For Email integration: `from_address`, `from_name`, `conversationSubject`, `subject`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration action.\n"
                },
                "note": {
                    "type": "string",
                    "description": "Additional alert action note.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Owner of the execution for integration action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "opsgenie:index/IntegrationActionAddNoteFilter:IntegrationActionAddNoteFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAddNoteFilterCondition:IntegrationActionAddNoteFilterCondition"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionAddNoteFilterCondition:IntegrationActionAddNoteFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/IntegrationActionClose:IntegrationActionClose": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "An identifier that is used for alert deduplication. Default: `{{alias}}`.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCloseFilter:IntegrationActionCloseFilter"
                    },
                    "description": "Used to specify rules for matching alerts and the filter type. Please note that depending on the integration type the field names in the filter conditions are:\n* For SNS integration: `actions`, `alias`, `entity`, `Message`, `recipients`, `responders`, `Subject`, `tags`, `teams`, `eventType`, `Timestamp`, `TopicArn`.\n* For API integration: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`, `eventType`.\n* For Email integration: `from_address`, `from_name`, `conversationSubject`, `subject`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration action.\n"
                },
                "note": {
                    "type": "string",
                    "description": "Additional alert action note.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Owner of the execution for integration action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "opsgenie:index/IntegrationActionCloseFilter:IntegrationActionCloseFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCloseFilterCondition:IntegrationActionCloseFilterCondition"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionCloseFilterCondition:IntegrationActionCloseFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/IntegrationActionCreate:IntegrationActionCreate": {
            "properties": {
                "alertActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "alias": {
                    "type": "string",
                    "description": "An identifier that is used for alert deduplication. Default: `{{alias}}`.\n"
                },
                "appendAttachments": {
                    "type": "boolean"
                },
                "customPriority": {
                    "type": "string",
                    "description": "Custom alert priority. e.g. ``{{message.substring(0,2)}}``\n"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the alert, anything that may not have fit in the `message` field.\n"
                },
                "entity": {
                    "type": "string",
                    "description": "The entity the alert is related to.\n"
                },
                "extraProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of user defined properties specified as a map.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCreateFilter:IntegrationActionCreateFilter"
                    },
                    "description": "Used to specify rules for matching alerts and the filter type. Please note that depending on the integration type the field names in the filter conditions are:\n* For SNS integration: `actions`, `alias`, `entity`, `Message`, `recipients`, `responders`, `Subject`, `tags`, `teams`, `eventType`, `Timestamp`, `TopicArn`.\n* For API integration: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`, `eventType`.\n* For Email integration: `from_address`, `from_name`, `conversationSubject`, `subject`\n"
                },
                "ignoreAlertActionsFromPayload": {
                    "type": "boolean"
                },
                "ignoreExtraPropertiesFromPayload": {
                    "type": "boolean"
                },
                "ignoreRespondersFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore responders sent in request payloads.\n"
                },
                "ignoreTagsFromPayload": {
                    "type": "boolean"
                },
                "ignoreTeamsFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore teams sent in request payloads.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Alert text limited to 130 characters.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration action.\n"
                },
                "note": {
                    "type": "string",
                    "description": "Additional alert action note.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Alert priority.\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCreateResponder:IntegrationActionCreateResponder"
                    },
                    "description": "User, schedule, teams or escalation names to calculate which users will receive notifications of the alert.\n"
                },
                "source": {
                    "type": "string",
                    "description": "User defined field to specify source of action.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Comma separated list of labels to be attached to the alert.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Owner of the execution for integration action.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "opsgenie:index/IntegrationActionCreateFilter:IntegrationActionCreateFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCreateFilterCondition:IntegrationActionCreateFilterCondition"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionCreateFilterCondition:IntegrationActionCreateFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/IntegrationActionCreateResponder:IntegrationActionCreateResponder": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the responder.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionIgnore:IntegrationActionIgnore": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionIgnoreFilter:IntegrationActionIgnoreFilter"
                    },
                    "description": "Used to specify rules for matching alerts and the filter type. Please note that depending on the integration type the field names in the filter conditions are:\n* For SNS integration: `actions`, `alias`, `entity`, `Message`, `recipients`, `responders`, `Subject`, `tags`, `teams`, `eventType`, `Timestamp`, `TopicArn`.\n* For API integration: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`, `eventType`.\n* For Email integration: `from_address`, `from_name`, `conversationSubject`, `subject`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration action.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "opsgenie:index/IntegrationActionIgnoreFilter:IntegrationActionIgnoreFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionIgnoreFilterCondition:IntegrationActionIgnoreFilterCondition"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The responder type - can be `escalation`, `team` or `user`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/IntegrationActionIgnoreFilterCondition:IntegrationActionIgnoreFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "not": {
                    "type": "boolean"
                },
                "operation": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer value that defines in which order the action will be performed. Default: `1`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/MaintenanceRule:MaintenanceRule": {
            "properties": {
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/MaintenanceRuleEntity:MaintenanceRuleEntity"
                    },
                    "description": "This field represents the entity that maintenance will be applied. Entity field takes two mandatory fields as id and type.\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of rule that will be defined in maintenance and can take either enabled or disabled for policy type rules. This field has to be disabled for integration type entity rules.\n"
                }
            },
            "type": "object",
            "required": [
                "entities"
            ]
        },
        "opsgenie:index/MaintenanceRuleEntity:MaintenanceRuleEntity": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the entity that maintenance will be applied.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the entity that maintenance will be applied. It can be either integration or policy.\n"
                }
            },
            "type": "object"
        },
        "opsgenie:index/MaintenanceTime:MaintenanceTime": {
            "properties": {
                "endDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00).\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00).\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the entity that maintenance will be applied. It can be either integration or policy.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/NotificationPolicyAutoCloseAction:NotificationPolicyAutoCloseAction": {
            "properties": {
                "durations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoCloseActionDuration:NotificationPolicyAutoCloseActionDuration"
                    },
                    "description": "Duration of this action. This is a block, structure is documented below.\n"
                }
            },
            "type": "object",
            "required": [
                "durations"
            ]
        },
        "opsgenie:index/NotificationPolicyAutoCloseActionDuration:NotificationPolicyAutoCloseActionDuration": {
            "properties": {
                "timeAmount": {
                    "type": "integer",
                    "description": "A amount of time in `time_units`. This is a integer attribute.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`\n"
                }
            },
            "type": "object",
            "required": [
                "timeAmount"
            ]
        },
        "opsgenie:index/NotificationPolicyAutoRestartAction:NotificationPolicyAutoRestartAction": {
            "properties": {
                "durations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoRestartActionDuration:NotificationPolicyAutoRestartActionDuration"
                    },
                    "description": "Duration of this action. This is a block, structure is documented below.\n"
                },
                "maxRepeatCount": {
                    "type": "integer",
                    "description": "How many times to repeat. This is a integer attribute.\n"
                }
            },
            "type": "object",
            "required": [
                "durations",
                "maxRepeatCount"
            ]
        },
        "opsgenie:index/NotificationPolicyAutoRestartActionDuration:NotificationPolicyAutoRestartActionDuration": {
            "properties": {
                "timeAmount": {
                    "type": "integer",
                    "description": "A amount of time in `time_units`. This is a integer attribute.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`\n"
                }
            },
            "type": "object",
            "required": [
                "timeAmount"
            ]
        },
        "opsgenie:index/NotificationPolicyDeDuplicationAction:NotificationPolicyDeDuplicationAction": {
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Count\n"
                },
                "deDuplicationActionType": {
                    "type": "string",
                    "description": "Deduplication type. Possible values are: \"value-based\", \"frequency-based\"\n"
                },
                "durations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDeDuplicationActionDuration:NotificationPolicyDeDuplicationActionDuration"
                    },
                    "description": "Duration of this action (only required for \"frequency-based\" de-duplication action). This is a block, structure is documented below.\n"
                }
            },
            "type": "object",
            "required": [
                "count",
                "deDuplicationActionType"
            ]
        },
        "opsgenie:index/NotificationPolicyDeDuplicationActionDuration:NotificationPolicyDeDuplicationActionDuration": {
            "properties": {
                "timeAmount": {
                    "type": "integer",
                    "description": "A amount of time in `time_units`. This is a integer attribute.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`\n"
                }
            },
            "type": "object",
            "required": [
                "timeAmount"
            ]
        },
        "opsgenie:index/NotificationPolicyDelayAction:NotificationPolicyDelayAction": {
            "properties": {
                "delayOption": {
                    "type": "string",
                    "description": "Defines until what day to delay or for what duration. Possible values are: `for-duration`, `next-time`, `next-weekday`, `next-monday`, `next-tuesday`, `next-wednesday`, `next-thursday`, `next-friday`, `next-saturday`, `next-sunday`\n"
                },
                "durations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDelayActionDuration:NotificationPolicyDelayActionDuration"
                    },
                    "description": "Duration of this action. If `delay_option` = `for-duration` this has to be set. This is a block, structure is documented below.\n"
                },
                "untilHour": {
                    "type": "integer",
                    "description": "Until what hour notifications will be delayed. If `delay_option` is set to antyhing else then `for-duration` this has to be set.\n"
                },
                "untilMinute": {
                    "type": "integer",
                    "description": "Until what minute on `until_hour` notifications will be delayed. If `delay_option` is set to antyhing else then `for-duration` this has to be set.\n"
                }
            },
            "type": "object",
            "required": [
                "delayOption"
            ]
        },
        "opsgenie:index/NotificationPolicyDelayActionDuration:NotificationPolicyDelayActionDuration": {
            "properties": {
                "timeAmount": {
                    "type": "integer",
                    "description": "A amount of time in `time_units`. This is a integer attribute.\n"
                },
                "timeUnit": {
                    "type": "string",
                    "description": "Valid time units are: `minutes`, `hours`, `days`. Default: `minutes`\n"
                }
            },
            "type": "object",
            "required": [
                "timeAmount"
            ]
        },
        "opsgenie:index/NotificationPolicyFilter:NotificationPolicyFilter": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyFilterCondition:NotificationPolicyFilterCondition"
                    },
                    "description": "Conditions applied to filter. This is a block, structure is documented below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "A filter type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`\n"
                }
            },
            "type": "object"
        },
        "opsgenie:index/NotificationPolicyFilterCondition:NotificationPolicyFilterCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string",
                    "description": "User defined value that will be compared with alert field according to the operation. Default: empty string\n"
                },
                "field": {
                    "type": "string",
                    "description": "Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `responders`, `teams`, `priority`\n"
                },
                "key": {
                    "type": "string",
                    "description": "If `field` is set as extra-properties, key could be used for key-value pair\n"
                },
                "not": {
                    "type": "boolean",
                    "description": "Indicates behaviour of the given operation. Default: `false`\n"
                },
                "operation": {
                    "type": "string",
                    "description": "It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/NotificationPolicyTimeRestriction:NotificationPolicyTimeRestriction": {
            "properties": {
                "restriction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyTimeRestrictionRestriction:NotificationPolicyTimeRestrictionRestriction"
                    },
                    "description": "A definition of hourly definition applied daily, this has to be used with combination: type = `time-of-day`. This is a block, structure is documented below.\n"
                },
                "restrictionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyTimeRestrictionRestrictionList:NotificationPolicyTimeRestrictionRestrictionList"
                    },
                    "description": "List of days and hours definitions for field type = `weekday-and-time-of-day`. This is a block, structure is documented below.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Defines if restriction should apply daily on given hours or on certain days and hours. Possible values are: `time-of-day`, `weekday-and-time-of-day`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/NotificationPolicyTimeRestrictionRestriction:NotificationPolicyTimeRestrictionRestriction": {
            "properties": {
                "endHour": {
                    "type": "integer",
                    "description": "Ending hour of restriction.\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Ending minute of restriction on defined `end_hour`\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Starting hour of restriction.\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Staring minute of restriction on defined `start_hour`\n"
                }
            },
            "type": "object",
            "required": [
                "endHour",
                "endMin",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/NotificationPolicyTimeRestrictionRestrictionList:NotificationPolicyTimeRestrictionRestrictionList": {
            "properties": {
                "endDay": {
                    "type": "string",
                    "description": "Ending day of restriction (eg. `wednesday`)\n"
                },
                "endHour": {
                    "type": "integer",
                    "description": "Ending hour of restriction on defined `end_day`\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Ending minute of restriction on defined `end_hour`\n"
                },
                "startDay": {
                    "type": "string",
                    "description": "Starting day of restriction (eg. `monday`)\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Starting hour of restriction on defined `start_day`\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Staring minute of restriction on defined `start_hour`\n"
                }
            },
            "type": "object",
            "required": [
                "endDay",
                "endHour",
                "endMin",
                "startDay",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/NotificationRuleCriteria:NotificationRuleCriteria": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleCriteriaCondition:NotificationRuleCriteriaCondition"
                    },
                    "description": "Defines the fields and values when the condition applies\n"
                },
                "type": {
                    "type": "string",
                    "description": "Kind of matching filter. Possible values: `match-all`, `match-any-condition`, `match-all-conditions`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/NotificationRuleCriteriaCondition:NotificationRuleCriteriaCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string",
                    "description": "User defined value that will be compared with alert field according to the operation. Default: empty string\n"
                },
                "field": {
                    "type": "string",
                    "description": "Possible values: `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`\n"
                },
                "key": {
                    "type": "string",
                    "description": "If 'field' is set as 'extra-properties', key could be used for key-value pair\n"
                },
                "not": {
                    "type": "boolean",
                    "description": "Indicates behaviour of the given operation. Default: `false`\n"
                },
                "operation": {
                    "type": "string",
                    "description": "Possible values: `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/NotificationRuleRepeat:NotificationRuleRepeat": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "loopAfter": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "loopAfter"
            ]
        },
        "opsgenie:index/NotificationRuleSchedule:NotificationRuleSchedule": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the notification policy\n"
                },
                "type": {
                    "type": "string",
                    "description": "Kind of matching filter. Possible values: `match-all`, `match-any-condition`, `match-all-conditions`\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "opsgenie:index/NotificationRuleStep:NotificationRuleStep": {
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleStepContact:NotificationRuleStepContact"
                    },
                    "description": "Defines the contact that notification will be sent to. This is a block, structure is documented below.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defined if this step is enabled. Default: `true`\n"
                },
                "sendAfter": {
                    "type": "integer",
                    "description": "Time period, in minutes, notification will be sent after.\n"
                }
            },
            "type": "object",
            "required": [
                "contacts"
            ]
        },
        "opsgenie:index/NotificationRuleStepContact:NotificationRuleStepContact": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Contact method. Possible values: `email`, `sms`, `voice`, `mobile`\n"
                },
                "to": {
                    "type": "string",
                    "description": "Address of a given method (eg. email address for `email`, phone number for `sms`/`voice` or mobile application name for `mobile`)\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "to"
            ]
        },
        "opsgenie:index/NotificationRuleTimeRestriction:NotificationRuleTimeRestriction": {
            "properties": {
                "restriction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleTimeRestrictionRestriction:NotificationRuleTimeRestrictionRestriction"
                    }
                },
                "restrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleTimeRestrictionRestriction:NotificationRuleTimeRestrictionRestriction"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Kind of matching filter. Possible values: `match-all`, `match-any-condition`, `match-all-conditions`\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/NotificationRuleTimeRestrictionRestriction:NotificationRuleTimeRestrictionRestriction": {
            "properties": {
                "endDay": {
                    "type": "string"
                },
                "endHour": {
                    "type": "integer"
                },
                "endMin": {
                    "type": "integer"
                },
                "startDay": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer"
                },
                "startMin": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "endDay",
                "endHour",
                "endMin",
                "startDay",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/ScheduleRotationParticipant:ScheduleRotationParticipant": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the responder.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The responder type.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/ScheduleRotationTimeRestriction:ScheduleRotationTimeRestriction": {
            "properties": {
                "restriction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationTimeRestrictionRestriction:ScheduleRotationTimeRestrictionRestriction"
                    },
                    "description": "It is a restriction object which is described below. In this case startDay/endDay fields are not supported. This can be used only if time restriction type is `time-of-day`.\n"
                },
                "restrictionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationTimeRestrictionRestrictionList:ScheduleRotationTimeRestrictionRestrictionList"
                    },
                    "description": "It is a restriction object which is described below. This can be used only if time restriction type is `weekday-and-time-of-day`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "This parameter should be set to `time-of-day` or `weekday-and-time-of-day`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/ScheduleRotationTimeRestrictionRestriction:ScheduleRotationTimeRestrictionRestriction": {
            "properties": {
                "endHour": {
                    "type": "integer",
                    "description": "Value of the hour that frame will end.\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Value of the minute that frame will end. Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically.\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Value of the hour that frame will start.\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Value of the minute that frame will start. Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "endHour",
                "endMin",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/ScheduleRotationTimeRestrictionRestrictionList:ScheduleRotationTimeRestrictionRestrictionList": {
            "properties": {
                "endDay": {
                    "type": "string",
                    "description": "Value of the day that frame will end.\n"
                },
                "endHour": {
                    "type": "integer",
                    "description": "Value of the hour that frame will end.\n"
                },
                "endMin": {
                    "type": "integer",
                    "description": "Value of the minute that frame will end. Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically.\n\nBoth `start_day` and `end_day` can assume only `monday`, `tuesday`, `wednesday`, `thursday`, `friday`, `saturday`, or `sunday` values.\n"
                },
                "startDay": {
                    "type": "string",
                    "description": "Value of the day that frame will start.\n"
                },
                "startHour": {
                    "type": "integer",
                    "description": "Value of the hour that frame will start\n"
                },
                "startMin": {
                    "type": "integer",
                    "description": "Value of the minute that frame will start. Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically.\n"
                }
            },
            "type": "object",
            "required": [
                "endDay",
                "endHour",
                "endMin",
                "startDay",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/ServiceIncidentRuleIncidentRule:ServiceIncidentRuleIncidentRule": {
            "properties": {
                "conditionMatchType": {
                    "type": "string",
                    "description": "A Condition type, supported types are: `match-all`, `match-any-condition`, `match-all-conditions`. Default: `match-all`\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRuleCondition:ServiceIncidentRuleIncidentRuleCondition"
                    },
                    "description": "Conditions applied to incident. This is a block, structure is documented below.\n"
                },
                "incidentProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRuleIncidentProperty:ServiceIncidentRuleIncidentRuleIncidentProperty"
                    },
                    "description": "Properties for incident rule. This is a block, structure is documented below.\n"
                }
            },
            "type": "object",
            "required": [
                "incidentProperties"
            ]
        },
        "opsgenie:index/ServiceIncidentRuleIncidentRuleCondition:ServiceIncidentRuleIncidentRuleCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string",
                    "description": "User defined value that will be compared with alert field according to the operation. Default: empty string\n"
                },
                "field": {
                    "type": "string",
                    "description": "Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `details`, `extra-properties`, `recipients`, `teams`, `priority`\n"
                },
                "key": {
                    "type": "string",
                    "description": "If 'field' is set as 'extra-properties', key could be used for key-value pair\n"
                },
                "not": {
                    "type": "boolean",
                    "description": "Indicates behaviour of the given operation. Default: false\n"
                },
                "operation": {
                    "type": "string",
                    "description": "It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty`, `equals-ignore-whitespace`.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/ServiceIncidentRuleIncidentRuleIncidentProperty:ServiceIncidentRuleIncidentRuleIncidentProperty": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description field of the incident rule.\n"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs to use as custom properties of the alert.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message of the related incident rule.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority level of the alert. Possible values are `P1`, `P2`, `P3`, `P4` and `P5`\n"
                },
                "stakeholderProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderProperty:ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderProperty"
                    },
                    "description": "DEtails about stakeholders for this rule. This is a block, structure is documented below.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the alert.\n"
                }
            },
            "type": "object",
            "required": [
                "message",
                "priority",
                "stakeholderProperties"
            ]
        },
        "opsgenie:index/ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderProperty:ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderProperty": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description that is generally used to provide a detailed information about the alert.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Option to enable stakeholder notifications.Default value is true.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message that is to be passed to audience that is generally used to provide a content information about the alert.\n"
                }
            },
            "type": "object",
            "required": [
                "message"
            ]
        },
        "opsgenie:index/TeamMember:TeamMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The UUID for the member to add to this Team.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role for the user within the Team - can be either `admin` or `user`. Default: `user`.\n"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "username"
                    ]
                }
            }
        },
        "opsgenie:index/TeamRoutingRuleCriteria:TeamRoutingRuleCriteria": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleCriteriaCondition:TeamRoutingRuleCriteriaCondition"
                    },
                    "description": "List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the operation will be applied on conditions. Should be one of `match-all`, `match-any-condition` or `match-all-conditions`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/TeamRoutingRuleCriteriaCondition:TeamRoutingRuleCriteriaCondition": {
            "properties": {
                "expectedValue": {
                    "type": "string"
                },
                "field": {
                    "type": "string",
                    "description": "Specifies which alert field will be used in condition. Possible values are `message`, `alias`, `description`, `source`, `entity`, `tags`, `actions`, `extra-properties`, `recipients`, `teams` or `priority`.\n"
                },
                "key": {
                    "type": "string",
                    "description": "If field is set as extra-properties, key could be used for key-value pair.\n"
                },
                "not": {
                    "type": "boolean",
                    "description": "Indicates behaviour of the given operation. Default value is false.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "It is the operation that will be executed for the given field and key. Possible operations are `matches`, `contains`, `starts-with`, `ends-with`, `equals`, `contains-key`, `contains-value`, `greater-than`, `less-than`, `is-empty` and `equals-ignore-whitespace`.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list.\n"
                }
            },
            "type": "object",
            "required": [
                "field",
                "operation"
            ]
        },
        "opsgenie:index/TeamRoutingRuleNotify:TeamRoutingRuleNotify": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "type"
                    ]
                }
            }
        },
        "opsgenie:index/TeamRoutingRuleTimeRestriction:TeamRoutingRuleTimeRestriction": {
            "properties": {
                "restriction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleTimeRestrictionRestriction:TeamRoutingRuleTimeRestrictionRestriction"
                    }
                },
                "restrictionList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleTimeRestrictionRestrictionList:TeamRoutingRuleTimeRestrictionRestrictionList"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the operation will be applied on conditions. Should be one of `match-all`, `match-any-condition` or `match-all-conditions`.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "opsgenie:index/TeamRoutingRuleTimeRestrictionRestriction:TeamRoutingRuleTimeRestrictionRestriction": {
            "properties": {
                "endHour": {
                    "type": "integer"
                },
                "endMin": {
                    "type": "integer"
                },
                "startHour": {
                    "type": "integer"
                },
                "startMin": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "endHour",
                "endMin",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/TeamRoutingRuleTimeRestrictionRestrictionList:TeamRoutingRuleTimeRestrictionRestrictionList": {
            "properties": {
                "endDay": {
                    "type": "string"
                },
                "endHour": {
                    "type": "integer"
                },
                "endMin": {
                    "type": "integer"
                },
                "startDay": {
                    "type": "string"
                },
                "startHour": {
                    "type": "integer"
                },
                "startMin": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "endDay",
                "endHour",
                "endMin",
                "startDay",
                "startHour",
                "startMin"
            ]
        },
        "opsgenie:index/UserUserAddress:UserUserAddress": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "line": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "city",
                "country",
                "line",
                "state",
                "zipcode"
            ]
        },
        "opsgenie:index/getEscalationRepeat:getEscalationRepeat": {
            "properties": {
                "closeAlertAfterAll": {
                    "type": "boolean"
                },
                "count": {
                    "type": "integer"
                },
                "resetRecipientStates": {
                    "type": "boolean"
                },
                "waitInterval": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "opsgenie:index/getEscalationRule:getEscalationRule": {
            "properties": {
                "condition": {
                    "type": "string"
                },
                "delay": {
                    "type": "integer"
                },
                "notifyType": {
                    "type": "string"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/getEscalationRuleRecipient:getEscalationRuleRecipient"
                    }
                }
            },
            "type": "object",
            "required": [
                "condition",
                "delay",
                "notifyType",
                "recipients"
            ]
        },
        "opsgenie:index/getEscalationRuleRecipient:getEscalationRuleRecipient": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Opsgenie Escalation.\n"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "opsgenie:index/getTeamMember:getTeamMember": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Opsgenie Team.\n"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the opsgenie package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string"
            }
        },
        "required": [
            "apiKey"
        ],
        "inputProperties": {
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string",
                "defaultInfo": {
                    "environment": [
                        "OPSGENIE_API_URL"
                    ]
                }
            }
        },
        "requiredInputs": [
            "apiKey"
        ]
    },
    "resources": {
        "opsgenie:index/alertPolicy:AlertPolicy": {
            "description": "Manages a Alert Policy within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testTeam = new opsgenie.Team(\"testTeam\", {description: \"This team deals with all the things\"});\nconst testAlertPolicy = new opsgenie.AlertPolicy(\"testAlertPolicy\", {\n    teamId: testTeam.id,\n    policyDescription: \"This is sample policy\",\n    message: \"{{message}}\",\n    filters: [{}],\n    timeRestrictions: [{\n        type: \"weekday-and-time-of-day\",\n        restrictionList: [\n            {\n                endDay: \"monday\",\n                endHour: 7,\n                endMin: 0,\n                startDay: \"sunday\",\n                startHour: 21,\n                startMin: 0,\n            },\n            {\n                endDay: \"tuesday\",\n                endHour: 7,\n                endMin: 0,\n                startDay: \"monday\",\n                startHour: 22,\n                startMin: 0,\n            },\n        ],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_team = opsgenie.Team(\"testTeam\", description=\"This team deals with all the things\")\ntest_alert_policy = opsgenie.AlertPolicy(\"testAlertPolicy\",\n    team_id=test_team.id,\n    policy_description=\"This is sample policy\",\n    message=\"{{message}}\",\n    filters=[opsgenie.AlertPolicyFilterArgs()],\n    time_restrictions=[opsgenie.AlertPolicyTimeRestrictionArgs(\n        type=\"weekday-and-time-of-day\",\n        restriction_list=[\n            opsgenie.AlertPolicyTimeRestrictionRestrictionListArgs(\n                end_day=\"monday\",\n                end_hour=7,\n                end_min=0,\n                start_day=\"sunday\",\n                start_hour=21,\n                start_min=0,\n            ),\n            opsgenie.AlertPolicyTimeRestrictionRestrictionListArgs(\n                end_day=\"tuesday\",\n                end_hour=7,\n                end_min=0,\n                start_day=\"monday\",\n                start_hour=22,\n                start_min=0,\n            ),\n        ],\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testTeam = new Opsgenie.Team(\"testTeam\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var testAlertPolicy = new Opsgenie.AlertPolicy(\"testAlertPolicy\", new()\n    {\n        TeamId = testTeam.Id,\n        PolicyDescription = \"This is sample policy\",\n        Message = \"{{message}}\",\n        Filters = new[]\n        {\n            null,\n        },\n        TimeRestrictions = new[]\n        {\n            new Opsgenie.Inputs.AlertPolicyTimeRestrictionArgs\n            {\n                Type = \"weekday-and-time-of-day\",\n                RestrictionList = new[]\n                {\n                    new Opsgenie.Inputs.AlertPolicyTimeRestrictionRestrictionListArgs\n                    {\n                        EndDay = \"monday\",\n                        EndHour = 7,\n                        EndMin = 0,\n                        StartDay = \"sunday\",\n                        StartHour = 21,\n                        StartMin = 0,\n                    },\n                    new Opsgenie.Inputs.AlertPolicyTimeRestrictionRestrictionListArgs\n                    {\n                        EndDay = \"tuesday\",\n                        EndHour = 7,\n                        EndMin = 0,\n                        StartDay = \"monday\",\n                        StartHour = 22,\n                        StartMin = 0,\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestTeam, err := opsgenie.NewTeam(ctx, \"testTeam\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewAlertPolicy(ctx, \"testAlertPolicy\", \u0026opsgenie.AlertPolicyArgs{\n\t\t\tTeamId:            testTeam.ID(),\n\t\t\tPolicyDescription: pulumi.String(\"This is sample policy\"),\n\t\t\tMessage:           pulumi.String(\"{{message}}\"),\n\t\t\tFilters: opsgenie.AlertPolicyFilterArray{\n\t\t\t\tnil,\n\t\t\t},\n\t\t\tTimeRestrictions: opsgenie.AlertPolicyTimeRestrictionArray{\n\t\t\t\t\u0026opsgenie.AlertPolicyTimeRestrictionArgs{\n\t\t\t\t\tType: pulumi.String(\"weekday-and-time-of-day\"),\n\t\t\t\t\tRestrictionList: opsgenie.AlertPolicyTimeRestrictionRestrictionListArray{\n\t\t\t\t\t\t\u0026opsgenie.AlertPolicyTimeRestrictionRestrictionListArgs{\n\t\t\t\t\t\t\tEndDay:    pulumi.String(\"monday\"),\n\t\t\t\t\t\t\tEndHour:   pulumi.Int(7),\n\t\t\t\t\t\t\tEndMin:    pulumi.Int(0),\n\t\t\t\t\t\t\tStartDay:  pulumi.String(\"sunday\"),\n\t\t\t\t\t\t\tStartHour: pulumi.Int(21),\n\t\t\t\t\t\t\tStartMin:  pulumi.Int(0),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026opsgenie.AlertPolicyTimeRestrictionRestrictionListArgs{\n\t\t\t\t\t\t\tEndDay:    pulumi.String(\"tuesday\"),\n\t\t\t\t\t\t\tEndHour:   pulumi.Int(7),\n\t\t\t\t\t\t\tEndMin:    pulumi.Int(0),\n\t\t\t\t\t\t\tStartDay:  pulumi.String(\"monday\"),\n\t\t\t\t\t\t\tStartHour: pulumi.Int(22),\n\t\t\t\t\t\t\tStartMin:  pulumi.Int(0),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.AlertPolicy;\nimport com.pulumi.opsgenie.AlertPolicyArgs;\nimport com.pulumi.opsgenie.inputs.AlertPolicyFilterArgs;\nimport com.pulumi.opsgenie.inputs.AlertPolicyTimeRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testTeam = new Team(\"testTeam\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var testAlertPolicy = new AlertPolicy(\"testAlertPolicy\", AlertPolicyArgs.builder()        \n            .teamId(testTeam.id())\n            .policyDescription(\"This is sample policy\")\n            .message(\"{{message}}\")\n            .filters()\n            .timeRestrictions(AlertPolicyTimeRestrictionArgs.builder()\n                .type(\"weekday-and-time-of-day\")\n                .restrictionList(                \n                    AlertPolicyTimeRestrictionRestrictionListArgs.builder()\n                        .endDay(\"monday\")\n                        .endHour(7)\n                        .endMin(0)\n                        .startDay(\"sunday\")\n                        .startHour(21)\n                        .startMin(0)\n                        .build(),\n                    AlertPolicyTimeRestrictionRestrictionListArgs.builder()\n                        .endDay(\"tuesday\")\n                        .endHour(7)\n                        .endMin(0)\n                        .startDay(\"monday\")\n                        .startHour(22)\n                        .startMin(0)\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testTeam:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  testAlertPolicy:\n    type: opsgenie:AlertPolicy\n    properties:\n      teamId: ${testTeam.id}\n      policyDescription: This is sample policy\n      message: '{{message}}'\n      filters:\n        - {}\n      timeRestrictions:\n        - type: weekday-and-time-of-day\n          restrictionList:\n            - endDay: monday\n              endHour: 7\n              endMin: 0\n              startDay: sunday\n              startHour: 21\n              startMin: 0\n            - endDay: tuesday\n              endHour: 7\n              endMin: 0\n              startDay: monday\n              startHour: 22\n              startMin: 0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAlert policies can be imported using the `team_id/policy_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/alertPolicy:AlertPolicy test team_id/policy_id`\n```\n\nYou can import global polices using only policy identifier\n\n```sh\n$ pulumi import opsgenie:index/alertPolicy:AlertPolicy test policy_id`\n```\n\n",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions to add to the alerts original actions value as a list of strings. If `ignore_original_actions` field is set to `true`, this will replace the original actions.\n"
                },
                "alertDescription": {
                    "type": "string",
                    "description": "Description of the alert. You can use `{{description}}` to refer to the original alert description. Default: `{{description}}`\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Alias of the alert. You can use `{{alias}}` to refer to the original alias. Default: `{{alias}}`\n"
                },
                "continuePolicy": {
                    "type": "boolean",
                    "description": "It will trigger other modify policies if set to `true`. Default: `false`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "entity": {
                    "type": "string",
                    "description": "Entity field of the alert. You can use `{{entity}}` to refer to the original entity. Default: `{{entity}}`\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyFilter:AlertPolicyFilter"
                    },
                    "description": "A alert filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                },
                "ignoreOriginalActions": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original actions of the alert. Default: `false`\n"
                },
                "ignoreOriginalDetails": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original details of the alert. Default: `false`\n"
                },
                "ignoreOriginalResponders": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original responders of the alert. Default: `false`\n"
                },
                "ignoreOriginalTags": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original tags of the alert. Default: `false`\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message of the alerts\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the alert policy\n"
                },
                "policyDescription": {
                    "type": "string",
                    "description": "Description of the policy. This can be max 512 characters.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority of the alert. Should be one of `P1`, `P2`, `P3`, `P4`, or `P5`\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyResponder:AlertPolicyResponder"
                    },
                    "description": "Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If `ignore_original_responders` field is set to `true`, this will replace the original responders. The possible values for responders are: `user`, `team`, `escalation`, `schedule`. This is a block, structure is documented below.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Source field of the alert. You can use `{{source}}` to refer to the original source. Default: `{{source}}`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to add to the alerts original tags value as a list of strings. If `ignore_original_responders` field is set to `true`, this will replace the original responders.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of team that this policy belongs to.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyTimeRestriction:AlertPolicyTimeRestriction"
                    },
                    "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                }
            },
            "required": [
                "message",
                "name"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Actions to add to the alerts original actions value as a list of strings. If `ignore_original_actions` field is set to `true`, this will replace the original actions.\n"
                },
                "alertDescription": {
                    "type": "string",
                    "description": "Description of the alert. You can use `{{description}}` to refer to the original alert description. Default: `{{description}}`\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Alias of the alert. You can use `{{alias}}` to refer to the original alias. Default: `{{alias}}`\n"
                },
                "continuePolicy": {
                    "type": "boolean",
                    "description": "It will trigger other modify policies if set to `true`. Default: `false`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "entity": {
                    "type": "string",
                    "description": "Entity field of the alert. You can use `{{entity}}` to refer to the original entity. Default: `{{entity}}`\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyFilter:AlertPolicyFilter"
                    },
                    "description": "A alert filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                },
                "ignoreOriginalActions": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original actions of the alert. Default: `false`\n"
                },
                "ignoreOriginalDetails": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original details of the alert. Default: `false`\n"
                },
                "ignoreOriginalResponders": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original responders of the alert. Default: `false`\n"
                },
                "ignoreOriginalTags": {
                    "type": "boolean",
                    "description": "If set to `true`, policy will ignore the original tags of the alert. Default: `false`\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message of the alerts\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the alert policy\n"
                },
                "policyDescription": {
                    "type": "string",
                    "description": "Description of the policy. This can be max 512 characters.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority of the alert. Should be one of `P1`, `P2`, `P3`, `P4`, or `P5`\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyResponder:AlertPolicyResponder"
                    },
                    "description": "Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If `ignore_original_responders` field is set to `true`, this will replace the original responders. The possible values for responders are: `user`, `team`, `escalation`, `schedule`. This is a block, structure is documented below.\n"
                },
                "source": {
                    "type": "string",
                    "description": "Source field of the alert. You can use `{{source}}` to refer to the original source. Default: `{{source}}`\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags to add to the alerts original tags value as a list of strings. If `ignore_original_responders` field is set to `true`, this will replace the original responders.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of team that this policy belongs to.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/AlertPolicyTimeRestriction:AlertPolicyTimeRestriction"
                    },
                    "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                }
            },
            "requiredInputs": [
                "message"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertPolicy resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Actions to add to the alerts original actions value as a list of strings. If `ignore_original_actions` field is set to `true`, this will replace the original actions.\n"
                    },
                    "alertDescription": {
                        "type": "string",
                        "description": "Description of the alert. You can use `{{description}}` to refer to the original alert description. Default: `{{description}}`\n"
                    },
                    "alias": {
                        "type": "string",
                        "description": "Alias of the alert. You can use `{{alias}}` to refer to the original alias. Default: `{{alias}}`\n"
                    },
                    "continuePolicy": {
                        "type": "boolean",
                        "description": "It will trigger other modify policies if set to `true`. Default: `false`\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If policy should be enabled. Default: `true`\n"
                    },
                    "entity": {
                        "type": "string",
                        "description": "Entity field of the alert. You can use `{{entity}}` to refer to the original entity. Default: `{{entity}}`\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/AlertPolicyFilter:AlertPolicyFilter"
                        },
                        "description": "A alert filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                    },
                    "ignoreOriginalActions": {
                        "type": "boolean",
                        "description": "If set to `true`, policy will ignore the original actions of the alert. Default: `false`\n"
                    },
                    "ignoreOriginalDetails": {
                        "type": "boolean",
                        "description": "If set to `true`, policy will ignore the original details of the alert. Default: `false`\n"
                    },
                    "ignoreOriginalResponders": {
                        "type": "boolean",
                        "description": "If set to `true`, policy will ignore the original responders of the alert. Default: `false`\n"
                    },
                    "ignoreOriginalTags": {
                        "type": "boolean",
                        "description": "If set to `true`, policy will ignore the original tags of the alert. Default: `false`\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message of the alerts\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the alert policy\n"
                    },
                    "policyDescription": {
                        "type": "string",
                        "description": "Description of the policy. This can be max 512 characters.\n"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the alert. Should be one of `P1`, `P2`, `P3`, `P4`, or `P5`\n"
                    },
                    "responders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/AlertPolicyResponder:AlertPolicyResponder"
                        },
                        "description": "Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If `ignore_original_responders` field is set to `true`, this will replace the original responders. The possible values for responders are: `user`, `team`, `escalation`, `schedule`. This is a block, structure is documented below.\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "Source field of the alert. You can use `{{source}}` to refer to the original source. Default: `{{source}}`\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags to add to the alerts original tags value as a list of strings. If `ignore_original_responders` field is set to `true`, this will replace the original responders.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "Id of team that this policy belongs to.\n"
                    },
                    "timeRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/AlertPolicyTimeRestriction:AlertPolicyTimeRestriction"
                        },
                        "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/apiIntegration:ApiIntegration": {
            "description": "Manages an API Integration within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst example_api_integrationApiIntegration = new opsgenie.ApiIntegration(\"example-api-integrationApiIntegration\", {\n    type: \"API\",\n    responders: [\n        {\n            type: \"user\",\n            id: opsgenie_user.user.id,\n        },\n        {\n            type: \"user\",\n            id: opsgenie_user.fahri.id,\n        },\n    ],\n});\nconst example_api_integrationIndex_apiIntegrationApiIntegration = new opsgenie.ApiIntegration(\"example-api-integrationIndex/apiIntegrationApiIntegration\", {\n    type: \"Prometheus\",\n    responders: [{\n        type: \"user\",\n        id: opsgenie_user.user.id,\n    }],\n    enabled: false,\n    allowWriteAccess: false,\n    ignoreRespondersFromPayload: true,\n    suppressNotifications: true,\n    ownerTeamId: opsgenie_team.team.id,\n});\nconst test3 = new opsgenie.ApiIntegration(\"test3\", {\n    type: \"Webhook\",\n    responders: [{\n        type: \"user\",\n        id: opsgenie_user.user.id,\n    }],\n    enabled: false,\n    allowWriteAccess: false,\n    suppressNotifications: true,\n    webhookUrl: \"https://api.example.com/v1\",\n    headers: {\n        header1: value1,\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\nexample_api_integration_api_integration = opsgenie.ApiIntegration(\"example-api-integrationApiIntegration\",\n    type=\"API\",\n    responders=[\n        opsgenie.ApiIntegrationResponderArgs(\n            type=\"user\",\n            id=opsgenie_user[\"user\"][\"id\"],\n        ),\n        opsgenie.ApiIntegrationResponderArgs(\n            type=\"user\",\n            id=opsgenie_user[\"fahri\"][\"id\"],\n        ),\n    ])\nexample_api_integration_index_api_integration_api_integration = opsgenie.ApiIntegration(\"example-api-integrationIndex/apiIntegrationApiIntegration\",\n    type=\"Prometheus\",\n    responders=[opsgenie.ApiIntegrationResponderArgs(\n        type=\"user\",\n        id=opsgenie_user[\"user\"][\"id\"],\n    )],\n    enabled=False,\n    allow_write_access=False,\n    ignore_responders_from_payload=True,\n    suppress_notifications=True,\n    owner_team_id=opsgenie_team[\"team\"][\"id\"])\ntest3 = opsgenie.ApiIntegration(\"test3\",\n    type=\"Webhook\",\n    responders=[opsgenie.ApiIntegrationResponderArgs(\n        type=\"user\",\n        id=opsgenie_user[\"user\"][\"id\"],\n    )],\n    enabled=False,\n    allow_write_access=False,\n    suppress_notifications=True,\n    webhook_url=\"https://api.example.com/v1\",\n    headers={\n        \"header1\": value1,\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example_api_integrationApiIntegration = new Opsgenie.ApiIntegration(\"example-api-integrationApiIntegration\", new()\n    {\n        Type = \"API\",\n        Responders = new[]\n        {\n            new Opsgenie.Inputs.ApiIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.User.Id,\n            },\n            new Opsgenie.Inputs.ApiIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.Fahri.Id,\n            },\n        },\n    });\n\n    var example_api_integrationIndex_apiIntegrationApiIntegration = new Opsgenie.ApiIntegration(\"example-api-integrationIndex/apiIntegrationApiIntegration\", new()\n    {\n        Type = \"Prometheus\",\n        Responders = new[]\n        {\n            new Opsgenie.Inputs.ApiIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.User.Id,\n            },\n        },\n        Enabled = false,\n        AllowWriteAccess = false,\n        IgnoreRespondersFromPayload = true,\n        SuppressNotifications = true,\n        OwnerTeamId = opsgenie_team.Team.Id,\n    });\n\n    var test3 = new Opsgenie.ApiIntegration(\"test3\", new()\n    {\n        Type = \"Webhook\",\n        Responders = new[]\n        {\n            new Opsgenie.Inputs.ApiIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.User.Id,\n            },\n        },\n        Enabled = false,\n        AllowWriteAccess = false,\n        SuppressNotifications = true,\n        WebhookUrl = \"https://api.example.com/v1\",\n        Headers = \n        {\n            { \"header1\", value1 },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewApiIntegration(ctx, \"example-api-integrationApiIntegration\", \u0026opsgenie.ApiIntegrationArgs{\n\t\t\tType: pulumi.String(\"API\"),\n\t\t\tResponders: opsgenie.ApiIntegrationResponderArray{\n\t\t\t\t\u0026opsgenie.ApiIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.User.Id),\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.ApiIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Fahri.Id),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewApiIntegration(ctx, \"example-api-integrationIndex/apiIntegrationApiIntegration\", \u0026opsgenie.ApiIntegrationArgs{\n\t\t\tType: pulumi.String(\"Prometheus\"),\n\t\t\tResponders: opsgenie.ApiIntegrationResponderArray{\n\t\t\t\t\u0026opsgenie.ApiIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.User.Id),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled:                     pulumi.Bool(false),\n\t\t\tAllowWriteAccess:            pulumi.Bool(false),\n\t\t\tIgnoreRespondersFromPayload: pulumi.Bool(true),\n\t\t\tSuppressNotifications:       pulumi.Bool(true),\n\t\t\tOwnerTeamId:                 pulumi.Any(opsgenie_team.Team.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewApiIntegration(ctx, \"test3\", \u0026opsgenie.ApiIntegrationArgs{\n\t\t\tType: pulumi.String(\"Webhook\"),\n\t\t\tResponders: opsgenie.ApiIntegrationResponderArray{\n\t\t\t\t\u0026opsgenie.ApiIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.User.Id),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled:               pulumi.Bool(false),\n\t\t\tAllowWriteAccess:      pulumi.Bool(false),\n\t\t\tSuppressNotifications: pulumi.Bool(true),\n\t\t\tWebhookUrl:            pulumi.String(\"https://api.example.com/v1\"),\n\t\t\tHeaders: pulumi.StringMap{\n\t\t\t\t\"header1\": pulumi.Any(value1),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.ApiIntegration;\nimport com.pulumi.opsgenie.ApiIntegrationArgs;\nimport com.pulumi.opsgenie.inputs.ApiIntegrationResponderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example_api_integrationApiIntegration = new ApiIntegration(\"example-api-integrationApiIntegration\", ApiIntegrationArgs.builder()        \n            .type(\"API\")\n            .responders(            \n                ApiIntegrationResponderArgs.builder()\n                    .type(\"user\")\n                    .id(opsgenie_user.user().id())\n                    .build(),\n                ApiIntegrationResponderArgs.builder()\n                    .type(\"user\")\n                    .id(opsgenie_user.fahri().id())\n                    .build())\n            .build());\n\n        var example_api_integrationIndex_apiIntegrationApiIntegration = new ApiIntegration(\"example-api-integrationIndex/apiIntegrationApiIntegration\", ApiIntegrationArgs.builder()        \n            .type(\"Prometheus\")\n            .responders(ApiIntegrationResponderArgs.builder()\n                .type(\"user\")\n                .id(opsgenie_user.user().id())\n                .build())\n            .enabled(false)\n            .allowWriteAccess(false)\n            .ignoreRespondersFromPayload(true)\n            .suppressNotifications(true)\n            .ownerTeamId(opsgenie_team.team().id())\n            .build());\n\n        var test3 = new ApiIntegration(\"test3\", ApiIntegrationArgs.builder()        \n            .type(\"Webhook\")\n            .responders(ApiIntegrationResponderArgs.builder()\n                .type(\"user\")\n                .id(opsgenie_user.user().id())\n                .build())\n            .enabled(false)\n            .allowWriteAccess(false)\n            .suppressNotifications(true)\n            .webhookUrl(\"https://api.example.com/v1\")\n            .headers(Map.of(\"header1\", value1))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example-api-integrationApiIntegration:\n    type: opsgenie:ApiIntegration\n    properties:\n      type: API\n      responders:\n        - type: user\n          id: ${opsgenie_user.user.id}\n        - type: user\n          id: ${opsgenie_user.fahri.id}\n  example-api-integrationIndex/apiIntegrationApiIntegration:\n    type: opsgenie:ApiIntegration\n    properties:\n      type: Prometheus\n      responders:\n        - type: user\n          id: ${opsgenie_user.user.id}\n      enabled: false\n      allowWriteAccess: false\n      ignoreRespondersFromPayload: true\n      suppressNotifications: true\n      ownerTeamId: ${opsgenie_team.team.id}\n  test3:\n    type: opsgenie:ApiIntegration\n    properties:\n      type: Webhook\n      responders:\n        - type: user\n          id: ${opsgenie_user.user.id}\n      enabled: false\n      allowWriteAccess: false\n      suppressNotifications: true\n      webhookUrl: https://api.example.com/v1\n      headers:\n        header1: ${value1}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAPI Integrations can be imported using the `integration_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/apiIntegration:ApiIntegration this integration_id`\n```\n\n",
            "properties": {
                "allowWriteAccess": {
                    "type": "boolean",
                    "description": "This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "(Computed) API key of the created integration\n",
                    "secret": true
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This parameter is for specifying whether the integration will be enabled or not. Default: `true`\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ignoreRespondersFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration. Name must be unique for each integration.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the integration. If changed, this will recreate a new API integration, which will probably have a different API key.\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ApiIntegrationResponder:ApiIntegrationResponder"
                    },
                    "description": "User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.\n"
                },
                "suppressNotifications": {
                    "type": "boolean",
                    "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).\n"
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.\n"
                }
            },
            "required": [
                "apiKey",
                "name"
            ],
            "inputProperties": {
                "allowWriteAccess": {
                    "type": "boolean",
                    "description": "This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "This parameter is for specifying whether the integration will be enabled or not. Default: `true`\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ignoreRespondersFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration. Name must be unique for each integration.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the integration. If changed, this will recreate a new API integration, which will probably have a different API key.\n",
                    "willReplaceOnChanges": true
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ApiIntegrationResponder:ApiIntegrationResponder"
                    },
                    "description": "User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.\n"
                },
                "suppressNotifications": {
                    "type": "boolean",
                    "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).\n",
                    "willReplaceOnChanges": true
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiIntegration resources.\n",
                "properties": {
                    "allowWriteAccess": {
                        "type": "boolean",
                        "description": "This parameter is for configuring the write access of integration. If write access is restricted, the integration will not be authorized to write within any domain. Default: `true`.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "(Computed) API key of the created integration\n",
                        "secret": true
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "This parameter is for specifying whether the integration will be enabled or not. Default: `true`\n"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ignoreRespondersFromPayload": {
                        "type": "boolean",
                        "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the integration. Name must be unique for each integration.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the integration. If changed, this will recreate a new API integration, which will probably have a different API key.\n",
                        "willReplaceOnChanges": true
                    },
                    "responders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/ApiIntegrationResponder:ApiIntegrationResponder"
                        },
                        "description": "User, schedule, teams or escalation names to calculate which users will receive the notifications of the alert.\n"
                    },
                    "suppressNotifications": {
                        "type": "boolean",
                        "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration (API, Marid, Prometheus, etc). The full list of options can be found [here](https://docs.opsgenie.com/docs/integration-types-to-use-with-api).\n",
                        "willReplaceOnChanges": true
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "It is required if type is `Webhook`. This is the url Opsgenie will be sending request to.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/customRole:CustomRole": {
            "description": "Manages custom user roles within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.CustomRole(\"test\", {\n    disallowedRights: [\n        \"profile-edit\",\n        \"contacts-edit\",\n    ],\n    extendedRole: \"user\",\n    grantedRights: [\"alert-delete\"],\n    roleName: \"genierole\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.CustomRole(\"test\",\n    disallowed_rights=[\n        \"profile-edit\",\n        \"contacts-edit\",\n    ],\n    extended_role=\"user\",\n    granted_rights=[\"alert-delete\"],\n    role_name=\"genierole\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.CustomRole(\"test\", new()\n    {\n        DisallowedRights = new[]\n        {\n            \"profile-edit\",\n            \"contacts-edit\",\n        },\n        ExtendedRole = \"user\",\n        GrantedRights = new[]\n        {\n            \"alert-delete\",\n        },\n        RoleName = \"genierole\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewCustomRole(ctx, \"test\", \u0026opsgenie.CustomRoleArgs{\n\t\t\tDisallowedRights: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"profile-edit\"),\n\t\t\t\tpulumi.String(\"contacts-edit\"),\n\t\t\t},\n\t\t\tExtendedRole: pulumi.String(\"user\"),\n\t\t\tGrantedRights: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"alert-delete\"),\n\t\t\t},\n\t\t\tRoleName: pulumi.String(\"genierole\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.CustomRole;\nimport com.pulumi.opsgenie.CustomRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new CustomRole(\"test\", CustomRoleArgs.builder()        \n            .disallowedRights(            \n                \"profile-edit\",\n                \"contacts-edit\")\n            .extendedRole(\"user\")\n            .grantedRights(\"alert-delete\")\n            .roleName(\"genierole\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:CustomRole\n    properties:\n      disallowedRights:\n        - profile-edit\n        - contacts-edit\n      extendedRole: user\n      grantedRights:\n        - alert-delete\n      roleName: genierole\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "disallowedRights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                },
                "extendedRole": {
                    "type": "string",
                    "description": "The role from which this role has been derived. Allowed Values: \"user\", \"observer\", \"stakeholder\".\n"
                },
                "grantedRights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Name of the custom role.\n"
                }
            },
            "required": [
                "roleName"
            ],
            "inputProperties": {
                "disallowedRights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                },
                "extendedRole": {
                    "type": "string",
                    "description": "The role from which this role has been derived. Allowed Values: \"user\", \"observer\", \"stakeholder\".\n"
                },
                "grantedRights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Name of the custom role.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomRole resources.\n",
                "properties": {
                    "disallowedRights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The rights this role cannot have. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                    },
                    "extendedRole": {
                        "type": "string",
                        "description": "The role from which this role has been derived. Allowed Values: \"user\", \"observer\", \"stakeholder\".\n"
                    },
                    "grantedRights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The rights granted to this role. For allowed values please refer [User Right Prerequisites](https://docs.opsgenie.com/docs/custom-user-role-api#section-user-right-prerequisites)\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Name of the custom role.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/emailIntegration:EmailIntegration": {
            "description": "Manages an Email Integration within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testEmailIntegration = new opsgenie.EmailIntegration(\"testEmailIntegration\", {emailUsername: \"fahri\"});\nconst testIndex_emailIntegrationEmailIntegration = new opsgenie.EmailIntegration(\"testIndex/emailIntegrationEmailIntegration\", {\n    responders: [\n        {\n            type: \"user\",\n            id: opsgenie_user.test.id,\n        },\n        {\n            type: \"schedule\",\n            id: opsgenie_schedule.test.id,\n        },\n        {\n            type: \"escalation\",\n            id: opsgenie_escalation.test.id,\n        },\n        {\n            type: \"team\",\n            id: opsgenie_team.test2.id,\n        },\n    ],\n    emailUsername: \"test\",\n    enabled: true,\n    ignoreRespondersFromPayload: true,\n    suppressNotifications: true,\n});\nconst testOpsgenieIndex_emailIntegrationEmailIntegration = new opsgenie.EmailIntegration(\"testOpsgenieIndex/emailIntegrationEmailIntegration\", {\n    responders: [{\n        type: \"user\",\n        id: opsgenie_user.test.id,\n    }],\n    emailUsername: \"test\",\n    enabled: true,\n    ignoreRespondersFromPayload: true,\n    suppressNotifications: true,\n    ownerTeamId: opsgenie_team_genies.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_email_integration = opsgenie.EmailIntegration(\"testEmailIntegration\", email_username=\"fahri\")\ntest_index_email_integration_email_integration = opsgenie.EmailIntegration(\"testIndex/emailIntegrationEmailIntegration\",\n    responders=[\n        opsgenie.EmailIntegrationResponderArgs(\n            type=\"user\",\n            id=opsgenie_user[\"test\"][\"id\"],\n        ),\n        opsgenie.EmailIntegrationResponderArgs(\n            type=\"schedule\",\n            id=opsgenie_schedule[\"test\"][\"id\"],\n        ),\n        opsgenie.EmailIntegrationResponderArgs(\n            type=\"escalation\",\n            id=opsgenie_escalation[\"test\"][\"id\"],\n        ),\n        opsgenie.EmailIntegrationResponderArgs(\n            type=\"team\",\n            id=opsgenie_team[\"test2\"][\"id\"],\n        ),\n    ],\n    email_username=\"test\",\n    enabled=True,\n    ignore_responders_from_payload=True,\n    suppress_notifications=True)\ntest_opsgenie_index_email_integration_email_integration = opsgenie.EmailIntegration(\"testOpsgenieIndex/emailIntegrationEmailIntegration\",\n    responders=[opsgenie.EmailIntegrationResponderArgs(\n        type=\"user\",\n        id=opsgenie_user[\"test\"][\"id\"],\n    )],\n    email_username=\"test\",\n    enabled=True,\n    ignore_responders_from_payload=True,\n    suppress_notifications=True,\n    owner_team_id=opsgenie_team_genies[\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testEmailIntegration = new Opsgenie.EmailIntegration(\"testEmailIntegration\", new()\n    {\n        EmailUsername = \"fahri\",\n    });\n\n    var testIndex_emailIntegrationEmailIntegration = new Opsgenie.EmailIntegration(\"testIndex/emailIntegrationEmailIntegration\", new()\n    {\n        Responders = new[]\n        {\n            new Opsgenie.Inputs.EmailIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.Test.Id,\n            },\n            new Opsgenie.Inputs.EmailIntegrationResponderArgs\n            {\n                Type = \"schedule\",\n                Id = opsgenie_schedule.Test.Id,\n            },\n            new Opsgenie.Inputs.EmailIntegrationResponderArgs\n            {\n                Type = \"escalation\",\n                Id = opsgenie_escalation.Test.Id,\n            },\n            new Opsgenie.Inputs.EmailIntegrationResponderArgs\n            {\n                Type = \"team\",\n                Id = opsgenie_team.Test2.Id,\n            },\n        },\n        EmailUsername = \"test\",\n        Enabled = true,\n        IgnoreRespondersFromPayload = true,\n        SuppressNotifications = true,\n    });\n\n    var testOpsgenieIndex_emailIntegrationEmailIntegration = new Opsgenie.EmailIntegration(\"testOpsgenieIndex/emailIntegrationEmailIntegration\", new()\n    {\n        Responders = new[]\n        {\n            new Opsgenie.Inputs.EmailIntegrationResponderArgs\n            {\n                Type = \"user\",\n                Id = opsgenie_user.Test.Id,\n            },\n        },\n        EmailUsername = \"test\",\n        Enabled = true,\n        IgnoreRespondersFromPayload = true,\n        SuppressNotifications = true,\n        OwnerTeamId = opsgenie_team_genies.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewEmailIntegration(ctx, \"testEmailIntegration\", \u0026opsgenie.EmailIntegrationArgs{\n\t\t\tEmailUsername: pulumi.String(\"fahri\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewEmailIntegration(ctx, \"testIndex/emailIntegrationEmailIntegration\", \u0026opsgenie.EmailIntegrationArgs{\n\t\t\tResponders: opsgenie.EmailIntegrationResponderArray{\n\t\t\t\t\u0026opsgenie.EmailIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Test.Id),\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.EmailIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"schedule\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_schedule.Test.Id),\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.EmailIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"escalation\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_escalation.Test.Id),\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.EmailIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"team\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_team.Test2.Id),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEmailUsername:               pulumi.String(\"test\"),\n\t\t\tEnabled:                     pulumi.Bool(true),\n\t\t\tIgnoreRespondersFromPayload: pulumi.Bool(true),\n\t\t\tSuppressNotifications:       pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewEmailIntegration(ctx, \"testOpsgenieIndex/emailIntegrationEmailIntegration\", \u0026opsgenie.EmailIntegrationArgs{\n\t\t\tResponders: opsgenie.EmailIntegrationResponderArray{\n\t\t\t\t\u0026opsgenie.EmailIntegrationResponderArgs{\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Test.Id),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEmailUsername:               pulumi.String(\"test\"),\n\t\t\tEnabled:                     pulumi.Bool(true),\n\t\t\tIgnoreRespondersFromPayload: pulumi.Bool(true),\n\t\t\tSuppressNotifications:       pulumi.Bool(true),\n\t\t\tOwnerTeamId:                 pulumi.Any(opsgenie_team_genies.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.EmailIntegration;\nimport com.pulumi.opsgenie.EmailIntegrationArgs;\nimport com.pulumi.opsgenie.inputs.EmailIntegrationResponderArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testEmailIntegration = new EmailIntegration(\"testEmailIntegration\", EmailIntegrationArgs.builder()        \n            .emailUsername(\"fahri\")\n            .build());\n\n        var testIndex_emailIntegrationEmailIntegration = new EmailIntegration(\"testIndex/emailIntegrationEmailIntegration\", EmailIntegrationArgs.builder()        \n            .responders(            \n                EmailIntegrationResponderArgs.builder()\n                    .type(\"user\")\n                    .id(opsgenie_user.test().id())\n                    .build(),\n                EmailIntegrationResponderArgs.builder()\n                    .type(\"schedule\")\n                    .id(opsgenie_schedule.test().id())\n                    .build(),\n                EmailIntegrationResponderArgs.builder()\n                    .type(\"escalation\")\n                    .id(opsgenie_escalation.test().id())\n                    .build(),\n                EmailIntegrationResponderArgs.builder()\n                    .type(\"team\")\n                    .id(opsgenie_team.test2().id())\n                    .build())\n            .emailUsername(\"test\")\n            .enabled(true)\n            .ignoreRespondersFromPayload(true)\n            .suppressNotifications(true)\n            .build());\n\n        var testOpsgenieIndex_emailIntegrationEmailIntegration = new EmailIntegration(\"testOpsgenieIndex/emailIntegrationEmailIntegration\", EmailIntegrationArgs.builder()        \n            .responders(EmailIntegrationResponderArgs.builder()\n                .type(\"user\")\n                .id(opsgenie_user.test().id())\n                .build())\n            .emailUsername(\"test\")\n            .enabled(true)\n            .ignoreRespondersFromPayload(true)\n            .suppressNotifications(true)\n            .ownerTeamId(opsgenie_team_genies.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testEmailIntegration:\n    type: opsgenie:EmailIntegration\n    properties:\n      emailUsername: fahri\n  testIndex/emailIntegrationEmailIntegration:\n    type: opsgenie:EmailIntegration\n    properties:\n      responders:\n        - type: user\n          id: ${opsgenie_user.test.id}\n        - type: schedule\n          id: ${opsgenie_schedule.test.id}\n        - type: escalation\n          id: ${opsgenie_escalation.test.id}\n        - type: team\n          id: ${opsgenie_team.test2.id}\n      emailUsername: test\n      enabled: true\n      ignoreRespondersFromPayload: true\n      suppressNotifications: true\n  testOpsgenieIndex/emailIntegrationEmailIntegration:\n    type: opsgenie:EmailIntegration\n    properties:\n      responders:\n        - type: user\n          id: ${opsgenie_user.test.id}\n      emailUsername: test\n      enabled: true\n      ignoreRespondersFromPayload: true\n      suppressNotifications: true\n      ownerTeamId: ${opsgenie_team_genies.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nEmail Integrations can be imported using the `id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/emailIntegration:EmailIntegration test id`\n```\n\n",
            "properties": {
                "emailUsername": {
                    "type": "string",
                    "description": "The username part of the email address. It must be unique for each integration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "A Member block as documented below.\n"
                },
                "ignoreRespondersFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration. Name must be unique for each integration.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the integration.\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EmailIntegrationResponder:EmailIntegrationResponder"
                    }
                },
                "suppressNotifications": {
                    "type": "boolean",
                    "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                }
            },
            "required": [
                "emailUsername",
                "name"
            ],
            "inputProperties": {
                "emailUsername": {
                    "type": "string",
                    "description": "The username part of the email address. It must be unique for each integration.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "A Member block as documented below.\n"
                },
                "ignoreRespondersFromPayload": {
                    "type": "boolean",
                    "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the integration. Name must be unique for each integration.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the integration.\n"
                },
                "responders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EmailIntegrationResponder:EmailIntegrationResponder"
                    }
                },
                "suppressNotifications": {
                    "type": "boolean",
                    "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                }
            },
            "requiredInputs": [
                "emailUsername"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailIntegration resources.\n",
                "properties": {
                    "emailUsername": {
                        "type": "string",
                        "description": "The username part of the email address. It must be unique for each integration.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "A Member block as documented below.\n"
                    },
                    "ignoreRespondersFromPayload": {
                        "type": "boolean",
                        "description": "If enabled, the integration will ignore recipients sent in request payloads. Default: `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the integration. Name must be unique for each integration.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the integration.\n"
                    },
                    "responders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/EmailIntegrationResponder:EmailIntegrationResponder"
                        }
                    },
                    "suppressNotifications": {
                        "type": "boolean",
                        "description": "If enabled, notifications that come from alerts will be suppressed. Default: `false`.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/escalation:Escalation": {
            "description": "Manages an Escalation within Opsgenie.\n\n## Example Usage\n\nAn escalation with a single rule\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst _default = new opsgenie.Escalation(\"default\", {rules: [{\n    condition: \"if-not-acked\",\n    notifyType: \"default\",\n    delay: 1,\n    recipients: [{\n        type: \"user\",\n        id: opsgenie_user.test.id,\n    }],\n}]});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ndefault = opsgenie.Escalation(\"default\", rules=[opsgenie.EscalationRuleArgs(\n    condition=\"if-not-acked\",\n    notify_type=\"default\",\n    delay=1,\n    recipients=[opsgenie.EscalationRuleRecipientArgs(\n        type=\"user\",\n        id=opsgenie_user[\"test\"][\"id\"],\n    )],\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = new Opsgenie.Escalation(\"default\", new()\n    {\n        Rules = new[]\n        {\n            new Opsgenie.Inputs.EscalationRuleArgs\n            {\n                Condition = \"if-not-acked\",\n                NotifyType = \"default\",\n                Delay = 1,\n                Recipients = new[]\n                {\n                    new Opsgenie.Inputs.EscalationRuleRecipientArgs\n                    {\n                        Type = \"user\",\n                        Id = opsgenie_user.Test.Id,\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewEscalation(ctx, \"default\", \u0026opsgenie.EscalationArgs{\n\t\t\tRules: opsgenie.EscalationRuleArray{\n\t\t\t\t\u0026opsgenie.EscalationRuleArgs{\n\t\t\t\t\tCondition:  pulumi.String(\"if-not-acked\"),\n\t\t\t\t\tNotifyType: pulumi.String(\"default\"),\n\t\t\t\t\tDelay:      pulumi.Int(1),\n\t\t\t\t\tRecipients: opsgenie.EscalationRuleRecipientArray{\n\t\t\t\t\t\t\u0026opsgenie.EscalationRuleRecipientArgs{\n\t\t\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Test.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Escalation;\nimport com.pulumi.opsgenie.EscalationArgs;\nimport com.pulumi.opsgenie.inputs.EscalationRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_ = new Escalation(\"default\", EscalationArgs.builder()        \n            .rules(EscalationRuleArgs.builder()\n                .condition(\"if-not-acked\")\n                .notifyType(\"default\")\n                .delay(1)\n                .recipients(EscalationRuleRecipientArgs.builder()\n                    .type(\"user\")\n                    .id(opsgenie_user.test().id())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  default:\n    type: opsgenie:Escalation\n    properties:\n      rules:\n        - condition: if-not-acked\n          notifyType: default\n          delay: 1\n          recipients:\n            - type: user\n              id: ${opsgenie_user.test.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nAn escalation with a multiple rules\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst _default = new opsgenie.Escalation(\"default\", {\n    description: \"test\",\n    ownerTeamId: opsgenie_team.test.id,\n    rules: [\n        {\n            condition: \"if-not-acked\",\n            notifyType: \"default\",\n            delay: 1,\n            recipients: [{\n                type: \"user\",\n                id: opsgenie_user.test.id,\n            }],\n        },\n        {\n            condition: \"if-not-acked\",\n            notifyType: \"default\",\n            delay: 1,\n            recipients: [{\n                type: \"team\",\n                id: opsgenie_team.test.id,\n            }],\n        },\n        {\n            condition: \"if-not-acked\",\n            notifyType: \"default\",\n            delay: 1,\n            recipients: [{\n                type: \"schedule\",\n                id: opsgenie_schedule.test.id,\n            }],\n        },\n    ],\n    repeats: [{\n        waitInterval: 10,\n        count: 1,\n        resetRecipientStates: true,\n        closeAlertAfterAll: false,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ndefault = opsgenie.Escalation(\"default\",\n    description=\"test\",\n    owner_team_id=opsgenie_team[\"test\"][\"id\"],\n    rules=[\n        opsgenie.EscalationRuleArgs(\n            condition=\"if-not-acked\",\n            notify_type=\"default\",\n            delay=1,\n            recipients=[opsgenie.EscalationRuleRecipientArgs(\n                type=\"user\",\n                id=opsgenie_user[\"test\"][\"id\"],\n            )],\n        ),\n        opsgenie.EscalationRuleArgs(\n            condition=\"if-not-acked\",\n            notify_type=\"default\",\n            delay=1,\n            recipients=[opsgenie.EscalationRuleRecipientArgs(\n                type=\"team\",\n                id=opsgenie_team[\"test\"][\"id\"],\n            )],\n        ),\n        opsgenie.EscalationRuleArgs(\n            condition=\"if-not-acked\",\n            notify_type=\"default\",\n            delay=1,\n            recipients=[opsgenie.EscalationRuleRecipientArgs(\n                type=\"schedule\",\n                id=opsgenie_schedule[\"test\"][\"id\"],\n            )],\n        ),\n    ],\n    repeats=[opsgenie.EscalationRepeatArgs(\n        wait_interval=10,\n        count=1,\n        reset_recipient_states=True,\n        close_alert_after_all=False,\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = new Opsgenie.Escalation(\"default\", new()\n    {\n        Description = \"test\",\n        OwnerTeamId = opsgenie_team.Test.Id,\n        Rules = new[]\n        {\n            new Opsgenie.Inputs.EscalationRuleArgs\n            {\n                Condition = \"if-not-acked\",\n                NotifyType = \"default\",\n                Delay = 1,\n                Recipients = new[]\n                {\n                    new Opsgenie.Inputs.EscalationRuleRecipientArgs\n                    {\n                        Type = \"user\",\n                        Id = opsgenie_user.Test.Id,\n                    },\n                },\n            },\n            new Opsgenie.Inputs.EscalationRuleArgs\n            {\n                Condition = \"if-not-acked\",\n                NotifyType = \"default\",\n                Delay = 1,\n                Recipients = new[]\n                {\n                    new Opsgenie.Inputs.EscalationRuleRecipientArgs\n                    {\n                        Type = \"team\",\n                        Id = opsgenie_team.Test.Id,\n                    },\n                },\n            },\n            new Opsgenie.Inputs.EscalationRuleArgs\n            {\n                Condition = \"if-not-acked\",\n                NotifyType = \"default\",\n                Delay = 1,\n                Recipients = new[]\n                {\n                    new Opsgenie.Inputs.EscalationRuleRecipientArgs\n                    {\n                        Type = \"schedule\",\n                        Id = opsgenie_schedule.Test.Id,\n                    },\n                },\n            },\n        },\n        Repeats = new[]\n        {\n            new Opsgenie.Inputs.EscalationRepeatArgs\n            {\n                WaitInterval = 10,\n                Count = 1,\n                ResetRecipientStates = true,\n                CloseAlertAfterAll = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewEscalation(ctx, \"default\", \u0026opsgenie.EscalationArgs{\n\t\t\tDescription: pulumi.String(\"test\"),\n\t\t\tOwnerTeamId: pulumi.Any(opsgenie_team.Test.Id),\n\t\t\tRules: opsgenie.EscalationRuleArray{\n\t\t\t\t\u0026opsgenie.EscalationRuleArgs{\n\t\t\t\t\tCondition:  pulumi.String(\"if-not-acked\"),\n\t\t\t\t\tNotifyType: pulumi.String(\"default\"),\n\t\t\t\t\tDelay:      pulumi.Int(1),\n\t\t\t\t\tRecipients: opsgenie.EscalationRuleRecipientArray{\n\t\t\t\t\t\t\u0026opsgenie.EscalationRuleRecipientArgs{\n\t\t\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Test.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.EscalationRuleArgs{\n\t\t\t\t\tCondition:  pulumi.String(\"if-not-acked\"),\n\t\t\t\t\tNotifyType: pulumi.String(\"default\"),\n\t\t\t\t\tDelay:      pulumi.Int(1),\n\t\t\t\t\tRecipients: opsgenie.EscalationRuleRecipientArray{\n\t\t\t\t\t\t\u0026opsgenie.EscalationRuleRecipientArgs{\n\t\t\t\t\t\t\tType: pulumi.String(\"team\"),\n\t\t\t\t\t\t\tId:   pulumi.Any(opsgenie_team.Test.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.EscalationRuleArgs{\n\t\t\t\t\tCondition:  pulumi.String(\"if-not-acked\"),\n\t\t\t\t\tNotifyType: pulumi.String(\"default\"),\n\t\t\t\t\tDelay:      pulumi.Int(1),\n\t\t\t\t\tRecipients: opsgenie.EscalationRuleRecipientArray{\n\t\t\t\t\t\t\u0026opsgenie.EscalationRuleRecipientArgs{\n\t\t\t\t\t\t\tType: pulumi.String(\"schedule\"),\n\t\t\t\t\t\t\tId:   pulumi.Any(opsgenie_schedule.Test.Id),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tRepeats: opsgenie.EscalationRepeatArray{\n\t\t\t\t\u0026opsgenie.EscalationRepeatArgs{\n\t\t\t\t\tWaitInterval:         pulumi.Int(10),\n\t\t\t\t\tCount:                pulumi.Int(1),\n\t\t\t\t\tResetRecipientStates: pulumi.Bool(true),\n\t\t\t\t\tCloseAlertAfterAll:   pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Escalation;\nimport com.pulumi.opsgenie.EscalationArgs;\nimport com.pulumi.opsgenie.inputs.EscalationRuleArgs;\nimport com.pulumi.opsgenie.inputs.EscalationRepeatArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var default_ = new Escalation(\"default\", EscalationArgs.builder()        \n            .description(\"test\")\n            .ownerTeamId(opsgenie_team.test().id())\n            .rules(            \n                EscalationRuleArgs.builder()\n                    .condition(\"if-not-acked\")\n                    .notifyType(\"default\")\n                    .delay(1)\n                    .recipients(EscalationRuleRecipientArgs.builder()\n                        .type(\"user\")\n                        .id(opsgenie_user.test().id())\n                        .build())\n                    .build(),\n                EscalationRuleArgs.builder()\n                    .condition(\"if-not-acked\")\n                    .notifyType(\"default\")\n                    .delay(1)\n                    .recipients(EscalationRuleRecipientArgs.builder()\n                        .type(\"team\")\n                        .id(opsgenie_team.test().id())\n                        .build())\n                    .build(),\n                EscalationRuleArgs.builder()\n                    .condition(\"if-not-acked\")\n                    .notifyType(\"default\")\n                    .delay(1)\n                    .recipients(EscalationRuleRecipientArgs.builder()\n                        .type(\"schedule\")\n                        .id(opsgenie_schedule.test().id())\n                        .build())\n                    .build())\n            .repeats(EscalationRepeatArgs.builder()\n                .waitInterval(10)\n                .count(1)\n                .resetRecipientStates(true)\n                .closeAlertAfterAll(false)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  default:\n    type: opsgenie:Escalation\n    properties:\n      description: test\n      ownerTeamId: ${opsgenie_team.test.id}\n      rules:\n        - condition: if-not-acked\n          notifyType: default\n          delay: 1\n          recipients:\n            - type: user\n              id: ${opsgenie_user.test.id}\n        - condition: if-not-acked\n          notifyType: default\n          delay: 1\n          recipients:\n            - type: team\n              id: ${opsgenie_team.test.id}\n        - condition: if-not-acked\n          notifyType: default\n          delay: 1\n          recipients:\n            - type: schedule\n              id: ${opsgenie_schedule.test.id}\n      repeats:\n        - waitInterval: 10\n          count: 1\n          resetRecipientStates: true\n          closeAlertAfterAll: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nEscalations can be imported using the `escalation_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/escalation:Escalation test escalation_id`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the escalation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the escalation.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the escalation.\n"
                },
                "repeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EscalationRepeat:EscalationRepeat"
                    },
                    "description": "Repeat preferences of the escalation including repeat interval, count, reverting acknowledge and seen states back and closing an alert automatically as soon as repeats are completed\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EscalationRule:EscalationRule"
                    },
                    "description": "List of the escalation rules. See below for how rules are defined.\n"
                }
            },
            "required": [
                "name",
                "rules"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the escalation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the escalation.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the escalation.\n"
                },
                "repeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EscalationRepeat:EscalationRepeat"
                    },
                    "description": "Repeat preferences of the escalation including repeat interval, count, reverting acknowledge and seen states back and closing an alert automatically as soon as repeats are completed\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/EscalationRule:EscalationRule"
                    },
                    "description": "List of the escalation rules. See below for how rules are defined.\n"
                }
            },
            "requiredInputs": [
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Escalation resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the escalation.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the escalation.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the escalation.\n"
                    },
                    "repeats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/EscalationRepeat:EscalationRepeat"
                        },
                        "description": "Repeat preferences of the escalation including repeat interval, count, reverting acknowledge and seen states back and closing an alert automatically as soon as repeats are completed\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/EscalationRule:EscalationRule"
                        },
                        "description": "List of the escalation rules. See below for how rules are defined.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/heartbeat:Heartbeat": {
            "description": "Manages heartbeat within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.Heartbeat(\"test\", {\n    alertMessage: \"Test\",\n    alertPriority: \"P3\",\n    alertTags: [\n        \"test\",\n        \"fahri\",\n    ],\n    description: \"test opsgenie heartbeat terraform\",\n    enabled: false,\n    interval: 10,\n    intervalUnit: \"minutes\",\n    ownerTeamId: opsgenie_team.test.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.Heartbeat(\"test\",\n    alert_message=\"Test\",\n    alert_priority=\"P3\",\n    alert_tags=[\n        \"test\",\n        \"fahri\",\n    ],\n    description=\"test opsgenie heartbeat terraform\",\n    enabled=False,\n    interval=10,\n    interval_unit=\"minutes\",\n    owner_team_id=opsgenie_team[\"test\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.Heartbeat(\"test\", new()\n    {\n        AlertMessage = \"Test\",\n        AlertPriority = \"P3\",\n        AlertTags = new[]\n        {\n            \"test\",\n            \"fahri\",\n        },\n        Description = \"test opsgenie heartbeat terraform\",\n        Enabled = false,\n        Interval = 10,\n        IntervalUnit = \"minutes\",\n        OwnerTeamId = opsgenie_team.Test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewHeartbeat(ctx, \"test\", \u0026opsgenie.HeartbeatArgs{\n\t\t\tAlertMessage:  pulumi.String(\"Test\"),\n\t\t\tAlertPriority: pulumi.String(\"P3\"),\n\t\t\tAlertTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"test\"),\n\t\t\t\tpulumi.String(\"fahri\"),\n\t\t\t},\n\t\t\tDescription:  pulumi.String(\"test opsgenie heartbeat terraform\"),\n\t\t\tEnabled:      pulumi.Bool(false),\n\t\t\tInterval:     pulumi.Int(10),\n\t\t\tIntervalUnit: pulumi.String(\"minutes\"),\n\t\t\tOwnerTeamId:  pulumi.Any(opsgenie_team.Test.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Heartbeat;\nimport com.pulumi.opsgenie.HeartbeatArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Heartbeat(\"test\", HeartbeatArgs.builder()        \n            .alertMessage(\"Test\")\n            .alertPriority(\"P3\")\n            .alertTags(            \n                \"test\",\n                \"fahri\")\n            .description(\"test opsgenie heartbeat terraform\")\n            .enabled(false)\n            .interval(10)\n            .intervalUnit(\"minutes\")\n            .ownerTeamId(opsgenie_team.test().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:Heartbeat\n    properties:\n      alertMessage: Test\n      alertPriority: P3\n      alertTags:\n        - test\n        - fahri\n      description: test opsgenie heartbeat terraform\n      enabled: false\n      interval: 10\n      intervalUnit: minutes\n      ownerTeamId: ${opsgenie_team.test.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHeartbeat Integrations can be imported using the `name`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/heartbeat:Heartbeat test name`\n```\n\n",
            "properties": {
                "alertMessage": {
                    "type": "string",
                    "description": "Specifies the alert message for heartbeat expiration alert. If this is not provided, default alert message is \"HeartbeatName is expired\".\n"
                },
                "alertPriority": {
                    "type": "string",
                    "description": "Specifies the alert priority for heartbeat expiration alert. If this is not provided, default priority is P3.\n"
                },
                "alertTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the alert tags for heartbeat expiration alert.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the heartbeat\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable heartbeat monitoring.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Specifies how often a heartbeat message should be expected.\n"
                },
                "intervalUnit": {
                    "type": "string",
                    "description": "Interval specified as minutes, hours or days.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the heartbeat\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team of the heartbeat.\n"
                }
            },
            "required": [
                "enabled",
                "interval",
                "intervalUnit",
                "name"
            ],
            "inputProperties": {
                "alertMessage": {
                    "type": "string",
                    "description": "Specifies the alert message for heartbeat expiration alert. If this is not provided, default alert message is \"HeartbeatName is expired\".\n"
                },
                "alertPriority": {
                    "type": "string",
                    "description": "Specifies the alert priority for heartbeat expiration alert. If this is not provided, default priority is P3.\n"
                },
                "alertTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the alert tags for heartbeat expiration alert.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the heartbeat\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable heartbeat monitoring.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Specifies how often a heartbeat message should be expected.\n"
                },
                "intervalUnit": {
                    "type": "string",
                    "description": "Interval specified as minutes, hours or days.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the heartbeat\n",
                    "willReplaceOnChanges": true
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team of the heartbeat.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "interval",
                "intervalUnit"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Heartbeat resources.\n",
                "properties": {
                    "alertMessage": {
                        "type": "string",
                        "description": "Specifies the alert message for heartbeat expiration alert. If this is not provided, default alert message is \"HeartbeatName is expired\".\n"
                    },
                    "alertPriority": {
                        "type": "string",
                        "description": "Specifies the alert priority for heartbeat expiration alert. If this is not provided, default priority is P3.\n"
                    },
                    "alertTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the alert tags for heartbeat expiration alert.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the heartbeat\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable heartbeat monitoring.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "Specifies how often a heartbeat message should be expected.\n"
                    },
                    "intervalUnit": {
                        "type": "string",
                        "description": "Interval specified as minutes, hours or days.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the heartbeat\n",
                        "willReplaceOnChanges": true
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team of the heartbeat.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/incidentTemplate:IncidentTemplate": {
            "description": "Manages an Incident Template within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testTeam = new opsgenie.Team(\"testTeam\", {description: \"This team deals with all the things\"});\nconst testService = new opsgenie.Service(\"testService\", {teamId: testTeam.id});\nconst testIncidentTemplate = new opsgenie.IncidentTemplate(\"testIncidentTemplate\", {\n    message: \"Incident Message\",\n    priority: \"P2\",\n    stakeholderProperties: [{\n        enable: true,\n        message: \"Stakeholder Message\",\n        description: \"Stakeholder Description\",\n    }],\n    tags: [\n        \"tag1\",\n        \"tag2\",\n    ],\n    description: \"Incident Description\",\n    details: {\n        key1: \"value1\",\n        key2: \"value2\",\n    },\n    impactedServices: [testService.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_team = opsgenie.Team(\"testTeam\", description=\"This team deals with all the things\")\ntest_service = opsgenie.Service(\"testService\", team_id=test_team.id)\ntest_incident_template = opsgenie.IncidentTemplate(\"testIncidentTemplate\",\n    message=\"Incident Message\",\n    priority=\"P2\",\n    stakeholder_properties=[opsgenie.IncidentTemplateStakeholderPropertyArgs(\n        enable=True,\n        message=\"Stakeholder Message\",\n        description=\"Stakeholder Description\",\n    )],\n    tags=[\n        \"tag1\",\n        \"tag2\",\n    ],\n    description=\"Incident Description\",\n    details={\n        \"key1\": \"value1\",\n        \"key2\": \"value2\",\n    },\n    impacted_services=[test_service.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testTeam = new Opsgenie.Team(\"testTeam\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var testService = new Opsgenie.Service(\"testService\", new()\n    {\n        TeamId = testTeam.Id,\n    });\n\n    var testIncidentTemplate = new Opsgenie.IncidentTemplate(\"testIncidentTemplate\", new()\n    {\n        Message = \"Incident Message\",\n        Priority = \"P2\",\n        StakeholderProperties = new[]\n        {\n            new Opsgenie.Inputs.IncidentTemplateStakeholderPropertyArgs\n            {\n                Enable = true,\n                Message = \"Stakeholder Message\",\n                Description = \"Stakeholder Description\",\n            },\n        },\n        Tags = new[]\n        {\n            \"tag1\",\n            \"tag2\",\n        },\n        Description = \"Incident Description\",\n        Details = \n        {\n            { \"key1\", \"value1\" },\n            { \"key2\", \"value2\" },\n        },\n        ImpactedServices = new[]\n        {\n            testService.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestTeam, err := opsgenie.NewTeam(ctx, \"testTeam\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestService, err := opsgenie.NewService(ctx, \"testService\", \u0026opsgenie.ServiceArgs{\n\t\t\tTeamId: testTeam.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewIncidentTemplate(ctx, \"testIncidentTemplate\", \u0026opsgenie.IncidentTemplateArgs{\n\t\t\tMessage:  pulumi.String(\"Incident Message\"),\n\t\t\tPriority: pulumi.String(\"P2\"),\n\t\t\tStakeholderProperties: opsgenie.IncidentTemplateStakeholderPropertyArray{\n\t\t\t\t\u0026opsgenie.IncidentTemplateStakeholderPropertyArgs{\n\t\t\t\t\tEnable:      pulumi.Bool(true),\n\t\t\t\t\tMessage:     pulumi.String(\"Stakeholder Message\"),\n\t\t\t\t\tDescription: pulumi.String(\"Stakeholder Description\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"tag1\"),\n\t\t\t\tpulumi.String(\"tag2\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Incident Description\"),\n\t\t\tDetails: pulumi.StringMap{\n\t\t\t\t\"key1\": pulumi.String(\"value1\"),\n\t\t\t\t\"key2\": pulumi.String(\"value2\"),\n\t\t\t},\n\t\t\tImpactedServices: pulumi.StringArray{\n\t\t\t\ttestService.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.Service;\nimport com.pulumi.opsgenie.ServiceArgs;\nimport com.pulumi.opsgenie.IncidentTemplate;\nimport com.pulumi.opsgenie.IncidentTemplateArgs;\nimport com.pulumi.opsgenie.inputs.IncidentTemplateStakeholderPropertyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testTeam = new Team(\"testTeam\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var testService = new Service(\"testService\", ServiceArgs.builder()        \n            .teamId(testTeam.id())\n            .build());\n\n        var testIncidentTemplate = new IncidentTemplate(\"testIncidentTemplate\", IncidentTemplateArgs.builder()        \n            .message(\"Incident Message\")\n            .priority(\"P2\")\n            .stakeholderProperties(IncidentTemplateStakeholderPropertyArgs.builder()\n                .enable(true)\n                .message(\"Stakeholder Message\")\n                .description(\"Stakeholder Description\")\n                .build())\n            .tags(            \n                \"tag1\",\n                \"tag2\")\n            .description(\"Incident Description\")\n            .details(Map.ofEntries(\n                Map.entry(\"key1\", \"value1\"),\n                Map.entry(\"key2\", \"value2\")\n            ))\n            .impactedServices(testService.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testTeam:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  testService:\n    type: opsgenie:Service\n    properties:\n      teamId: ${testTeam.id}\n  testIncidentTemplate:\n    type: opsgenie:IncidentTemplate\n    properties:\n      message: Incident Message\n      priority: P2\n      stakeholderProperties:\n        - enable: true\n          message: Stakeholder Message\n          description: Stakeholder Description\n      tags:\n        - tag1\n        - tag2\n      description: Incident Description\n      details:\n        key1: value1\n        key2: value2\n      impactedServices:\n        - ${testService.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nService can be imported using the `template_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/incidentTemplate:IncidentTemplate test template_id`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.\n"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.\n"
                },
                "impactedServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Message that is to be passed to audience that is generally used to provide a content information about the alert.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the incident template.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority level of the incident. Possible values are `P1`, `P2`, `P3`, `P4` and `P5`.\n"
                },
                "stakeholderProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IncidentTemplateStakeholderProperty:IncidentTemplateStakeholderProperty"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the incident template.\n"
                }
            },
            "required": [
                "message",
                "name",
                "priority",
                "stakeholderProperties"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.\n"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.\n"
                },
                "impactedServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Message that is to be passed to audience that is generally used to provide a content information about the alert.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the incident template.\n"
                },
                "priority": {
                    "type": "string",
                    "description": "Priority level of the incident. Possible values are `P1`, `P2`, `P3`, `P4` and `P5`.\n"
                },
                "stakeholderProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IncidentTemplateStakeholderProperty:IncidentTemplateStakeholderProperty"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags of the incident template.\n"
                }
            },
            "requiredInputs": [
                "message",
                "priority",
                "stakeholderProperties"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IncidentTemplate resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description that is generally used to provide a detailed information about the alert. This field must not be longer than 15000 characters.\n"
                    },
                    "details": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of key-value pairs to use as custom properties of the incident template. This field must not be longer than 8000 characters.\n"
                    },
                    "impactedServices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Message that is to be passed to audience that is generally used to provide a content information about the alert.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the incident template.\n"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority level of the incident. Possible values are `P1`, `P2`, `P3`, `P4` and `P5`.\n"
                    },
                    "stakeholderProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IncidentTemplateStakeholderProperty:IncidentTemplateStakeholderProperty"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags of the incident template.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/integrationAction:IntegrationAction": {
            "description": "Manages advanced actions for Integrations within Opsgenie. This applies for the following resources:\n* `opsgenie.ApiIntegration`\n* `opsgenie.EmailIntegration`\n\nThe actions that are supported are:\n* `create`\n* `close`\n* `acknowledge`\n* `add_note`\n* `ignore`\n\n",
            "properties": {
                "acknowledges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAcknowledge:IntegrationActionAcknowledge"
                    }
                },
                "addNotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAddNote:IntegrationActionAddNote"
                    }
                },
                "closes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionClose:IntegrationActionClose"
                    }
                },
                "creates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCreate:IntegrationActionCreate"
                    }
                },
                "ignores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionIgnore:IntegrationActionIgnore"
                    }
                },
                "integrationId": {
                    "type": "string",
                    "description": "ID of the parent integration resource to bind to.\n"
                }
            },
            "required": [
                "integrationId"
            ],
            "inputProperties": {
                "acknowledges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAcknowledge:IntegrationActionAcknowledge"
                    }
                },
                "addNotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionAddNote:IntegrationActionAddNote"
                    }
                },
                "closes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionClose:IntegrationActionClose"
                    }
                },
                "creates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionCreate:IntegrationActionCreate"
                    }
                },
                "ignores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/IntegrationActionIgnore:IntegrationActionIgnore"
                    }
                },
                "integrationId": {
                    "type": "string",
                    "description": "ID of the parent integration resource to bind to.\n"
                }
            },
            "requiredInputs": [
                "integrationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationAction resources.\n",
                "properties": {
                    "acknowledges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IntegrationActionAcknowledge:IntegrationActionAcknowledge"
                        }
                    },
                    "addNotes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IntegrationActionAddNote:IntegrationActionAddNote"
                        }
                    },
                    "closes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IntegrationActionClose:IntegrationActionClose"
                        }
                    },
                    "creates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IntegrationActionCreate:IntegrationActionCreate"
                        }
                    },
                    "ignores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/IntegrationActionIgnore:IntegrationActionIgnore"
                        }
                    },
                    "integrationId": {
                        "type": "string",
                        "description": "ID of the parent integration resource to bind to.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/maintenance:Maintenance": {
            "description": "Manages a Maintenance within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.Maintenance(\"test\", {\n    description: \"geniemaintenance-%s\",\n    rules: [{\n        entities: [{\n            id: opsgenie_email_integration.test.id,\n            type: \"integration\",\n        }],\n        state: \"enabled\",\n    }],\n    times: [{\n        endDate: \"2019-06-%dT17:50:00Z\",\n        startDate: \"2019-06-20T17:45:00Z\",\n        type: \"schedule\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.Maintenance(\"test\",\n    description=\"geniemaintenance-%s\",\n    rules=[opsgenie.MaintenanceRuleArgs(\n        entities=[opsgenie.MaintenanceRuleEntityArgs(\n            id=opsgenie_email_integration[\"test\"][\"id\"],\n            type=\"integration\",\n        )],\n        state=\"enabled\",\n    )],\n    times=[opsgenie.MaintenanceTimeArgs(\n        end_date=\"2019-06-%dT17:50:00Z\",\n        start_date=\"2019-06-20T17:45:00Z\",\n        type=\"schedule\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.Maintenance(\"test\", new()\n    {\n        Description = \"geniemaintenance-%s\",\n        Rules = new[]\n        {\n            new Opsgenie.Inputs.MaintenanceRuleArgs\n            {\n                Entities = new[]\n                {\n                    new Opsgenie.Inputs.MaintenanceRuleEntityArgs\n                    {\n                        Id = opsgenie_email_integration.Test.Id,\n                        Type = \"integration\",\n                    },\n                },\n                State = \"enabled\",\n            },\n        },\n        Times = new[]\n        {\n            new Opsgenie.Inputs.MaintenanceTimeArgs\n            {\n                EndDate = \"2019-06-%dT17:50:00Z\",\n                StartDate = \"2019-06-20T17:45:00Z\",\n                Type = \"schedule\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewMaintenance(ctx, \"test\", \u0026opsgenie.MaintenanceArgs{\n\t\t\tDescription: pulumi.String(\"geniemaintenance-%s\"),\n\t\t\tRules: opsgenie.MaintenanceRuleArray{\n\t\t\t\t\u0026opsgenie.MaintenanceRuleArgs{\n\t\t\t\t\tEntities: opsgenie.MaintenanceRuleEntityArray{\n\t\t\t\t\t\t\u0026opsgenie.MaintenanceRuleEntityArgs{\n\t\t\t\t\t\t\tId:   pulumi.Any(opsgenie_email_integration.Test.Id),\n\t\t\t\t\t\t\tType: pulumi.String(\"integration\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tState: pulumi.String(\"enabled\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimes: opsgenie.MaintenanceTimeArray{\n\t\t\t\t\u0026opsgenie.MaintenanceTimeArgs{\n\t\t\t\t\tEndDate:   pulumi.String(\"2019-06-%dT17:50:00Z\"),\n\t\t\t\t\tStartDate: pulumi.String(\"2019-06-20T17:45:00Z\"),\n\t\t\t\t\tType:      pulumi.String(\"schedule\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Maintenance;\nimport com.pulumi.opsgenie.MaintenanceArgs;\nimport com.pulumi.opsgenie.inputs.MaintenanceRuleArgs;\nimport com.pulumi.opsgenie.inputs.MaintenanceTimeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Maintenance(\"test\", MaintenanceArgs.builder()        \n            .description(\"geniemaintenance-%s\")\n            .rules(MaintenanceRuleArgs.builder()\n                .entities(MaintenanceRuleEntityArgs.builder()\n                    .id(opsgenie_email_integration.test().id())\n                    .type(\"integration\")\n                    .build())\n                .state(\"enabled\")\n                .build())\n            .times(MaintenanceTimeArgs.builder()\n                .endDate(\"2019-06-%dT17:50:00Z\")\n                .startDate(\"2019-06-20T17:45:00Z\")\n                .type(\"schedule\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:Maintenance\n    properties:\n      description: geniemaintenance-%s\n      rules:\n        - entities:\n            - id: ${opsgenie_email_integration.test.id}\n              type: integration\n          state: enabled\n      times:\n        - endDate: 2019-06-%dT17:50:00Z\n          startDate: 2019-06-20T17:45:00Z\n          type: schedule\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nMaintenance policies can be imported using the `policy_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/maintenance:Maintenance test policy_id`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for the maintenance.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/MaintenanceRule:MaintenanceRule"
                    },
                    "description": "Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.\n"
                },
                "times": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/MaintenanceTime:MaintenanceTime"
                    },
                    "description": "Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields\n"
                }
            },
            "required": [
                "description",
                "rules"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description for the maintenance.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/MaintenanceRule:MaintenanceRule"
                    },
                    "description": "Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.\n"
                },
                "times": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/MaintenanceTime:MaintenanceTime"
                    },
                    "description": "Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields\n"
                }
            },
            "requiredInputs": [
                "description",
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Maintenance resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description for the maintenance.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/MaintenanceRule:MaintenanceRule"
                        },
                        "description": "Rules of maintenance, which takes a list of rule objects and defines the maintenance rules over integrations and policies.\n"
                    },
                    "times": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/MaintenanceTime:MaintenanceTime"
                        },
                        "description": "Time configuration of maintenance. It takes a time object which has type, startDate and endDate fields\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/notificationPolicy:NotificationPolicy": {
            "description": "Manages a Notification Policy within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testTeam = new opsgenie.Team(\"testTeam\", {description: \"This team deals with all the things\"});\nconst testNotificationPolicy = new opsgenie.NotificationPolicy(\"testNotificationPolicy\", {\n    teamId: testTeam.id,\n    policyDescription: \"This policy has a delay action\",\n    delayActions: [{\n        delayOption: \"next-time\",\n        untilMinute: 1,\n        untilHour: 9,\n    }],\n    filters: [{}],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_team = opsgenie.Team(\"testTeam\", description=\"This team deals with all the things\")\ntest_notification_policy = opsgenie.NotificationPolicy(\"testNotificationPolicy\",\n    team_id=test_team.id,\n    policy_description=\"This policy has a delay action\",\n    delay_actions=[opsgenie.NotificationPolicyDelayActionArgs(\n        delay_option=\"next-time\",\n        until_minute=1,\n        until_hour=9,\n    )],\n    filters=[opsgenie.NotificationPolicyFilterArgs()])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testTeam = new Opsgenie.Team(\"testTeam\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var testNotificationPolicy = new Opsgenie.NotificationPolicy(\"testNotificationPolicy\", new()\n    {\n        TeamId = testTeam.Id,\n        PolicyDescription = \"This policy has a delay action\",\n        DelayActions = new[]\n        {\n            new Opsgenie.Inputs.NotificationPolicyDelayActionArgs\n            {\n                DelayOption = \"next-time\",\n                UntilMinute = 1,\n                UntilHour = 9,\n            },\n        },\n        Filters = new[]\n        {\n            null,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestTeam, err := opsgenie.NewTeam(ctx, \"testTeam\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewNotificationPolicy(ctx, \"testNotificationPolicy\", \u0026opsgenie.NotificationPolicyArgs{\n\t\t\tTeamId:            testTeam.ID(),\n\t\t\tPolicyDescription: pulumi.String(\"This policy has a delay action\"),\n\t\t\tDelayActions: opsgenie.NotificationPolicyDelayActionArray{\n\t\t\t\t\u0026opsgenie.NotificationPolicyDelayActionArgs{\n\t\t\t\t\tDelayOption: pulumi.String(\"next-time\"),\n\t\t\t\t\tUntilMinute: pulumi.Int(1),\n\t\t\t\t\tUntilHour:   pulumi.Int(9),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFilters: opsgenie.NotificationPolicyFilterArray{\n\t\t\t\tnil,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.NotificationPolicy;\nimport com.pulumi.opsgenie.NotificationPolicyArgs;\nimport com.pulumi.opsgenie.inputs.NotificationPolicyDelayActionArgs;\nimport com.pulumi.opsgenie.inputs.NotificationPolicyFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testTeam = new Team(\"testTeam\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var testNotificationPolicy = new NotificationPolicy(\"testNotificationPolicy\", NotificationPolicyArgs.builder()        \n            .teamId(testTeam.id())\n            .policyDescription(\"This policy has a delay action\")\n            .delayActions(NotificationPolicyDelayActionArgs.builder()\n                .delayOption(\"next-time\")\n                .untilMinute(1)\n                .untilHour(9)\n                .build())\n            .filters()\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testTeam:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  testNotificationPolicy:\n    type: opsgenie:NotificationPolicy\n    properties:\n      teamId: ${testTeam.id}\n      policyDescription: This policy has a delay action\n      delayActions:\n        - delayOption: next-time\n          untilMinute: 1\n          untilHour: 9\n      filters:\n        - {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nNotification policies can be imported using the `team_id` and `notification_policy_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/notificationPolicy:NotificationPolicy test team_id/notification_policy_id`\n```\n\n",
            "properties": {
                "autoCloseActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoCloseAction:NotificationPolicyAutoCloseAction"
                    },
                    "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                },
                "autoRestartActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoRestartAction:NotificationPolicyAutoRestartAction"
                    },
                    "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                },
                "deDuplicationActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDeDuplicationAction:NotificationPolicyDeDuplicationAction"
                    },
                    "description": "Deduplication Action of the policy. This is a block, structure is documented below.\n"
                },
                "delayActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDelayAction:NotificationPolicyDelayAction"
                    },
                    "description": "Delay notifications. This is a block, structure is documented below.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyFilter:NotificationPolicyFilter"
                    },
                    "description": "A notification filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the notification policy\n"
                },
                "policyDescription": {
                    "type": "string",
                    "description": "Description of the policy. This can be max 512 characters.\n"
                },
                "suppress": {
                    "type": "boolean",
                    "description": "Suppress value of the policy. Values are: `true`, `false`. Default: `false`\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of team that this policy belons to.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyTimeRestriction:NotificationPolicyTimeRestriction"
                    },
                    "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                }
            },
            "required": [
                "filters",
                "name",
                "teamId"
            ],
            "inputProperties": {
                "autoCloseActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoCloseAction:NotificationPolicyAutoCloseAction"
                    },
                    "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                },
                "autoRestartActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyAutoRestartAction:NotificationPolicyAutoRestartAction"
                    },
                    "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                },
                "deDuplicationActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDeDuplicationAction:NotificationPolicyDeDuplicationAction"
                    },
                    "description": "Deduplication Action of the policy. This is a block, structure is documented below.\n"
                },
                "delayActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyDelayAction:NotificationPolicyDelayAction"
                    },
                    "description": "Delay notifications. This is a block, structure is documented below.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyFilter:NotificationPolicyFilter"
                    },
                    "description": "A notification filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the notification policy\n"
                },
                "policyDescription": {
                    "type": "string",
                    "description": "Description of the policy. This can be max 512 characters.\n"
                },
                "suppress": {
                    "type": "boolean",
                    "description": "Suppress value of the policy. Values are: `true`, `false`. Default: `false`\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of team that this policy belons to.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationPolicyTimeRestriction:NotificationPolicyTimeRestriction"
                    },
                    "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationPolicy resources.\n",
                "properties": {
                    "autoCloseActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyAutoCloseAction:NotificationPolicyAutoCloseAction"
                        },
                        "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                    },
                    "autoRestartActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyAutoRestartAction:NotificationPolicyAutoRestartAction"
                        },
                        "description": "Auto Restart Action of the policy. This is a block, structure is documented below.\n"
                    },
                    "deDuplicationActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyDeDuplicationAction:NotificationPolicyDeDuplicationAction"
                        },
                        "description": "Deduplication Action of the policy. This is a block, structure is documented below.\n"
                    },
                    "delayActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyDelayAction:NotificationPolicyDelayAction"
                        },
                        "description": "Delay notifications. This is a block, structure is documented below.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If policy should be enabled. Default: `true`\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyFilter:NotificationPolicyFilter"
                        },
                        "description": "A notification filter which will be applied. This filter can be empty: `filter {}` - this means `match-all`. This is a block, structure is documented below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the notification policy\n"
                    },
                    "policyDescription": {
                        "type": "string",
                        "description": "Description of the policy. This can be max 512 characters.\n"
                    },
                    "suppress": {
                        "type": "boolean",
                        "description": "Suppress value of the policy. Values are: `true`, `false`. Default: `false`\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "Id of team that this policy belons to.\n"
                    },
                    "timeRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationPolicyTimeRestriction:NotificationPolicyTimeRestriction"
                        },
                        "description": "Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/notificationRule:NotificationRule": {
            "description": "Manages a Notification Rule within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testUser = new opsgenie.User(\"testUser\", {\n    username: \"Example user\",\n    fullName: \"Name Lastname\",\n    role: \"User\",\n});\nconst testNotificationRule = new opsgenie.NotificationRule(\"testNotificationRule\", {\n    username: testUser.username,\n    actionType: \"schedule-end\",\n    notificationTimes: [\n        \"just-before\",\n        \"15-minutes-ago\",\n    ],\n    steps: [{\n        contacts: [{\n            method: \"email\",\n            to: \"example@user.com\",\n        }],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_user = opsgenie.User(\"testUser\",\n    username=\"Example user\",\n    full_name=\"Name Lastname\",\n    role=\"User\")\ntest_notification_rule = opsgenie.NotificationRule(\"testNotificationRule\",\n    username=test_user.username,\n    action_type=\"schedule-end\",\n    notification_times=[\n        \"just-before\",\n        \"15-minutes-ago\",\n    ],\n    steps=[opsgenie.NotificationRuleStepArgs(\n        contacts=[opsgenie.NotificationRuleStepContactArgs(\n            method=\"email\",\n            to=\"example@user.com\",\n        )],\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testUser = new Opsgenie.User(\"testUser\", new()\n    {\n        Username = \"Example user\",\n        FullName = \"Name Lastname\",\n        Role = \"User\",\n    });\n\n    var testNotificationRule = new Opsgenie.NotificationRule(\"testNotificationRule\", new()\n    {\n        Username = testUser.Username,\n        ActionType = \"schedule-end\",\n        NotificationTimes = new[]\n        {\n            \"just-before\",\n            \"15-minutes-ago\",\n        },\n        Steps = new[]\n        {\n            new Opsgenie.Inputs.NotificationRuleStepArgs\n            {\n                Contacts = new[]\n                {\n                    new Opsgenie.Inputs.NotificationRuleStepContactArgs\n                    {\n                        Method = \"email\",\n                        To = \"example@user.com\",\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestUser, err := opsgenie.NewUser(ctx, \"testUser\", \u0026opsgenie.UserArgs{\n\t\t\tUsername: pulumi.String(\"Example user\"),\n\t\t\tFullName: pulumi.String(\"Name Lastname\"),\n\t\t\tRole:     pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewNotificationRule(ctx, \"testNotificationRule\", \u0026opsgenie.NotificationRuleArgs{\n\t\t\tUsername:   testUser.Username,\n\t\t\tActionType: pulumi.String(\"schedule-end\"),\n\t\t\tNotificationTimes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"just-before\"),\n\t\t\t\tpulumi.String(\"15-minutes-ago\"),\n\t\t\t},\n\t\t\tSteps: opsgenie.NotificationRuleStepArray{\n\t\t\t\t\u0026opsgenie.NotificationRuleStepArgs{\n\t\t\t\t\tContacts: opsgenie.NotificationRuleStepContactArray{\n\t\t\t\t\t\t\u0026opsgenie.NotificationRuleStepContactArgs{\n\t\t\t\t\t\t\tMethod: pulumi.String(\"email\"),\n\t\t\t\t\t\t\tTo:     pulumi.String(\"example@user.com\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.User;\nimport com.pulumi.opsgenie.UserArgs;\nimport com.pulumi.opsgenie.NotificationRule;\nimport com.pulumi.opsgenie.NotificationRuleArgs;\nimport com.pulumi.opsgenie.inputs.NotificationRuleStepArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testUser = new User(\"testUser\", UserArgs.builder()        \n            .username(\"Example user\")\n            .fullName(\"Name Lastname\")\n            .role(\"User\")\n            .build());\n\n        var testNotificationRule = new NotificationRule(\"testNotificationRule\", NotificationRuleArgs.builder()        \n            .username(testUser.username())\n            .actionType(\"schedule-end\")\n            .notificationTimes(            \n                \"just-before\",\n                \"15-minutes-ago\")\n            .steps(NotificationRuleStepArgs.builder()\n                .contacts(NotificationRuleStepContactArgs.builder()\n                    .method(\"email\")\n                    .to(\"example@user.com\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testUser:\n    type: opsgenie:User\n    properties:\n      username: Example user\n      fullName: Name Lastname\n      role: User\n  testNotificationRule:\n    type: opsgenie:NotificationRule\n    properties:\n      username: ${testUser.username}\n      actionType: schedule-end\n      notificationTimes:\n        - just-before\n        - 15-minutes-ago\n      steps:\n        - contacts:\n            - method: email\n              to: example@user.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nNotification policies can be imported using the `user_id/notification_rule_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/notificationRule:NotificationRule test user_id/notification_rule_id`\n```\n\n",
            "properties": {
                "actionType": {
                    "type": "string",
                    "description": "Type of the action that notification rule will have. Allowed values: `create-alert`, `acknowledged-alert`, `closed-alert`, `assigned-alert`, `add-note`, `schedule-start`, `schedule-end`, `incoming-call-routing`\n"
                },
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleCriteria:NotificationRuleCriteria"
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the notification policy\n"
                },
                "notificationTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Time Periods that notification for schedule start/end will be sent. Allowed values: `just-before`, `15-minutes-ago`, `1-hour-ago`, `1-day-ago`. If `action_type` is `schedule-start` or `schedule-end` then it is required.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list\n"
                },
                "repeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleRepeat:NotificationRuleRepeat"
                    }
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleSchedule:NotificationRuleSchedule"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleStep:NotificationRuleStep"
                    },
                    "description": "Notification rule steps to take (eg. SMS or email message). This is a block, structure is documented below.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleTimeRestriction:NotificationRuleTimeRestriction"
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username of user to which this notification rule belongs to.\n"
                }
            },
            "required": [
                "actionType",
                "name",
                "order",
                "username"
            ],
            "inputProperties": {
                "actionType": {
                    "type": "string",
                    "description": "Type of the action that notification rule will have. Allowed values: `create-alert`, `acknowledged-alert`, `closed-alert`, `assigned-alert`, `add-note`, `schedule-start`, `schedule-end`, `incoming-call-routing`\n",
                    "willReplaceOnChanges": true
                },
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleCriteria:NotificationRuleCriteria"
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "If policy should be enabled. Default: `true`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the notification policy\n",
                    "willReplaceOnChanges": true
                },
                "notificationTimes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Time Periods that notification for schedule start/end will be sent. Allowed values: `just-before`, `15-minutes-ago`, `1-hour-ago`, `1-day-ago`. If `action_type` is `schedule-start` or `schedule-end` then it is required.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order of the condition in conditions list\n"
                },
                "repeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleRepeat:NotificationRuleRepeat"
                    }
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleSchedule:NotificationRuleSchedule"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleStep:NotificationRuleStep"
                    },
                    "description": "Notification rule steps to take (eg. SMS or email message). This is a block, structure is documented below.\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/NotificationRuleTimeRestriction:NotificationRuleTimeRestriction"
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username of user to which this notification rule belongs to.\n"
                }
            },
            "requiredInputs": [
                "actionType",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationRule resources.\n",
                "properties": {
                    "actionType": {
                        "type": "string",
                        "description": "Type of the action that notification rule will have. Allowed values: `create-alert`, `acknowledged-alert`, `closed-alert`, `assigned-alert`, `add-note`, `schedule-start`, `schedule-end`, `incoming-call-routing`\n",
                        "willReplaceOnChanges": true
                    },
                    "criterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationRuleCriteria:NotificationRuleCriteria"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "If policy should be enabled. Default: `true`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the notification policy\n",
                        "willReplaceOnChanges": true
                    },
                    "notificationTimes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Time Periods that notification for schedule start/end will be sent. Allowed values: `just-before`, `15-minutes-ago`, `1-hour-ago`, `1-day-ago`. If `action_type` is `schedule-start` or `schedule-end` then it is required.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Order of the condition in conditions list\n"
                    },
                    "repeats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationRuleRepeat:NotificationRuleRepeat"
                        }
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationRuleSchedule:NotificationRuleSchedule"
                        }
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationRuleStep:NotificationRuleStep"
                        },
                        "description": "Notification rule steps to take (eg. SMS or email message). This is a block, structure is documented below.\n"
                    },
                    "timeRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/NotificationRuleTimeRestriction:NotificationRuleTimeRestriction"
                        }
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of user to which this notification rule belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/schedule:Schedule": {
            "description": "Manages a Schedule within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.Schedule(\"test\", {\n    description: \"schedule test\",\n    enabled: false,\n    ownerTeamId: opsgenie_team.test.id,\n    timezone: \"Europe/Rome\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.Schedule(\"test\",\n    description=\"schedule test\",\n    enabled=False,\n    owner_team_id=opsgenie_team[\"test\"][\"id\"],\n    timezone=\"Europe/Rome\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.Schedule(\"test\", new()\n    {\n        Description = \"schedule test\",\n        Enabled = false,\n        OwnerTeamId = opsgenie_team.Test.Id,\n        Timezone = \"Europe/Rome\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewSchedule(ctx, \"test\", \u0026opsgenie.ScheduleArgs{\n\t\t\tDescription: pulumi.String(\"schedule test\"),\n\t\t\tEnabled:     pulumi.Bool(false),\n\t\t\tOwnerTeamId: pulumi.Any(opsgenie_team.Test.Id),\n\t\t\tTimezone:    pulumi.String(\"Europe/Rome\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Schedule;\nimport com.pulumi.opsgenie.ScheduleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Schedule(\"test\", ScheduleArgs.builder()        \n            .description(\"schedule test\")\n            .enabled(false)\n            .ownerTeamId(opsgenie_team.test().id())\n            .timezone(\"Europe/Rome\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:Schedule\n    properties:\n      description: schedule test\n      enabled: false\n      ownerTeamId: ${opsgenie_team.test.id}\n      timezone: Europe/Rome\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSchedule can be imported using the `schedule_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/schedule:Schedule test schedule_id`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of schedule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable state of schedule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the schedule.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the schedule.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of schedule.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable state of schedule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the schedule.\n"
                },
                "ownerTeamId": {
                    "type": "string",
                    "description": "Owner team id of the schedule.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Schedule resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of schedule.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable state of schedule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the schedule.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the schedule.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/scheduleRotation:ScheduleRotation": {
            "description": "Manages a Schedule Rotation within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.ScheduleRotation(\"test\", {\n    endDate: \"2019-06-20T17:30:00Z\",\n    length: 6,\n    participants: [{\n        id: opsgenie_user.test.id,\n        type: \"user\",\n    }],\n    scheduleId: opsgenie_schedule.test.id,\n    startDate: \"2019-06-18T17:00:00Z\",\n    timeRestrictions: [{\n        restriction: [{\n            endHour: 10,\n            endMin: 1,\n            startHour: 1,\n            startMin: 1,\n        }],\n        type: \"time-of-day\",\n    }],\n    type: \"hourly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.ScheduleRotation(\"test\",\n    end_date=\"2019-06-20T17:30:00Z\",\n    length=6,\n    participants=[opsgenie.ScheduleRotationParticipantArgs(\n        id=opsgenie_user[\"test\"][\"id\"],\n        type=\"user\",\n    )],\n    schedule_id=opsgenie_schedule[\"test\"][\"id\"],\n    start_date=\"2019-06-18T17:00:00Z\",\n    time_restrictions=[opsgenie.ScheduleRotationTimeRestrictionArgs(\n        restriction=[opsgenie.ScheduleRotationTimeRestrictionRestrictionArgs(\n            end_hour=10,\n            end_min=1,\n            start_hour=1,\n            start_min=1,\n        )],\n        type=\"time-of-day\",\n    )],\n    type=\"hourly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.ScheduleRotation(\"test\", new()\n    {\n        EndDate = \"2019-06-20T17:30:00Z\",\n        Length = 6,\n        Participants = new[]\n        {\n            new Opsgenie.Inputs.ScheduleRotationParticipantArgs\n            {\n                Id = opsgenie_user.Test.Id,\n                Type = \"user\",\n            },\n        },\n        ScheduleId = opsgenie_schedule.Test.Id,\n        StartDate = \"2019-06-18T17:00:00Z\",\n        TimeRestrictions = new[]\n        {\n            new Opsgenie.Inputs.ScheduleRotationTimeRestrictionArgs\n            {\n                Restriction = new[]\n                {\n                    new Opsgenie.Inputs.ScheduleRotationTimeRestrictionRestrictionArgs\n                    {\n                        EndHour = 10,\n                        EndMin = 1,\n                        StartHour = 1,\n                        StartMin = 1,\n                    },\n                },\n                Type = \"time-of-day\",\n            },\n        },\n        Type = \"hourly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewScheduleRotation(ctx, \"test\", \u0026opsgenie.ScheduleRotationArgs{\n\t\t\tEndDate: pulumi.String(\"2019-06-20T17:30:00Z\"),\n\t\t\tLength:  pulumi.Int(6),\n\t\t\tParticipants: opsgenie.ScheduleRotationParticipantArray{\n\t\t\t\t\u0026opsgenie.ScheduleRotationParticipantArgs{\n\t\t\t\t\tId:   pulumi.Any(opsgenie_user.Test.Id),\n\t\t\t\t\tType: pulumi.String(\"user\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tScheduleId: pulumi.Any(opsgenie_schedule.Test.Id),\n\t\t\tStartDate:  pulumi.String(\"2019-06-18T17:00:00Z\"),\n\t\t\tTimeRestrictions: opsgenie.ScheduleRotationTimeRestrictionArray{\n\t\t\t\t\u0026opsgenie.ScheduleRotationTimeRestrictionArgs{\n\t\t\t\t\tRestriction: opsgenie.ScheduleRotationTimeRestrictionRestrictionArray{\n\t\t\t\t\t\t\u0026opsgenie.ScheduleRotationTimeRestrictionRestrictionArgs{\n\t\t\t\t\t\t\tEndHour:   pulumi.Int(10),\n\t\t\t\t\t\t\tEndMin:    pulumi.Int(1),\n\t\t\t\t\t\t\tStartHour: pulumi.Int(1),\n\t\t\t\t\t\t\tStartMin:  pulumi.Int(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tType: pulumi.String(\"time-of-day\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"hourly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.ScheduleRotation;\nimport com.pulumi.opsgenie.ScheduleRotationArgs;\nimport com.pulumi.opsgenie.inputs.ScheduleRotationParticipantArgs;\nimport com.pulumi.opsgenie.inputs.ScheduleRotationTimeRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ScheduleRotation(\"test\", ScheduleRotationArgs.builder()        \n            .endDate(\"2019-06-20T17:30:00Z\")\n            .length(6)\n            .participants(ScheduleRotationParticipantArgs.builder()\n                .id(opsgenie_user.test().id())\n                .type(\"user\")\n                .build())\n            .scheduleId(opsgenie_schedule.test().id())\n            .startDate(\"2019-06-18T17:00:00Z\")\n            .timeRestrictions(ScheduleRotationTimeRestrictionArgs.builder()\n                .restriction(ScheduleRotationTimeRestrictionRestrictionArgs.builder()\n                    .endHour(10)\n                    .endMin(1)\n                    .startHour(1)\n                    .startMin(1)\n                    .build())\n                .type(\"time-of-day\")\n                .build())\n            .type(\"hourly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:ScheduleRotation\n    properties:\n      endDate: 2019-06-20T17:30:00Z\n      length: 6\n      participants:\n        - id: ${opsgenie_user.test.id}\n          type: user\n      scheduleId: ${opsgenie_schedule.test.id}\n      startDate: 2019-06-18T17:00:00Z\n      timeRestrictions:\n        - restriction:\n            - endHour: 10\n              endMin: 1\n              startHour: 1\n              startMin: 1\n          type: time-of-day\n      type: hourly\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSchedule Rotations can be imported using the `schedule_id/rotation_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/scheduleRotation:ScheduleRotation * `opsgenie_schedule_rotation.test schedule_id/rotation_id`\n```\n\n",
            "properties": {
                "endDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of the rotation with default value 1.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of rotation.\n"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationParticipant:ScheduleRotationParticipant"
                    },
                    "description": "List of escalations, teams, users or the reserved word none which will be used in schedule. Each of them can be used multiple times and will be rotated in the order they given. \"user,escalation,team,none\"\n"
                },
                "scheduleId": {
                    "type": "string",
                    "description": "Identifier of the schedule.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationTimeRestriction:ScheduleRotationTimeRestriction"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of rotation. May be one of daily, weekly and hourly.\n"
                }
            },
            "required": [
                "name",
                "participants",
                "scheduleId",
                "startDate",
                "type"
            ],
            "inputProperties": {
                "endDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                },
                "length": {
                    "type": "integer",
                    "description": "Length of the rotation with default value 1.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of rotation.\n"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationParticipant:ScheduleRotationParticipant"
                    },
                    "description": "List of escalations, teams, users or the reserved word none which will be used in schedule. Each of them can be used multiple times and will be rotated in the order they given. \"user,escalation,team,none\"\n"
                },
                "scheduleId": {
                    "type": "string",
                    "description": "Identifier of the schedule.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ScheduleRotationTimeRestriction:ScheduleRotationTimeRestriction"
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of rotation. May be one of daily, weekly and hourly.\n"
                }
            },
            "requiredInputs": [
                "participants",
                "scheduleId",
                "startDate",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScheduleRotation resources.\n",
                "properties": {
                    "endDate": {
                        "type": "string",
                        "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                    },
                    "length": {
                        "type": "integer",
                        "description": "Length of the rotation with default value 1.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of rotation.\n"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/ScheduleRotationParticipant:ScheduleRotationParticipant"
                        },
                        "description": "List of escalations, teams, users or the reserved word none which will be used in schedule. Each of them can be used multiple times and will be rotated in the order they given. \"user,escalation,team,none\"\n"
                    },
                    "scheduleId": {
                        "type": "string",
                        "description": "Identifier of the schedule.\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "This parameter takes a date format as (yyyy-MM-dd'T'HH:mm:ssZ) (e.g. 2019-06-11T08:00:00+02:00). Minutes may take 0 or 30 as value. Otherwise they will be converted to nearest 0 or 30 automatically\n"
                    },
                    "timeRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/ScheduleRotationTimeRestriction:ScheduleRotationTimeRestriction"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of rotation. May be one of daily, weekly and hourly.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/service:Service": {
            "description": "Manages a Service within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst payment = new opsgenie.Team(\"payment\", {description: \"This team deals with all the things\"});\nconst _this = new opsgenie.Service(\"this\", {teamId: \"$opsgenie_team.payment.id\"});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\npayment = opsgenie.Team(\"payment\", description=\"This team deals with all the things\")\nthis = opsgenie.Service(\"this\", team_id=\"$opsgenie_team.payment.id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var payment = new Opsgenie.Team(\"payment\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var @this = new Opsgenie.Service(\"this\", new()\n    {\n        TeamId = \"$opsgenie_team.payment.id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewTeam(ctx, \"payment\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewService(ctx, \"this\", \u0026opsgenie.ServiceArgs{\n\t\t\tTeamId: pulumi.String(\"$opsgenie_team.payment.id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.Service;\nimport com.pulumi.opsgenie.ServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var payment = new Team(\"payment\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var this_ = new Service(\"this\", ServiceArgs.builder()        \n            .teamId(\"$opsgenie_team.payment.id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  payment:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  this:\n    type: opsgenie:Service\n    properties:\n      teamId: $opsgenie_team.payment.id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTeams can be imported using the `service_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/service:Service this service_id`\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description field of the service that is generally used to provide a detailed information about the service.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service. This field must not be longer than 100 characters.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for the service, with a maximum of 20 tags per service.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Team id of the service. This field must not be longer than 512 characters.\n"
                }
            },
            "required": [
                "name",
                "teamId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description field of the service that is generally used to provide a detailed information about the service.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service. This field must not be longer than 100 characters.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for the service, with a maximum of 20 tags per service.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Team id of the service. This field must not be longer than 512 characters.\n"
                }
            },
            "requiredInputs": [
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description field of the service that is generally used to provide a detailed information about the service.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the service. This field must not be longer than 100 characters.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for the service, with a maximum of 20 tags per service.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "Team id of the service. This field must not be longer than 512 characters.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/serviceIncidentRule:ServiceIncidentRule": {
            "description": "Manages a Service Incident Rule within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testTeam = new opsgenie.Team(\"testTeam\", {description: \"This team deals with all the things\"});\nconst testService = new opsgenie.Service(\"testService\", {teamId: testTeam.id});\nconst testServiceIncidentRule = new opsgenie.ServiceIncidentRule(\"testServiceIncidentRule\", {\n    serviceId: testService.id,\n    incidentRules: [{\n        conditionMatchType: \"match-any-condition\",\n        conditions: [\n            {\n                field: \"message\",\n                not: false,\n                operation: \"contains\",\n                expectedValue: \"expected1\",\n            },\n            {\n                field: \"message\",\n                not: false,\n                operation: \"contains\",\n                expectedValue: \"expected2\",\n            },\n        ],\n        incidentProperties: [{\n            message: \"This is a test message\",\n            priority: \"P3\",\n            stakeholderProperties: [{\n                message: \"Message for stakeholders\",\n                enable: true,\n            }],\n        }],\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_team = opsgenie.Team(\"testTeam\", description=\"This team deals with all the things\")\ntest_service = opsgenie.Service(\"testService\", team_id=test_team.id)\ntest_service_incident_rule = opsgenie.ServiceIncidentRule(\"testServiceIncidentRule\",\n    service_id=test_service.id,\n    incident_rules=[opsgenie.ServiceIncidentRuleIncidentRuleArgs(\n        condition_match_type=\"match-any-condition\",\n        conditions=[\n            opsgenie.ServiceIncidentRuleIncidentRuleConditionArgs(\n                field=\"message\",\n                not_=False,\n                operation=\"contains\",\n                expected_value=\"expected1\",\n            ),\n            opsgenie.ServiceIncidentRuleIncidentRuleConditionArgs(\n                field=\"message\",\n                not_=False,\n                operation=\"contains\",\n                expected_value=\"expected2\",\n            ),\n        ],\n        incident_properties=[opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs(\n            message=\"This is a test message\",\n            priority=\"P3\",\n            stakeholder_properties=[opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderPropertyArgs(\n                message=\"Message for stakeholders\",\n                enable=True,\n            )],\n        )],\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testTeam = new Opsgenie.Team(\"testTeam\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var testService = new Opsgenie.Service(\"testService\", new()\n    {\n        TeamId = testTeam.Id,\n    });\n\n    var testServiceIncidentRule = new Opsgenie.ServiceIncidentRule(\"testServiceIncidentRule\", new()\n    {\n        ServiceId = testService.Id,\n        IncidentRules = new[]\n        {\n            new Opsgenie.Inputs.ServiceIncidentRuleIncidentRuleArgs\n            {\n                ConditionMatchType = \"match-any-condition\",\n                Conditions = new[]\n                {\n                    new Opsgenie.Inputs.ServiceIncidentRuleIncidentRuleConditionArgs\n                    {\n                        Field = \"message\",\n                        Not = false,\n                        Operation = \"contains\",\n                        ExpectedValue = \"expected1\",\n                    },\n                    new Opsgenie.Inputs.ServiceIncidentRuleIncidentRuleConditionArgs\n                    {\n                        Field = \"message\",\n                        Not = false,\n                        Operation = \"contains\",\n                        ExpectedValue = \"expected2\",\n                    },\n                },\n                IncidentProperties = new[]\n                {\n                    new Opsgenie.Inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs\n                    {\n                        Message = \"This is a test message\",\n                        Priority = \"P3\",\n                        StakeholderProperties = new[]\n                        {\n                            new Opsgenie.Inputs.ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderPropertyArgs\n                            {\n                                Message = \"Message for stakeholders\",\n                                Enable = true,\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestTeam, err := opsgenie.NewTeam(ctx, \"testTeam\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestService, err := opsgenie.NewService(ctx, \"testService\", \u0026opsgenie.ServiceArgs{\n\t\t\tTeamId: testTeam.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewServiceIncidentRule(ctx, \"testServiceIncidentRule\", \u0026opsgenie.ServiceIncidentRuleArgs{\n\t\t\tServiceId: testService.ID(),\n\t\t\tIncidentRules: opsgenie.ServiceIncidentRuleIncidentRuleArray{\n\t\t\t\t\u0026opsgenie.ServiceIncidentRuleIncidentRuleArgs{\n\t\t\t\t\tConditionMatchType: pulumi.String(\"match-any-condition\"),\n\t\t\t\t\tConditions: opsgenie.ServiceIncidentRuleIncidentRuleConditionArray{\n\t\t\t\t\t\t\u0026opsgenie.ServiceIncidentRuleIncidentRuleConditionArgs{\n\t\t\t\t\t\t\tField:         pulumi.String(\"message\"),\n\t\t\t\t\t\t\tNot:           pulumi.Bool(false),\n\t\t\t\t\t\t\tOperation:     pulumi.String(\"contains\"),\n\t\t\t\t\t\t\tExpectedValue: pulumi.String(\"expected1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026opsgenie.ServiceIncidentRuleIncidentRuleConditionArgs{\n\t\t\t\t\t\t\tField:         pulumi.String(\"message\"),\n\t\t\t\t\t\t\tNot:           pulumi.Bool(false),\n\t\t\t\t\t\t\tOperation:     pulumi.String(\"contains\"),\n\t\t\t\t\t\t\tExpectedValue: pulumi.String(\"expected2\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tIncidentProperties: opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyArray{\n\t\t\t\t\t\t\u0026opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyArgs{\n\t\t\t\t\t\t\tMessage:  pulumi.String(\"This is a test message\"),\n\t\t\t\t\t\t\tPriority: pulumi.String(\"P3\"),\n\t\t\t\t\t\t\tStakeholderProperties: opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderPropertyArray{\n\t\t\t\t\t\t\t\t\u0026opsgenie.ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderPropertyArgs{\n\t\t\t\t\t\t\t\t\tMessage: pulumi.String(\"Message for stakeholders\"),\n\t\t\t\t\t\t\t\t\tEnable:  pulumi.Bool(true),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.Service;\nimport com.pulumi.opsgenie.ServiceArgs;\nimport com.pulumi.opsgenie.ServiceIncidentRule;\nimport com.pulumi.opsgenie.ServiceIncidentRuleArgs;\nimport com.pulumi.opsgenie.inputs.ServiceIncidentRuleIncidentRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testTeam = new Team(\"testTeam\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var testService = new Service(\"testService\", ServiceArgs.builder()        \n            .teamId(testTeam.id())\n            .build());\n\n        var testServiceIncidentRule = new ServiceIncidentRule(\"testServiceIncidentRule\", ServiceIncidentRuleArgs.builder()        \n            .serviceId(testService.id())\n            .incidentRules(ServiceIncidentRuleIncidentRuleArgs.builder()\n                .conditionMatchType(\"match-any-condition\")\n                .conditions(                \n                    ServiceIncidentRuleIncidentRuleConditionArgs.builder()\n                        .field(\"message\")\n                        .not(false)\n                        .operation(\"contains\")\n                        .expectedValue(\"expected1\")\n                        .build(),\n                    ServiceIncidentRuleIncidentRuleConditionArgs.builder()\n                        .field(\"message\")\n                        .not(false)\n                        .operation(\"contains\")\n                        .expectedValue(\"expected2\")\n                        .build())\n                .incidentProperties(ServiceIncidentRuleIncidentRuleIncidentPropertyArgs.builder()\n                    .message(\"This is a test message\")\n                    .priority(\"P3\")\n                    .stakeholderProperties(ServiceIncidentRuleIncidentRuleIncidentPropertyStakeholderPropertyArgs.builder()\n                        .message(\"Message for stakeholders\")\n                        .enable(\"true\")\n                        .build())\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testTeam:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  testService:\n    type: opsgenie:Service\n    properties:\n      teamId: ${testTeam.id}\n  testServiceIncidentRule:\n    type: opsgenie:ServiceIncidentRule\n    properties:\n      serviceId: ${testService.id}\n      incidentRules:\n        - conditionMatchType: match-any-condition\n          conditions:\n            - field: message\n              not: false\n              operation: contains\n              expectedValue: expected1\n            - field: message\n              not: false\n              operation: contains\n              expectedValue: expected2\n          incidentProperties:\n            - message: This is a test message\n              priority: P3\n              stakeholderProperties:\n                - message: Message for stakeholders\n                  enable: 'true'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nService Incident Rule can be imported using the `service_id/service_incident_rule_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/serviceIncidentRule:ServiceIncidentRule this service_id/service_incident_rule_id`\n```\n\n",
            "properties": {
                "incidentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRule:ServiceIncidentRuleIncidentRule"
                    },
                    "description": "This is the rule configuration for this incident rule. This is a block, structure is documented below.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "ID of the service associated\n"
                }
            },
            "required": [
                "incidentRules",
                "serviceId"
            ],
            "inputProperties": {
                "incidentRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRule:ServiceIncidentRuleIncidentRule"
                    },
                    "description": "This is the rule configuration for this incident rule. This is a block, structure is documented below.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "ID of the service associated\n"
                }
            },
            "requiredInputs": [
                "incidentRules",
                "serviceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceIncidentRule resources.\n",
                "properties": {
                    "incidentRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/ServiceIncidentRuleIncidentRule:ServiceIncidentRuleIncidentRule"
                        },
                        "description": "This is the rule configuration for this incident rule. This is a block, structure is documented below.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID of the service associated\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/team:Team": {
            "description": "Manages a Team within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst first = new opsgenie.User(\"first\", {\n    fullName: \"name \",\n    role: \"User\",\n    username: \"user@domain.com\",\n});\nconst second = new opsgenie.User(\"second\", {\n    fullName: \"name \",\n    role: \"User\",\n    username: \"test@domain.com\",\n});\nconst test = new opsgenie.Team(\"test\", {\n    description: \"This team deals with all the things\",\n    members: [\n        {\n            id: first.id,\n            role: \"admin\",\n        },\n        {\n            id: second.id,\n            role: \"user\",\n        },\n    ],\n});\nconst self_service = new opsgenie.Team(\"self-service\", {\n    deleteDefaultResources: true,\n    description: \"Membership in this team is managed via OpsGenie web UI only\",\n    ignoreMembers: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\nfirst = opsgenie.User(\"first\",\n    full_name=\"name \",\n    role=\"User\",\n    username=\"user@domain.com\")\nsecond = opsgenie.User(\"second\",\n    full_name=\"name \",\n    role=\"User\",\n    username=\"test@domain.com\")\ntest = opsgenie.Team(\"test\",\n    description=\"This team deals with all the things\",\n    members=[\n        opsgenie.TeamMemberArgs(\n            id=first.id,\n            role=\"admin\",\n        ),\n        opsgenie.TeamMemberArgs(\n            id=second.id,\n            role=\"user\",\n        ),\n    ])\nself_service = opsgenie.Team(\"self-service\",\n    delete_default_resources=True,\n    description=\"Membership in this team is managed via OpsGenie web UI only\",\n    ignore_members=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var first = new Opsgenie.User(\"first\", new()\n    {\n        FullName = \"name \",\n        Role = \"User\",\n        Username = \"user@domain.com\",\n    });\n\n    var second = new Opsgenie.User(\"second\", new()\n    {\n        FullName = \"name \",\n        Role = \"User\",\n        Username = \"test@domain.com\",\n    });\n\n    var test = new Opsgenie.Team(\"test\", new()\n    {\n        Description = \"This team deals with all the things\",\n        Members = new[]\n        {\n            new Opsgenie.Inputs.TeamMemberArgs\n            {\n                Id = first.Id,\n                Role = \"admin\",\n            },\n            new Opsgenie.Inputs.TeamMemberArgs\n            {\n                Id = second.Id,\n                Role = \"user\",\n            },\n        },\n    });\n\n    var self_service = new Opsgenie.Team(\"self-service\", new()\n    {\n        DeleteDefaultResources = true,\n        Description = \"Membership in this team is managed via OpsGenie web UI only\",\n        IgnoreMembers = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tfirst, err := opsgenie.NewUser(ctx, \"first\", \u0026opsgenie.UserArgs{\n\t\t\tFullName: pulumi.String(\"name \"),\n\t\t\tRole:     pulumi.String(\"User\"),\n\t\t\tUsername: pulumi.String(\"user@domain.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecond, err := opsgenie.NewUser(ctx, \"second\", \u0026opsgenie.UserArgs{\n\t\t\tFullName: pulumi.String(\"name \"),\n\t\t\tRole:     pulumi.String(\"User\"),\n\t\t\tUsername: pulumi.String(\"test@domain.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewTeam(ctx, \"test\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t\tMembers: opsgenie.TeamMemberArray{\n\t\t\t\t\u0026opsgenie.TeamMemberArgs{\n\t\t\t\t\tId:   first.ID(),\n\t\t\t\t\tRole: pulumi.String(\"admin\"),\n\t\t\t\t},\n\t\t\t\t\u0026opsgenie.TeamMemberArgs{\n\t\t\t\t\tId:   second.ID(),\n\t\t\t\t\tRole: pulumi.String(\"user\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewTeam(ctx, \"self-service\", \u0026opsgenie.TeamArgs{\n\t\t\tDeleteDefaultResources: pulumi.Bool(true),\n\t\t\tDescription:            pulumi.String(\"Membership in this team is managed via OpsGenie web UI only\"),\n\t\t\tIgnoreMembers:          pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.User;\nimport com.pulumi.opsgenie.UserArgs;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.inputs.TeamMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var first = new User(\"first\", UserArgs.builder()        \n            .fullName(\"name \")\n            .role(\"User\")\n            .username(\"user@domain.com\")\n            .build());\n\n        var second = new User(\"second\", UserArgs.builder()        \n            .fullName(\"name \")\n            .role(\"User\")\n            .username(\"test@domain.com\")\n            .build());\n\n        var test = new Team(\"test\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .members(            \n                TeamMemberArgs.builder()\n                    .id(first.id())\n                    .role(\"admin\")\n                    .build(),\n                TeamMemberArgs.builder()\n                    .id(second.id())\n                    .role(\"user\")\n                    .build())\n            .build());\n\n        var self_service = new Team(\"self-service\", TeamArgs.builder()        \n            .deleteDefaultResources(true)\n            .description(\"Membership in this team is managed via OpsGenie web UI only\")\n            .ignoreMembers(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  first:\n    type: opsgenie:User\n    properties:\n      fullName: 'name '\n      role: User\n      username: user@domain.com\n  second:\n    type: opsgenie:User\n    properties:\n      fullName: 'name '\n      role: User\n      username: test@domain.com\n  test:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n      members:\n        - id: ${first.id}\n          role: admin\n        - id: ${second.id}\n          role: user\n  self-service:\n    type: opsgenie:Team\n    properties:\n      deleteDefaultResources: true\n      description: Membership in this team is managed via OpsGenie web UI only\n      ignoreMembers: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTeams can be imported using the `team_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/team:Team team1 team_id`\n```\n\n",
            "properties": {
                "deleteDefaultResources": {
                    "type": "boolean",
                    "description": "Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this team.\n"
                },
                "ignoreMembers": {
                    "type": "boolean",
                    "description": "Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Default: `false`.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamMember:TeamMember"
                    },
                    "description": "A Member block as documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "deleteDefaultResources": {
                    "type": "boolean",
                    "description": "Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description for this team.\n"
                },
                "ignoreMembers": {
                    "type": "boolean",
                    "description": "Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Default: `false`.\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamMember:TeamMember"
                    },
                    "description": "A Member block as documented below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "deleteDefaultResources": {
                        "type": "boolean",
                        "description": "Set to true to remove default escalation and schedule for newly created team. **Be careful its also changes that team routing rule to None. That means you have to define routing rule as well**\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description for this team.\n"
                    },
                    "ignoreMembers": {
                        "type": "boolean",
                        "description": "Set to true to ignore any configured member blocks and any team member added/updated/removed via OpsGenie web UI. Use this option e.g. to maintain membership via web UI only and use it only for new teams. Changing the value for existing teams might lead to strange behaviour. Default: `false`.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/TeamMember:TeamMember"
                        },
                        "description": "A Member block as documented below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/teamRoutingRule:TeamRoutingRule": {
            "description": "Manages a Team Routing Rule within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst testSchedule = new opsgenie.Schedule(\"testSchedule\", {\n    description: \"schedule test\",\n    enabled: false,\n    timezone: \"Europe/Rome\",\n});\nconst testTeam = new opsgenie.Team(\"testTeam\", {description: \"This team deals with all the things\"});\nconst testTeamRoutingRule = new opsgenie.TeamRoutingRule(\"testTeamRoutingRule\", {\n    criterias: [{\n        conditions: [{\n            expectedValue: \"expected1\",\n            field: \"message\",\n            not: false,\n            operation: \"contains\",\n        }],\n        type: \"match-any-condition\",\n    }],\n    notifies: [{\n        name: testSchedule.name,\n        type: \"schedule\",\n    }],\n    order: 0,\n    teamId: testTeam.id,\n    timeRestrictions: [{\n        restrictionList: [{\n            endDay: \"tuesday\",\n            endHour: 18,\n            endMin: 30,\n            startDay: \"monday\",\n            startHour: 8,\n            startMin: 0,\n        }],\n        type: \"weekday-and-time-of-day\",\n    }],\n    timezone: \"America/Los_Angeles\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest_schedule = opsgenie.Schedule(\"testSchedule\",\n    description=\"schedule test\",\n    enabled=False,\n    timezone=\"Europe/Rome\")\ntest_team = opsgenie.Team(\"testTeam\", description=\"This team deals with all the things\")\ntest_team_routing_rule = opsgenie.TeamRoutingRule(\"testTeamRoutingRule\",\n    criterias=[opsgenie.TeamRoutingRuleCriteriaArgs(\n        conditions=[opsgenie.TeamRoutingRuleCriteriaConditionArgs(\n            expected_value=\"expected1\",\n            field=\"message\",\n            not_=False,\n            operation=\"contains\",\n        )],\n        type=\"match-any-condition\",\n    )],\n    notifies=[opsgenie.TeamRoutingRuleNotifyArgs(\n        name=test_schedule.name,\n        type=\"schedule\",\n    )],\n    order=0,\n    team_id=test_team.id,\n    time_restrictions=[opsgenie.TeamRoutingRuleTimeRestrictionArgs(\n        restriction_list=[opsgenie.TeamRoutingRuleTimeRestrictionRestrictionListArgs(\n            end_day=\"tuesday\",\n            end_hour=18,\n            end_min=30,\n            start_day=\"monday\",\n            start_hour=8,\n            start_min=0,\n        )],\n        type=\"weekday-and-time-of-day\",\n    )],\n    timezone=\"America/Los_Angeles\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testSchedule = new Opsgenie.Schedule(\"testSchedule\", new()\n    {\n        Description = \"schedule test\",\n        Enabled = false,\n        Timezone = \"Europe/Rome\",\n    });\n\n    var testTeam = new Opsgenie.Team(\"testTeam\", new()\n    {\n        Description = \"This team deals with all the things\",\n    });\n\n    var testTeamRoutingRule = new Opsgenie.TeamRoutingRule(\"testTeamRoutingRule\", new()\n    {\n        Criterias = new[]\n        {\n            new Opsgenie.Inputs.TeamRoutingRuleCriteriaArgs\n            {\n                Conditions = new[]\n                {\n                    new Opsgenie.Inputs.TeamRoutingRuleCriteriaConditionArgs\n                    {\n                        ExpectedValue = \"expected1\",\n                        Field = \"message\",\n                        Not = false,\n                        Operation = \"contains\",\n                    },\n                },\n                Type = \"match-any-condition\",\n            },\n        },\n        Notifies = new[]\n        {\n            new Opsgenie.Inputs.TeamRoutingRuleNotifyArgs\n            {\n                Name = testSchedule.Name,\n                Type = \"schedule\",\n            },\n        },\n        Order = 0,\n        TeamId = testTeam.Id,\n        TimeRestrictions = new[]\n        {\n            new Opsgenie.Inputs.TeamRoutingRuleTimeRestrictionArgs\n            {\n                RestrictionList = new[]\n                {\n                    new Opsgenie.Inputs.TeamRoutingRuleTimeRestrictionRestrictionListArgs\n                    {\n                        EndDay = \"tuesday\",\n                        EndHour = 18,\n                        EndMin = 30,\n                        StartDay = \"monday\",\n                        StartHour = 8,\n                        StartMin = 0,\n                    },\n                },\n                Type = \"weekday-and-time-of-day\",\n            },\n        },\n        Timezone = \"America/Los_Angeles\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestSchedule, err := opsgenie.NewSchedule(ctx, \"testSchedule\", \u0026opsgenie.ScheduleArgs{\n\t\t\tDescription: pulumi.String(\"schedule test\"),\n\t\t\tEnabled:     pulumi.Bool(false),\n\t\t\tTimezone:    pulumi.String(\"Europe/Rome\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttestTeam, err := opsgenie.NewTeam(ctx, \"testTeam\", \u0026opsgenie.TeamArgs{\n\t\t\tDescription: pulumi.String(\"This team deals with all the things\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewTeamRoutingRule(ctx, \"testTeamRoutingRule\", \u0026opsgenie.TeamRoutingRuleArgs{\n\t\t\tCriterias: opsgenie.TeamRoutingRuleCriteriaArray{\n\t\t\t\t\u0026opsgenie.TeamRoutingRuleCriteriaArgs{\n\t\t\t\t\tConditions: opsgenie.TeamRoutingRuleCriteriaConditionArray{\n\t\t\t\t\t\t\u0026opsgenie.TeamRoutingRuleCriteriaConditionArgs{\n\t\t\t\t\t\t\tExpectedValue: pulumi.String(\"expected1\"),\n\t\t\t\t\t\t\tField:         pulumi.String(\"message\"),\n\t\t\t\t\t\t\tNot:           pulumi.Bool(false),\n\t\t\t\t\t\t\tOperation:     pulumi.String(\"contains\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tType: pulumi.String(\"match-any-condition\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tNotifies: opsgenie.TeamRoutingRuleNotifyArray{\n\t\t\t\t\u0026opsgenie.TeamRoutingRuleNotifyArgs{\n\t\t\t\t\tName: testSchedule.Name,\n\t\t\t\t\tType: pulumi.String(\"schedule\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOrder:  pulumi.Int(0),\n\t\t\tTeamId: testTeam.ID(),\n\t\t\tTimeRestrictions: opsgenie.TeamRoutingRuleTimeRestrictionArray{\n\t\t\t\t\u0026opsgenie.TeamRoutingRuleTimeRestrictionArgs{\n\t\t\t\t\tRestrictionList: opsgenie.TeamRoutingRuleTimeRestrictionRestrictionListArray{\n\t\t\t\t\t\t\u0026opsgenie.TeamRoutingRuleTimeRestrictionRestrictionListArgs{\n\t\t\t\t\t\t\tEndDay:    pulumi.String(\"tuesday\"),\n\t\t\t\t\t\t\tEndHour:   pulumi.Int(18),\n\t\t\t\t\t\t\tEndMin:    pulumi.Int(30),\n\t\t\t\t\t\t\tStartDay:  pulumi.String(\"monday\"),\n\t\t\t\t\t\t\tStartHour: pulumi.Int(8),\n\t\t\t\t\t\t\tStartMin:  pulumi.Int(0),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tType: pulumi.String(\"weekday-and-time-of-day\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTimezone: pulumi.String(\"America/Los_Angeles\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.Schedule;\nimport com.pulumi.opsgenie.ScheduleArgs;\nimport com.pulumi.opsgenie.Team;\nimport com.pulumi.opsgenie.TeamArgs;\nimport com.pulumi.opsgenie.TeamRoutingRule;\nimport com.pulumi.opsgenie.TeamRoutingRuleArgs;\nimport com.pulumi.opsgenie.inputs.TeamRoutingRuleCriteriaArgs;\nimport com.pulumi.opsgenie.inputs.TeamRoutingRuleNotifyArgs;\nimport com.pulumi.opsgenie.inputs.TeamRoutingRuleTimeRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testSchedule = new Schedule(\"testSchedule\", ScheduleArgs.builder()        \n            .description(\"schedule test\")\n            .enabled(false)\n            .timezone(\"Europe/Rome\")\n            .build());\n\n        var testTeam = new Team(\"testTeam\", TeamArgs.builder()        \n            .description(\"This team deals with all the things\")\n            .build());\n\n        var testTeamRoutingRule = new TeamRoutingRule(\"testTeamRoutingRule\", TeamRoutingRuleArgs.builder()        \n            .criterias(TeamRoutingRuleCriteriaArgs.builder()\n                .conditions(TeamRoutingRuleCriteriaConditionArgs.builder()\n                    .expectedValue(\"expected1\")\n                    .field(\"message\")\n                    .not(false)\n                    .operation(\"contains\")\n                    .build())\n                .type(\"match-any-condition\")\n                .build())\n            .notifies(TeamRoutingRuleNotifyArgs.builder()\n                .name(testSchedule.name())\n                .type(\"schedule\")\n                .build())\n            .order(0)\n            .teamId(testTeam.id())\n            .timeRestrictions(TeamRoutingRuleTimeRestrictionArgs.builder()\n                .restrictionList(TeamRoutingRuleTimeRestrictionRestrictionListArgs.builder()\n                    .endDay(\"tuesday\")\n                    .endHour(18)\n                    .endMin(30)\n                    .startDay(\"monday\")\n                    .startHour(8)\n                    .startMin(0)\n                    .build())\n                .type(\"weekday-and-time-of-day\")\n                .build())\n            .timezone(\"America/Los_Angeles\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testSchedule:\n    type: opsgenie:Schedule\n    properties:\n      description: schedule test\n      enabled: false\n      timezone: Europe/Rome\n  testTeam:\n    type: opsgenie:Team\n    properties:\n      description: This team deals with all the things\n  testTeamRoutingRule:\n    type: opsgenie:TeamRoutingRule\n    properties:\n      criterias:\n        - conditions:\n            - expectedValue: expected1\n              field: message\n              not: false\n              operation: contains\n          type: match-any-condition\n      notifies:\n        - name: ${testSchedule.name}\n          type: schedule\n      order: 0\n      teamId: ${testTeam.id}\n      timeRestrictions:\n        - restrictionList:\n            - endDay: tuesday\n              endHour: 18\n              endMin: 30\n              startDay: monday\n              startHour: 8\n              startMin: 0\n          type: weekday-and-time-of-day\n      timezone: America/Los_Angeles\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTeam Routing Rules can be imported using the `team_id/routing_rule_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/teamRoutingRule:TeamRoutingRule ruletest team_id/routing_rule_id`\n```\n\n",
            "properties": {
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleCriteria:TeamRoutingRuleCriteria"
                    },
                    "description": "You can refer Criteria for detailed information about criteria and its fields\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Only use when importing default routing rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the team routing rule\n"
                },
                "notifies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleNotify:TeamRoutingRuleNotify"
                    },
                    "description": "Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: `schedule`, `escalation`, `none`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of the team owning the routing rule\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleTimeRestriction:TeamRoutingRuleTimeRestriction"
                    },
                    "description": "You can refer Time Restriction for detailed information about time restriction and its fields.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones\n"
                }
            },
            "required": [
                "name",
                "notifies",
                "teamId"
            ],
            "inputProperties": {
                "criterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleCriteria:TeamRoutingRuleCriteria"
                    },
                    "description": "You can refer Criteria for detailed information about criteria and its fields\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Only use when importing default routing rule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the team routing rule\n"
                },
                "notifies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleNotify:TeamRoutingRuleNotify"
                    },
                    "description": "Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: `schedule`, `escalation`, `none`\n"
                },
                "order": {
                    "type": "integer",
                    "description": "The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Id of the team owning the routing rule\n"
                },
                "timeRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/TeamRoutingRuleTimeRestriction:TeamRoutingRuleTimeRestriction"
                    },
                    "description": "You can refer Time Restriction for detailed information about time restriction and its fields.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones\n"
                }
            },
            "requiredInputs": [
                "notifies",
                "teamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamRoutingRule resources.\n",
                "properties": {
                    "criterias": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/TeamRoutingRuleCriteria:TeamRoutingRuleCriteria"
                        },
                        "description": "You can refer Criteria for detailed information about criteria and its fields\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Only use when importing default routing rule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the team routing rule\n"
                    },
                    "notifies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/TeamRoutingRuleNotify:TeamRoutingRuleNotify"
                        },
                        "description": "Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: `schedule`, `escalation`, `none`\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "Id of the team owning the routing rule\n"
                    },
                    "timeRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/TeamRoutingRuleTimeRestriction:TeamRoutingRuleTimeRestriction"
                        },
                        "description": "You can refer Time Restriction for detailed information about time restriction and its fields.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones\n"
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/user:User": {
            "description": "Manages a User within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = new opsgenie.User(\"test\", {\n    fullName: \"Test User\",\n    locale: \"en_US\",\n    role: \"User\",\n    skypeUsername: \"skypename\",\n    tags: [\n        \"sre\",\n        \"opsgenie\",\n    ],\n    timezone: \"America/New_York\",\n    userAddresses: [{\n        city: \"City\",\n        country: \"Country\",\n        line: \"Line\",\n        state: \"State\",\n        zipcode: \"998877\",\n    }],\n    userDetails: {\n        key1: \"val1,val2\",\n        key2: \"val3,val4\",\n    },\n    username: \"user@domain.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.User(\"test\",\n    full_name=\"Test User\",\n    locale=\"en_US\",\n    role=\"User\",\n    skype_username=\"skypename\",\n    tags=[\n        \"sre\",\n        \"opsgenie\",\n    ],\n    timezone=\"America/New_York\",\n    user_addresses=[opsgenie.UserUserAddressArgs(\n        city=\"City\",\n        country=\"Country\",\n        line=\"Line\",\n        state=\"State\",\n        zipcode=\"998877\",\n    )],\n    user_details={\n        \"key1\": \"val1,val2\",\n        \"key2\": \"val3,val4\",\n    },\n    username=\"user@domain.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Opsgenie.User(\"test\", new()\n    {\n        FullName = \"Test User\",\n        Locale = \"en_US\",\n        Role = \"User\",\n        SkypeUsername = \"skypename\",\n        Tags = new[]\n        {\n            \"sre\",\n            \"opsgenie\",\n        },\n        Timezone = \"America/New_York\",\n        UserAddresses = new[]\n        {\n            new Opsgenie.Inputs.UserUserAddressArgs\n            {\n                City = \"City\",\n                Country = \"Country\",\n                Line = \"Line\",\n                State = \"State\",\n                Zipcode = \"998877\",\n            },\n        },\n        UserDetails = \n        {\n            { \"key1\", \"val1,val2\" },\n            { \"key2\", \"val3,val4\" },\n        },\n        Username = \"user@domain.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewUser(ctx, \"test\", \u0026opsgenie.UserArgs{\n\t\t\tFullName:      pulumi.String(\"Test User\"),\n\t\t\tLocale:        pulumi.String(\"en_US\"),\n\t\t\tRole:          pulumi.String(\"User\"),\n\t\t\tSkypeUsername: pulumi.String(\"skypename\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sre\"),\n\t\t\t\tpulumi.String(\"opsgenie\"),\n\t\t\t},\n\t\t\tTimezone: pulumi.String(\"America/New_York\"),\n\t\t\tUserAddresses: opsgenie.UserUserAddressArray{\n\t\t\t\t\u0026opsgenie.UserUserAddressArgs{\n\t\t\t\t\tCity:    pulumi.String(\"City\"),\n\t\t\t\t\tCountry: pulumi.String(\"Country\"),\n\t\t\t\t\tLine:    pulumi.String(\"Line\"),\n\t\t\t\t\tState:   pulumi.String(\"State\"),\n\t\t\t\t\tZipcode: pulumi.String(\"998877\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tUserDetails: pulumi.StringMap{\n\t\t\t\t\"key1\": pulumi.String(\"val1,val2\"),\n\t\t\t\t\"key2\": pulumi.String(\"val3,val4\"),\n\t\t\t},\n\t\t\tUsername: pulumi.String(\"user@domain.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.User;\nimport com.pulumi.opsgenie.UserArgs;\nimport com.pulumi.opsgenie.inputs.UserUserAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new User(\"test\", UserArgs.builder()        \n            .fullName(\"Test User\")\n            .locale(\"en_US\")\n            .role(\"User\")\n            .skypeUsername(\"skypename\")\n            .tags(            \n                \"sre\",\n                \"opsgenie\")\n            .timezone(\"America/New_York\")\n            .userAddresses(UserUserAddressArgs.builder()\n                .city(\"City\")\n                .country(\"Country\")\n                .line(\"Line\")\n                .state(\"State\")\n                .zipcode(\"998877\")\n                .build())\n            .userDetails(Map.ofEntries(\n                Map.entry(\"key1\", \"val1,val2\"),\n                Map.entry(\"key2\", \"val3,val4\")\n            ))\n            .username(\"user@domain.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: opsgenie:User\n    properties:\n      fullName: Test User\n      locale: en_US\n      role: User\n      skypeUsername: skypename\n      tags:\n        - sre\n        - opsgenie\n      timezone: America/New_York\n      userAddresses:\n        - city: City\n          country: Country\n          line: Line\n          state: State\n          zipcode: '998877'\n      userDetails:\n        key1: val1,val2\n        key2: val3,val4\n      username: user@domain.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nUsers can be imported using the `user_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/user:User user user_id`\n```\n\n",
            "properties": {
                "fullName": {
                    "type": "string",
                    "description": "The Full Name of the User.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.\n"
                },
                "skypeUsername": {
                    "type": "string",
                    "description": "Skype username of the user.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to be associated with the user.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.\n"
                },
                "userAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/UserUserAddress:UserUserAddress"
                    },
                    "description": "Address of the user.\n"
                },
                "userDetails": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details about the user in form of key and list. of values.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.\n"
                }
            },
            "required": [
                "fullName",
                "role",
                "username"
            ],
            "inputProperties": {
                "fullName": {
                    "type": "string",
                    "description": "The Full Name of the User.\n"
                },
                "locale": {
                    "type": "string",
                    "description": "Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.\n"
                },
                "skypeUsername": {
                    "type": "string",
                    "description": "Skype username of the user.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to be associated with the user.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.\n"
                },
                "userAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/opsgenie:index/UserUserAddress:UserUserAddress"
                    },
                    "description": "Address of the user.\n"
                },
                "userDetails": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Details about the user in form of key and list. of values.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fullName",
                "role",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "The Full Name of the User.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The Role assigned to the User. Either a built-in such as 'Admin' or 'User' - or the name of a custom role.\n"
                    },
                    "skypeUsername": {
                        "type": "string",
                        "description": "Skype username of the user.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to be associated with the user.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.\n"
                    },
                    "userAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/UserUserAddress:UserUserAddress"
                        },
                        "description": "Address of the user.\n"
                    },
                    "userDetails": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Details about the user in form of key and list. of values.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters and must contain lowercase characters only.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "opsgenie:index/userContact:UserContact": {
            "description": "Manages a User Contact.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst sms = new opsgenie.UserContact(\"sms\", {\n    method: \"sms\",\n    to: \"39-123\",\n    username: opsgenie_user.exampleuser.username,\n});\nconst email = new opsgenie.UserContact(\"email\", {\n    method: \"email\",\n    to: \"fahri@opsgenie.com\",\n    username: opsgenie_user.exampleuser.username,\n});\nconst voice = new opsgenie.UserContact(\"voice\", {\n    method: \"voice\",\n    to: \"39-123\",\n    username: opsgenie_user.exampleuser.username,\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\nsms = opsgenie.UserContact(\"sms\",\n    method=\"sms\",\n    to=\"39-123\",\n    username=opsgenie_user[\"exampleuser\"][\"username\"])\nemail = opsgenie.UserContact(\"email\",\n    method=\"email\",\n    to=\"fahri@opsgenie.com\",\n    username=opsgenie_user[\"exampleuser\"][\"username\"])\nvoice = opsgenie.UserContact(\"voice\",\n    method=\"voice\",\n    to=\"39-123\",\n    username=opsgenie_user[\"exampleuser\"][\"username\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sms = new Opsgenie.UserContact(\"sms\", new()\n    {\n        Method = \"sms\",\n        To = \"39-123\",\n        Username = opsgenie_user.Exampleuser.Username,\n    });\n\n    var email = new Opsgenie.UserContact(\"email\", new()\n    {\n        Method = \"email\",\n        To = \"fahri@opsgenie.com\",\n        Username = opsgenie_user.Exampleuser.Username,\n    });\n\n    var voice = new Opsgenie.UserContact(\"voice\", new()\n    {\n        Method = \"voice\",\n        To = \"39-123\",\n        Username = opsgenie_user.Exampleuser.Username,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.NewUserContact(ctx, \"sms\", \u0026opsgenie.UserContactArgs{\n\t\t\tMethod:   pulumi.String(\"sms\"),\n\t\t\tTo:       pulumi.String(\"39-123\"),\n\t\t\tUsername: pulumi.Any(opsgenie_user.Exampleuser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewUserContact(ctx, \"email\", \u0026opsgenie.UserContactArgs{\n\t\t\tMethod:   pulumi.String(\"email\"),\n\t\t\tTo:       pulumi.String(\"fahri@opsgenie.com\"),\n\t\t\tUsername: pulumi.Any(opsgenie_user.Exampleuser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = opsgenie.NewUserContact(ctx, \"voice\", \u0026opsgenie.UserContactArgs{\n\t\t\tMethod:   pulumi.String(\"voice\"),\n\t\t\tTo:       pulumi.String(\"39-123\"),\n\t\t\tUsername: pulumi.Any(opsgenie_user.Exampleuser.Username),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.UserContact;\nimport com.pulumi.opsgenie.UserContactArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var sms = new UserContact(\"sms\", UserContactArgs.builder()        \n            .method(\"sms\")\n            .to(\"39-123\")\n            .username(opsgenie_user.exampleuser().username())\n            .build());\n\n        var email = new UserContact(\"email\", UserContactArgs.builder()        \n            .method(\"email\")\n            .to(\"fahri@opsgenie.com\")\n            .username(opsgenie_user.exampleuser().username())\n            .build());\n\n        var voice = new UserContact(\"voice\", UserContactArgs.builder()        \n            .method(\"voice\")\n            .to(\"39-123\")\n            .username(opsgenie_user.exampleuser().username())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sms:\n    type: opsgenie:UserContact\n    properties:\n      method: sms\n      to: 39-123\n      username: ${opsgenie_user.exampleuser.username}\n  email:\n    type: opsgenie:UserContact\n    properties:\n      method: email\n      to: fahri@opsgenie.com\n      username: ${opsgenie_user.exampleuser.username}\n  voice:\n    type: opsgenie:UserContact\n    properties:\n      method: voice\n      to: 39-123\n      username: ${opsgenie_user.exampleuser.username}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nUsers can be imported using the `username/contact_id`, e.g.\n\n```sh\n$ pulumi import opsgenie:index/userContact:UserContact testcontact username/contact_id`\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable contact of the user in OpsGenie. Default value is true.\n"
                },
                "method": {
                    "type": "string",
                    "description": "This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.\n"
                },
                "to": {
                    "type": "string",
                    "description": "to field is the address of given method.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for contact.(reference)\n"
                }
            },
            "required": [
                "method",
                "to",
                "username"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable contact of the user in OpsGenie. Default value is true.\n"
                },
                "method": {
                    "type": "string",
                    "description": "This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.\n"
                },
                "to": {
                    "type": "string",
                    "description": "to field is the address of given method.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for contact.(reference)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "method",
                "to",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserContact resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable contact of the user in OpsGenie. Default value is true.\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "This parameter is the contact method of user and should be one of email, sms or voice. Please note that adding mobile is not supported from API.\n"
                    },
                    "to": {
                        "type": "string",
                        "description": "to field is the address of given method.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username for contact.(reference)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "opsgenie:index/getEscalation:getEscalation": {
            "description": "Manages an Escalation within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = opsgenie.getEscalation({\n    name: \"existing-escalation\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.get_escalation(name=\"existing-escalation\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Opsgenie.GetEscalation.Invoke(new()\n    {\n        Name = \"existing-escalation\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupEscalation(ctx, \u0026opsgenie.LookupEscalationArgs{\n\t\t\tName: \"existing-escalation\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetEscalationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OpsgenieFunctions.getEscalation(GetEscalationArgs.builder()\n            .name(\"existing-escalation\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: opsgenie:getEscalation\n      Arguments:\n        name: existing-escalation\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEscalation.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Escalation Description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the escalation.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "If owner team exist the id of the team is exported\n"
                    },
                    "repeats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getEscalationRepeat:getEscalationRepeat"
                        },
                        "description": "Escalation repeat preferences\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getEscalationRule:getEscalationRule"
                        },
                        "description": "Escalation rules\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEscalation.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Escalation Description\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "If owner team exist the id of the team is exported\n"
                    },
                    "repeats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getEscalationRepeat:getEscalationRepeat"
                        },
                        "description": "Escalation repeat preferences\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getEscalationRule:getEscalationRule"
                        },
                        "description": "Escalation rules\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "opsgenie:index/getHeartbeat:getHeartbeat": {
            "description": "Manages existing heartbeat within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = opsgenie.getHeartbeat({\n    name: \"genieheartbeat-existing\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.get_heartbeat(name=\"genieheartbeat-existing\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Opsgenie.GetHeartbeat.Invoke(new()\n    {\n        Name = \"genieheartbeat-existing\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupHeartbeat(ctx, \u0026opsgenie.LookupHeartbeatArgs{\n\t\t\tName: \"genieheartbeat-existing\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetHeartbeatArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OpsgenieFunctions.getHeartbeat(GetHeartbeatArgs.builder()\n            .name(\"genieheartbeat-existing\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: opsgenie:getHeartbeat\n      Arguments:\n        name: genieheartbeat-existing\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHeartbeat.\n",
                "properties": {
                    "alertMessage": {
                        "type": "string",
                        "description": "Specifies the alert message for heartbeat expiration alert. If this is not provided, default alert message is \"HeartbeatName is expired\".\n"
                    },
                    "alertPriority": {
                        "type": "string",
                        "description": "Specifies the alert priority for heartbeat expiration alert. If this is not provided, default priority is P3.\n"
                    },
                    "alertTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the alert tags for heartbeat expiration alert.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the heartbeat\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable heartbeat monitoring.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "Specifies how often a heartbeat message should be expected.\n"
                    },
                    "intervalUnit": {
                        "type": "string",
                        "description": "Interval specified as minutes, hours or days.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the heartbeat\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team of the heartbeat.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHeartbeat.\n",
                "properties": {
                    "alertMessage": {
                        "type": "string",
                        "description": "Specifies the alert message for heartbeat expiration alert. If this is not provided, default alert message is \"HeartbeatName is expired\".\n"
                    },
                    "alertPriority": {
                        "type": "string",
                        "description": "Specifies the alert priority for heartbeat expiration alert. If this is not provided, default priority is P3.\n"
                    },
                    "alertTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the alert tags for heartbeat expiration alert.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the heartbeat\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable heartbeat monitoring.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "Specifies how often a heartbeat message should be expected.\n"
                    },
                    "intervalUnit": {
                        "type": "string",
                        "description": "Interval specified as minutes, hours or days.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team of the heartbeat.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "opsgenie:index/getSchedule:getSchedule": {
            "description": "Manages a Schedule within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = opsgenie.getSchedule({\n    name: \"sre-team schedule\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.get_schedule(name=\"sre-team schedule\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Opsgenie.GetSchedule.Invoke(new()\n    {\n        Name = \"sre-team schedule\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupSchedule(ctx, \u0026opsgenie.LookupScheduleArgs{\n\t\t\tName: \"sre-team schedule\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetScheduleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OpsgenieFunctions.getSchedule(GetScheduleArgs.builder()\n            .name(\"sre-team schedule\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: opsgenie:getSchedule\n      Arguments:\n        name: sre-team schedule\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSchedule.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable state of schedule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the schedule.\n"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the schedule.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The description of schedule.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSchedule.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Timezone of schedule. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones - Default: `America/New_York`.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable/disable state of schedule\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerTeamId": {
                        "type": "string",
                        "description": "Owner team id of the schedule.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The description of schedule.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "opsgenie:index/getService:getService": {
            "description": "Manages existing Service within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst this = opsgenie.getService({\n    name: \"Payment\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\nthis = opsgenie.get_service(name=\"Payment\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = Opsgenie.GetService.Invoke(new()\n    {\n        Name = \"Payment\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupService(ctx, \u0026opsgenie.LookupServiceArgs{\n\t\t\tName: \"Payment\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var this = OpsgenieFunctions.getService(GetServiceArgs.builder()\n            .name(\"Payment\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  this:\n    fn::invoke:\n      Function: opsgenie:getService\n      Arguments:\n        name: Payment\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description field of the service that is generally used to provide a detailed information about the service.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the service. This field must not be longer than 100 characters.\n\nThe following attributes are exported:\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "Team id of the service.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "opsgenie:index/getTeam:getTeam": {
            "description": "Manages existing Team within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst sre-team = opsgenie.getTeam({\n    name: \"sre-team\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\nsre_team = opsgenie.get_team(name=\"sre-team\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sre_team = Opsgenie.GetTeam.Invoke(new()\n    {\n        Name = \"sre-team\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupTeam(ctx, \u0026opsgenie.LookupTeamArgs{\n\t\t\tName: \"sre-team\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetTeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var sre-team = OpsgenieFunctions.getTeam(GetTeamArgs.builder()\n            .name(\"sre-team\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  sre-team:\n    fn::invoke:\n      Function: opsgenie:getTeam\n      Arguments:\n        name: sre-team\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTeam.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description for this team.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getTeamMember:getTeamMember"
                        },
                        "description": "A Member block as documented below.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name associated with this team. Opsgenie defines that this must not be longer than 100 characters.\n\nThe following attributes are exported:\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeam.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/opsgenie:index/getTeamMember:getTeamMember"
                        }
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "opsgenie:index/getUser:getUser": {
            "description": "Manages existing User within Opsgenie.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as opsgenie from \"@pulumi/opsgenie\";\n\nconst test = opsgenie.getUser({\n    username: \"user@domain.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_opsgenie as opsgenie\n\ntest = opsgenie.get_user(username=\"user@domain.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Opsgenie = Pulumi.Opsgenie;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Opsgenie.GetUser.Invoke(new()\n    {\n        Username = \"user@domain.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-opsgenie/sdk/go/opsgenie\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := opsgenie.LookupUser(ctx, \u0026opsgenie.LookupUserArgs{\n\t\t\tUsername: \"user@domain.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.opsgenie.OpsgenieFunctions;\nimport com.pulumi.opsgenie.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = OpsgenieFunctions.getUser(GetUserArgs.builder()\n            .username(\"user@domain.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: opsgenie:getUser\n      Arguments:\n        username: user@domain.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "The Full Name of the User.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The Role assigned to the User. Either a built-in such as 'Owner', 'Admin' or 'User' - or the name of a custom role.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The email address associated with this user. Opsgenie defines that this must not be longer than 100 characters.\n"
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "The Full Name of the User.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locale": {
                        "type": "string",
                        "description": "Location information for the user. Please look at [Supported Locale Ids](https://docs.opsgenie.com/docs/supported-locales) for available locales.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The Role assigned to the User. Either a built-in such as 'Owner', 'Admin' or 'User' - or the name of a custom role.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone information of the user. Please look at [Supported Timezone Ids](https://docs.opsgenie.com/docs/supported-timezone-ids) for available timezones.\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "id"
                ]
            }
        }
    }
}